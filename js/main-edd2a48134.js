function toast(e,t,n,i){function o(e){var t=$("<div class='toast'></div>").addClass(n).html(e);return t.hammer({prevent_default:!1}).bind("pan",function(e){var n=e.gesture.deltaX,i=80;t.hasClass("panning")||t.addClass("panning");var o=1-Math.abs(n/i);o<0&&(o=0),t.velocity({left:n,opacity:o},{duration:50,queue:!1,easing:"easeOutQuad"})}).bind("panend",function(e){var n=e.gesture.deltaX,i=80;Math.abs(n)>i?t.velocity({marginTop:"-40px"},{duration:375,easing:"easeOutExpo",queue:!1,complete:function(){t.remove()}}):(t.removeClass("panning"),t.velocity({left:0,opacity:1},{duration:300,easing:"easeOutExpo",queue:!1}))}),t}if(n=n||"",0==$("#toast-container").length){var r=$("<div></div>").attr("id","toast-container");$("body").append(r)}var r=$("#toast-container"),a=o(e);r.append(a),a.css({top:parseFloat(a.css("top"))+35+"px",opacity:0}),a.velocity({top:"0px",opacity:1},{duration:300,easing:"easeOutCubic",queue:!1});var s=t,l=setInterval(function(){0===a.parent().length&&window.clearInterval(l),a.hasClass("panning")||(s-=100),s<=0&&(a.velocity({opacity:0,marginTop:"-40px"},{duration:375,easing:"easeOutExpo",queue:!1,complete:function(){$(this).remove(),"function"==typeof i&&i()}}),window.clearInterval(l))},100)}window.Modernizr=function(e,t,n){function i(e){y.cssText=e}function o(e,t){return typeof e===t}function r(e,t){return!!~(""+e).indexOf(t)}function a(e,t){for(var i in e){var o=e[i];if(!r(o,"-")&&y[o]!==n)return"pfx"!=t||o}return!1}function s(e,t,i){for(var r in e){var a=t[e[r]];if(a!==n)return i===!1?e[r]:o(a,"function")?a.bind(i||t):a}return!1}function l(e,t,n){var i=e.charAt(0).toUpperCase()+e.slice(1),r=(e+" "+x.join(i+" ")+i).split(" ");return o(t,"string")||o(t,"undefined")?a(r,t):(r=(e+" "+S.join(i+" ")+i).split(" "),s(r,t,n))}var c,u,d,f="2.7.1",p={},h=!0,m=t.documentElement,v="modernizr",g=t.createElement(v),y=g.style,b=({}.toString," -webkit- -moz- -o- -ms- ".split(" ")),w="Webkit Moz O ms",x=w.split(" "),S=w.toLowerCase().split(" "),C={},T=[],k=T.slice,I=function(e,n,i,o){var r,a,s,l,c=t.createElement("div"),u=t.body,d=u||t.createElement("body");if(parseInt(i,10))for(;i--;)s=t.createElement("div"),s.id=o?o[i]:v+(i+1),c.appendChild(s);return r=["&#173;",'<style id="s',v,'">',e,"</style>"].join(""),c.id=v,(u?c:d).innerHTML+=r,d.appendChild(c),u||(d.style.background="",d.style.overflow="hidden",l=m.style.overflow,m.style.overflow="hidden",m.appendChild(d)),a=n(c,e),u?c.parentNode.removeChild(c):(d.parentNode.removeChild(d),m.style.overflow=l),!!a},E={}.hasOwnProperty;d=o(E,"undefined")||o(E.call,"undefined")?function(e,t){return t in e&&o(e.constructor.prototype[t],"undefined")}:function(e,t){return E.call(e,t)},Function.prototype.bind||(Function.prototype.bind=function(e){var t=this;if("function"!=typeof t)throw new TypeError;var n=k.call(arguments,1),i=function(){if(this instanceof i){var o=function(){};o.prototype=t.prototype;var r=new o,a=t.apply(r,n.concat(k.call(arguments)));return Object(a)===a?a:r}return t.apply(e,n.concat(k.call(arguments)))};return i}),C.csstransforms3d=function(){var e=!!l("perspective");return e&&"webkitPerspective"in m.style&&I("@media (transform-3d),(-webkit-transform-3d){#modernizr{left:9px;position:absolute;height:3px;}}",function(t,n){e=9===t.offsetLeft&&3===t.offsetHeight}),e},C.csstransitions=function(){return l("transition")};for(var O in C)d(C,O)&&(u=O.toLowerCase(),p[u]=C[O](),T.push((p[u]?"":"no-")+u));return p.addTest=function(e,t){if("object"==typeof e)for(var i in e)d(e,i)&&p.addTest(i,e[i]);else{if(e=e.toLowerCase(),p[e]!==n)return p;t="function"==typeof t?t():t,"undefined"!=typeof h&&h&&(m.className+=" "+(t?"":"no-")+e),p[e]=t}return p},i(""),g=c=null,function(e,t){function n(e,t){var n=e.createElement("p"),i=e.getElementsByTagName("head")[0]||e.documentElement;return n.innerHTML="x<style>"+t+"</style>",i.insertBefore(n.lastChild,i.firstChild)}function i(){var e=y.elements;return"string"==typeof e?e.split(" "):e}function o(e){var t=g[e[m]];return t||(t={},v++,e[m]=v,g[v]=t),t}function r(e,n,i){if(n||(n=t),u)return n.createElement(e);i||(i=o(n));var r;return r=i.cache[e]?i.cache[e].cloneNode():h.test(e)?(i.cache[e]=i.createElem(e)).cloneNode():i.createElem(e),!r.canHaveChildren||p.test(e)||r.tagUrn?r:i.frag.appendChild(r)}function a(e,n){if(e||(e=t),u)return e.createDocumentFragment();n=n||o(e);for(var r=n.frag.cloneNode(),a=0,s=i(),l=s.length;a<l;a++)r.createElement(s[a]);return r}function s(e,t){t.cache||(t.cache={},t.createElem=e.createElement,t.createFrag=e.createDocumentFragment,t.frag=t.createFrag()),e.createElement=function(n){return y.shivMethods?r(n,e,t):t.createElem(n)},e.createDocumentFragment=Function("h,f","return function(){var n=f.cloneNode(),c=n.createElement;h.shivMethods&&("+i().join().replace(/[\w\-]+/g,function(e){return t.createElem(e),t.frag.createElement(e),'c("'+e+'")'})+");return n}")(y,t.frag)}function l(e){e||(e=t);var i=o(e);return y.shivCSS&&!c&&!i.hasCSS&&(i.hasCSS=!!n(e,"article,aside,dialog,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}mark{background:#FF0;color:#000}template{display:none}")),u||s(e,i),e}var c,u,d="3.7.0",f=e.html5||{},p=/^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i,h=/^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i,m="_html5shiv",v=0,g={};!function(){try{var e=t.createElement("a");e.innerHTML="<xyz></xyz>",c="hidden"in e,u=1==e.childNodes.length||function(){t.createElement("a");var e=t.createDocumentFragment();return"undefined"==typeof e.cloneNode||"undefined"==typeof e.createDocumentFragment||"undefined"==typeof e.createElement}()}catch(n){c=!0,u=!0}}();var y={elements:f.elements||"abbr article aside audio bdi canvas data datalist details dialog figcaption figure footer header hgroup main mark meter nav output progress section summary template time video",version:d,shivCSS:f.shivCSS!==!1,supportsUnknownElements:u,shivMethods:f.shivMethods!==!1,type:"default",shivDocument:l,createElement:r,createDocumentFragment:a};e.html5=y,l(t)}(this,t),p._version=f,p._prefixes=b,p._domPrefixes=S,p._cssomPrefixes=x,p.testProp=function(e){return a([e])},p.testAllProps=l,p.testStyles=I,p.prefixed=function(e,t,n){return t?l(e,t,n):l(e,"pfx")},m.className=m.className.replace(/(^|\s)no-js(\s|$)/,"$1$2")+(h?" js "+T.join(" "):""),p}(this,this.document),function(e,t,n){function i(e){return"[object Function]"==v.call(e)}function o(e){return"string"==typeof e}function r(){}function a(e){return!e||"loaded"==e||"complete"==e||"uninitialized"==e}function s(){var e=g.shift();y=1,e?e.t?h(function(){("c"==e.t?f.injectCss:f.injectJs)(e.s,0,e.a,e.x,e.e,1)},0):(e(),s()):y=0}function l(e,n,i,o,r,l,c){function u(t){if(!p&&a(d.readyState)&&(b.r=p=1,!y&&s(),d.onload=d.onreadystatechange=null,t)){"img"!=e&&h(function(){x.removeChild(d)},50);for(var i in I[n])I[n].hasOwnProperty(i)&&I[n][i].onload()}}var c=c||f.errorTimeout,d=t.createElement(e),p=0,v=0,b={t:i,s:n,e:r,a:l,x:c};1===I[n]&&(v=1,I[n]=[]),"object"==e?d.data=n:(d.src=n,d.type=e),d.width=d.height="0",d.onerror=d.onload=d.onreadystatechange=function(){u.call(this,v)},g.splice(o,0,b),"img"!=e&&(v||2===I[n]?(x.insertBefore(d,w?null:m),h(u,c)):I[n].push(d))}function c(e,t,n,i,r){return y=0,t=t||"j",o(e)?l("c"==t?C:S,e,t,this.i++,n,i,r):(g.splice(this.i++,0,e),1==g.length&&s()),this}function u(){var e=f;return e.loader={load:c,i:0},e}var d,f,p=t.documentElement,h=e.setTimeout,m=t.getElementsByTagName("script")[0],v={}.toString,g=[],y=0,b="MozAppearance"in p.style,w=b&&!!t.createRange().compareNode,x=w?p:m.parentNode,p=e.opera&&"[object Opera]"==v.call(e.opera),p=!!t.attachEvent&&!p,S=b?"object":p?"script":"img",C=p?"script":S,T=Array.isArray||function(e){return"[object Array]"==v.call(e)},k=[],I={},E={timeout:function(e,t){return t.length&&(e.timeout=t[0]),e}};f=function(e){function t(e){var t,n,i,e=e.split("!"),o=k.length,r=e.pop(),a=e.length,r={url:r,origUrl:r,prefixes:e};for(n=0;n<a;n++)i=e[n].split("="),(t=E[i.shift()])&&(r=t(r,i));for(n=0;n<o;n++)r=k[n](r);return r}function a(e,o,r,a,s){var l=t(e),c=l.autoCallback;l.url.split(".").pop().split("?").shift(),l.bypass||(o&&(o=i(o)?o:o[e]||o[a]||o[e.split("/").pop().split("?")[0]]),l.instead?l.instead(e,o,r,a,s):(I[l.url]?l.noexec=!0:I[l.url]=1,r.load(l.url,l.forceCSS||!l.forceJS&&"css"==l.url.split(".").pop().split("?").shift()?"c":n,l.noexec,l.attrs,l.timeout),(i(o)||i(c))&&r.load(function(){u(),o&&o(l.origUrl,s,a),c&&c(l.origUrl,s,a),I[l.url]=2})))}function s(e,t){function n(e,n){if(e){if(o(e))n||(d=function(){var e=[].slice.call(arguments);f.apply(this,e),p()}),a(e,d,t,0,c);else if(Object(e)===e)for(l in s=function(){var t,n=0;for(t in e)e.hasOwnProperty(t)&&n++;return n}(),e)e.hasOwnProperty(l)&&(!n&&!--s&&(i(d)?d=function(){var e=[].slice.call(arguments);f.apply(this,e),p()}:d[l]=function(e){return function(){var t=[].slice.call(arguments);e&&e.apply(this,t),p()}}(f[l])),a(e[l],d,t,l,c))}else!n&&p()}var s,l,c=!!e.test,u=e.load||e.both,d=e.callback||r,f=d,p=e.complete||r;n(c?e.yep:e.nope,!!u),u&&n(u)}var l,c,d=this.yepnope.loader;if(o(e))a(e,0,d,0);else if(T(e))for(l=0;l<e.length;l++)c=e[l],o(c)?a(c,0,d,0):T(c)?f(c):Object(c)===c&&s(c,d);else Object(e)===e&&s(e,d)},f.addPrefix=function(e,t){E[e]=t},f.addFilter=function(e){k.push(e)},f.errorTimeout=1e4,null==t.readyState&&t.addEventListener&&(t.readyState="loading",t.addEventListener("DOMContentLoaded",d=function(){t.removeEventListener("DOMContentLoaded",d,0),t.readyState="complete"},0)),e.yepnope=u(),e.yepnope.executeStack=s,e.yepnope.injectJs=function(e,n,i,o,l,c){var u,d,p=t.createElement("script"),o=o||f.errorTimeout;p.src=e;for(d in i)p.setAttribute(d,i[d]);n=c?s:n||r,p.onreadystatechange=p.onload=function(){!u&&a(p.readyState)&&(u=1,n(),p.onload=p.onreadystatechange=null)},h(function(){u||(u=1,n(1))},o),l?p.onload():m.parentNode.insertBefore(p,m)},e.yepnope.injectCss=function(e,n,i,o,a,l){var c,o=t.createElement("link"),n=l?s:n||r;o.href=e,o.rel="stylesheet",o.type="text/css";for(c in i)o.setAttribute(c,i[c]);a||(m.parentNode.insertBefore(o,m),h(n,0))}}(this,document),Modernizr.load=function(){yepnope.apply(window,[].slice.call(arguments,0))},Modernizr.addTest("pointerevents",function(){var e,t=document.createElement("x"),n=document.documentElement,i=window.getComputedStyle;return"pointerEvents"in t.style&&(t.style.pointerEvents="auto",t.style.pointerEvents="x",n.appendChild(t),e=i&&"auto"===i(t,"").pointerEvents,n.removeChild(t),!!e)}),!function(e,t){"object"==typeof module&&"object"==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error("jQuery requires a window with a document");return t(e)}:t(e)}("undefined"!=typeof window?window:this,function(e,t){function n(e){var t=e.length,n=K.type(e);return"function"!==n&&!K.isWindow(e)&&(!(1!==e.nodeType||!t)||("array"===n||0===t||"number"==typeof t&&t>0&&t-1 in e))}function i(e,t,n){if(K.isFunction(t))return K.grep(e,function(e,i){return!!t.call(e,i,e)!==n});if(t.nodeType)return K.grep(e,function(e){return e===t!==n});if("string"==typeof t){if(se.test(t))return K.filter(t,e,n);t=K.filter(t,e)}return K.grep(e,function(e){return Q.call(t,e)>=0!==n})}function o(e,t){for(;(e=e[t])&&1!==e.nodeType;);return e}function r(e){var t=he[e]={};return K.each(e.match(pe)||[],function(e,n){t[n]=!0}),t}function a(){J.removeEventListener("DOMContentLoaded",a,!1),e.removeEventListener("load",a,!1),K.ready()}function s(){Object.defineProperty(this.cache={},0,{get:function(){return{}}}),this.expando=K.expando+s.uid++}function l(e,t,n){var i;if(void 0===n&&1===e.nodeType)if(i="data-"+t.replace(we,"-$1").toLowerCase(),n=e.getAttribute(i),"string"==typeof n){try{n="true"===n||"false"!==n&&("null"===n?null:+n+""===n?+n:be.test(n)?K.parseJSON(n):n)}catch(o){}ye.set(e,t,n)}else n=void 0;return n}function c(){return!0}function u(){return!1}function d(){try{return J.activeElement}catch(e){}}function f(e,t){return K.nodeName(e,"table")&&K.nodeName(11!==t.nodeType?t:t.firstChild,"tr")?e.getElementsByTagName("tbody")[0]||e.appendChild(e.ownerDocument.createElement("tbody")):e}function p(e){return e.type=(null!==e.getAttribute("type"))+"/"+e.type,e}function h(e){var t=qe.exec(e.type);return t?e.type=t[1]:e.removeAttribute("type"),e}function m(e,t){for(var n=0,i=e.length;i>n;n++)ge.set(e[n],"globalEval",!t||ge.get(t[n],"globalEval"))}function v(e,t){var n,i,o,r,a,s,l,c;if(1===t.nodeType){if(ge.hasData(e)&&(r=ge.access(e),a=ge.set(t,r),c=r.events)){delete a.handle,a.events={};for(o in c)for(n=0,i=c[o].length;i>n;n++)K.event.add(t,o,c[o][n])}ye.hasData(e)&&(s=ye.access(e),l=K.extend({},s),ye.set(t,l))}}function g(e,t){var n=e.getElementsByTagName?e.getElementsByTagName(t||"*"):e.querySelectorAll?e.querySelectorAll(t||"*"):[];return void 0===t||t&&K.nodeName(e,t)?K.merge([e],n):n}function y(e,t){var n=t.nodeName.toLowerCase();"input"===n&&Te.test(e.type)?t.checked=e.checked:("input"===n||"textarea"===n)&&(t.defaultValue=e.defaultValue)}function b(t,n){var i,o=K(n.createElement(t)).appendTo(n.body),r=e.getDefaultComputedStyle&&(i=e.getDefaultComputedStyle(o[0]))?i.display:K.css(o[0],"display");return o.detach(),r}function w(e){var t=J,n=_e[e];return n||(n=b(e,t),"none"!==n&&n||(He=(He||K("<iframe frameborder='0' width='0' height='0'/>")).appendTo(t.documentElement),t=He[0].contentDocument,t.write(),t.close(),n=b(e,t),He.detach()),_e[e]=n),n}function x(e,t,n){var i,o,r,a,s=e.style;return n=n||Be(e),n&&(a=n.getPropertyValue(t)||n[t]),n&&(""!==a||K.contains(e.ownerDocument,e)||(a=K.style(e,t)),Re.test(a)&&We.test(t)&&(i=s.width,o=s.minWidth,r=s.maxWidth,s.minWidth=s.maxWidth=s.width=a,a=n.width,s.width=i,s.minWidth=o,s.maxWidth=r)),void 0!==a?a+"":a}function S(e,t){return{get:function(){return e()?void delete this.get:(this.get=t).apply(this,arguments)}}}function C(e,t){if(t in e)return t;for(var n=t[0].toUpperCase()+t.slice(1),i=t,o=Ue.length;o--;)if(t=Ue[o]+n,t in e)return t;return i}function T(e,t,n){var i=Ve.exec(t);return i?Math.max(0,i[1]-(n||0))+(i[2]||"px"):t}function k(e,t,n,i,o){for(var r=n===(i?"border":"content")?4:"width"===t?1:0,a=0;4>r;r+=2)"margin"===n&&(a+=K.css(e,n+Se[r],!0,o)),i?("content"===n&&(a-=K.css(e,"padding"+Se[r],!0,o)),"margin"!==n&&(a-=K.css(e,"border"+Se[r]+"Width",!0,o))):(a+=K.css(e,"padding"+Se[r],!0,o),"padding"!==n&&(a+=K.css(e,"border"+Se[r]+"Width",!0,o)));return a}function I(e,t,n){var i=!0,o="width"===t?e.offsetWidth:e.offsetHeight,r=Be(e),a="border-box"===K.css(e,"boxSizing",!1,r);if(0>=o||null==o){if(o=x(e,t,r),(0>o||null==o)&&(o=e.style[t]),Re.test(o))return o;i=a&&(G.boxSizingReliable()||o===e.style[t]),o=parseFloat(o)||0}return o+k(e,t,n||(a?"border":"content"),i,r)+"px"}function E(e,t){for(var n,i,o,r=[],a=0,s=e.length;s>a;a++)i=e[a],i.style&&(r[a]=ge.get(i,"olddisplay"),n=i.style.display,t?(r[a]||"none"!==n||(i.style.display=""),""===i.style.display&&Ce(i)&&(r[a]=ge.access(i,"olddisplay",w(i.nodeName)))):(o=Ce(i),"none"===n&&o||ge.set(i,"olddisplay",o?n:K.css(i,"display"))));for(a=0;s>a;a++)i=e[a],i.style&&(t&&"none"!==i.style.display&&""!==i.style.display||(i.style.display=t?r[a]||"":"none"));return e}function O(e,t,n,i,o){return new O.prototype.init(e,t,n,i,o)}function P(){return setTimeout(function(){Ge=void 0}),Ge=K.now()}function A(e,t){var n,i=0,o={height:e};for(t=t?1:0;4>i;i+=2-t)n=Se[i],o["margin"+n]=o["padding"+n]=e;return t&&(o.opacity=o.width=e),o}function N(e,t,n){for(var i,o=(nt[t]||[]).concat(nt["*"]),r=0,a=o.length;a>r;r++)if(i=o[r].call(n,t,e))return i}function j(e,t,n){var i,o,r,a,s,l,c,u,d=this,f={},p=e.style,h=e.nodeType&&Ce(e),m=ge.get(e,"fxshow");n.queue||(s=K._queueHooks(e,"fx"),null==s.unqueued&&(s.unqueued=0,l=s.empty.fire,s.empty.fire=function(){s.unqueued||l()}),s.unqueued++,d.always(function(){d.always(function(){s.unqueued--,K.queue(e,"fx").length||s.empty.fire()})})),1===e.nodeType&&("height"in t||"width"in t)&&(n.overflow=[p.overflow,p.overflowX,p.overflowY],c=K.css(e,"display"),u="none"===c?ge.get(e,"olddisplay")||w(e.nodeName):c,"inline"===u&&"none"===K.css(e,"float")&&(p.display="inline-block")),n.overflow&&(p.overflow="hidden",d.always(function(){p.overflow=n.overflow[0],p.overflowX=n.overflow[1],p.overflowY=n.overflow[2]}));for(i in t)if(o=t[i],Ze.exec(o)){if(delete t[i],r=r||"toggle"===o,o===(h?"hide":"show")){if("show"!==o||!m||void 0===m[i])continue;h=!0}f[i]=m&&m[i]||K.style(e,i)}else c=void 0;if(K.isEmptyObject(f))"inline"===("none"===c?w(e.nodeName):c)&&(p.display=c);else{m?"hidden"in m&&(h=m.hidden):m=ge.access(e,"fxshow",{}),r&&(m.hidden=!h),h?K(e).show():d.done(function(){K(e).hide()}),d.done(function(){var t;ge.remove(e,"fxshow");for(t in f)K.style(e,t,f[t])});for(i in f)a=N(h?m[i]:0,i,d),i in m||(m[i]=a.start,h&&(a.end=a.start,a.start="width"===i||"height"===i?1:0))}}function D(e,t){var n,i,o,r,a;for(n in e)if(i=K.camelCase(n),o=t[i],r=e[n],K.isArray(r)&&(o=r[1],r=e[n]=r[0]),n!==i&&(e[i]=r,delete e[n]),a=K.cssHooks[i],a&&"expand"in a){r=a.expand(r),delete e[i];for(n in r)n in e||(e[n]=r[n],t[n]=o)}else t[i]=o}function M(e,t,n){var i,o,r=0,a=tt.length,s=K.Deferred().always(function(){delete l.elem}),l=function(){if(o)return!1;for(var t=Ge||P(),n=Math.max(0,c.startTime+c.duration-t),i=n/c.duration||0,r=1-i,a=0,l=c.tweens.length;l>a;a++)c.tweens[a].run(r);return s.notifyWith(e,[c,r,n]),1>r&&l?n:(s.resolveWith(e,[c]),!1)},c=s.promise({elem:e,props:K.extend({},t),opts:K.extend(!0,{specialEasing:{}},n),originalProperties:t,originalOptions:n,startTime:Ge||P(),duration:n.duration,tweens:[],createTween:function(t,n){var i=K.Tween(e,c.opts,t,n,c.opts.specialEasing[t]||c.opts.easing);return c.tweens.push(i),i},stop:function(t){var n=0,i=t?c.tweens.length:0;if(o)return this;for(o=!0;i>n;n++)c.tweens[n].run(1);return t?s.resolveWith(e,[c,t]):s.rejectWith(e,[c,t]),this}}),u=c.props;for(D(u,c.opts.specialEasing);a>r;r++)if(i=tt[r].call(c,e,u,c.opts))return i;return K.map(u,N,c),K.isFunction(c.opts.start)&&c.opts.start.call(e,c),K.fx.timer(K.extend(l,{elem:e,anim:c,queue:c.opts.queue})),c.progress(c.opts.progress).done(c.opts.done,c.opts.complete).fail(c.opts.fail).always(c.opts.always)}function $(e){return function(t,n){"string"!=typeof t&&(n=t,t="*");var i,o=0,r=t.toLowerCase().match(pe)||[];if(K.isFunction(n))for(;i=r[o++];)"+"===i[0]?(i=i.slice(1)||"*",(e[i]=e[i]||[]).unshift(n)):(e[i]=e[i]||[]).push(n)}}function q(e,t,n,i){function o(s){var l;return r[s]=!0,K.each(e[s]||[],function(e,s){var c=s(t,n,i);return"string"!=typeof c||a||r[c]?a?!(l=c):void 0:(t.dataTypes.unshift(c),o(c),!1)}),l}var r={},a=e===bt;return o(t.dataTypes[0])||!r["*"]&&o("*")}function L(e,t){var n,i,o=K.ajaxSettings.flatOptions||{};for(n in t)void 0!==t[n]&&((o[n]?e:i||(i={}))[n]=t[n]);return i&&K.extend(!0,e,i),e}function F(e,t,n){for(var i,o,r,a,s=e.contents,l=e.dataTypes;"*"===l[0];)l.shift(),void 0===i&&(i=e.mimeType||t.getResponseHeader("Content-Type"));if(i)for(o in s)if(s[o]&&s[o].test(i)){l.unshift(o);break}if(l[0]in n)r=l[0];else{for(o in n){if(!l[0]||e.converters[o+" "+l[0]]){r=o;break}a||(a=o)}r=r||a}return r?(r!==l[0]&&l.unshift(r),n[r]):void 0}function H(e,t,n,i){var o,r,a,s,l,c={},u=e.dataTypes.slice();if(u[1])for(a in e.converters)c[a.toLowerCase()]=e.converters[a];for(r=u.shift();r;)if(e.responseFields[r]&&(n[e.responseFields[r]]=t),!l&&i&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),l=r,r=u.shift())if("*"===r)r=l;else if("*"!==l&&l!==r){if(a=c[l+" "+r]||c["* "+r],!a)for(o in c)if(s=o.split(" "),s[1]===r&&(a=c[l+" "+s[0]]||c["* "+s[0]])){a===!0?a=c[o]:c[o]!==!0&&(r=s[0],u.unshift(s[1]));break}if(a!==!0)if(a&&e["throws"])t=a(t);else try{t=a(t)}catch(d){return{state:"parsererror",error:a?d:"No conversion from "+l+" to "+r}}}return{state:"success",data:t}}function _(e,t,n,i){var o;if(K.isArray(t))K.each(t,function(t,o){n||Tt.test(e)?i(e,o):_(e+"["+("object"==typeof o?t:"")+"]",o,n,i)});else if(n||"object"!==K.type(t))i(e,t);else for(o in t)_(e+"["+o+"]",t[o],n,i)}function W(e){return K.isWindow(e)?e:9===e.nodeType&&e.defaultView}var R=[],B=R.slice,z=R.concat,V=R.push,Q=R.indexOf,X={},Y=X.toString,U=X.hasOwnProperty,G={},J=e.document,Z="2.1.3",K=function(e,t){return new K.fn.init(e,t)},ee=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,te=/^-ms-/,ne=/-([\da-z])/gi,ie=function(e,t){return t.toUpperCase()};K.fn=K.prototype={jquery:Z,constructor:K,selector:"",length:0,toArray:function(){return B.call(this)},get:function(e){return null!=e?0>e?this[e+this.length]:this[e]:B.call(this)},pushStack:function(e){var t=K.merge(this.constructor(),e);return t.prevObject=this,t.context=this.context,t},each:function(e,t){return K.each(this,e,t)},map:function(e){return this.pushStack(K.map(this,function(t,n){return e.call(t,n,t)}))},slice:function(){return this.pushStack(B.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var t=this.length,n=+e+(0>e?t:0);return this.pushStack(n>=0&&t>n?[this[n]]:[])},end:function(){return this.prevObject||this.constructor(null)},push:V,sort:R.sort,splice:R.splice},K.extend=K.fn.extend=function(){var e,t,n,i,o,r,a=arguments[0]||{},s=1,l=arguments.length,c=!1;for("boolean"==typeof a&&(c=a,a=arguments[s]||{},s++),"object"==typeof a||K.isFunction(a)||(a={}),s===l&&(a=this,s--);l>s;s++)if(null!=(e=arguments[s]))for(t in e)n=a[t],i=e[t],a!==i&&(c&&i&&(K.isPlainObject(i)||(o=K.isArray(i)))?(o?(o=!1,r=n&&K.isArray(n)?n:[]):r=n&&K.isPlainObject(n)?n:{},a[t]=K.extend(c,r,i)):void 0!==i&&(a[t]=i));return a},K.extend({expando:"jQuery"+(Z+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isFunction:function(e){return"function"===K.type(e)},isArray:Array.isArray,isWindow:function(e){return null!=e&&e===e.window},isNumeric:function(e){return!K.isArray(e)&&e-parseFloat(e)+1>=0},isPlainObject:function(e){return"object"===K.type(e)&&!e.nodeType&&!K.isWindow(e)&&!(e.constructor&&!U.call(e.constructor.prototype,"isPrototypeOf"))},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},type:function(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?X[Y.call(e)]||"object":typeof e},globalEval:function(e){var t,n=eval;e=K.trim(e),e&&(1===e.indexOf("use strict")?(t=J.createElement("script"),t.text=e,J.head.appendChild(t).parentNode.removeChild(t)):n(e))},camelCase:function(e){return e.replace(te,"ms-").replace(ne,ie)},nodeName:function(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()},each:function(e,t,i){var o,r=0,a=e.length,s=n(e);if(i){if(s)for(;a>r&&(o=t.apply(e[r],i),o!==!1);r++);else for(r in e)if(o=t.apply(e[r],i),o===!1)break}else if(s)for(;a>r&&(o=t.call(e[r],r,e[r]),o!==!1);r++);else for(r in e)if(o=t.call(e[r],r,e[r]),o===!1)break;return e},trim:function(e){return null==e?"":(e+"").replace(ee,"")},makeArray:function(e,t){var i=t||[];return null!=e&&(n(Object(e))?K.merge(i,"string"==typeof e?[e]:e):V.call(i,e)),i},inArray:function(e,t,n){return null==t?-1:Q.call(t,e,n)},merge:function(e,t){for(var n=+t.length,i=0,o=e.length;n>i;i++)e[o++]=t[i];return e.length=o,e},grep:function(e,t,n){for(var i,o=[],r=0,a=e.length,s=!n;a>r;r++)i=!t(e[r],r),i!==s&&o.push(e[r]);return o},map:function(e,t,i){var o,r=0,a=e.length,s=n(e),l=[];if(s)for(;a>r;r++)o=t(e[r],r,i),null!=o&&l.push(o);else for(r in e)o=t(e[r],r,i),null!=o&&l.push(o);return z.apply([],l)},guid:1,proxy:function(e,t){var n,i,o;return"string"==typeof t&&(n=e[t],t=e,e=n),K.isFunction(e)?(i=B.call(arguments,2),o=function(){return e.apply(t||this,i.concat(B.call(arguments)))},o.guid=e.guid=e.guid||K.guid++,o):void 0},now:Date.now,support:G}),K.each("Boolean Number String Function Array Date RegExp Object Error".split(" "),function(e,t){X["[object "+t+"]"]=t.toLowerCase()});var oe=function(e){function t(e,t,n,i){var o,r,a,s,l,c,d,p,h,m;if((t?t.ownerDocument||t:_)!==j&&N(t),t=t||j,n=n||[],s=t.nodeType,"string"!=typeof e||!e||1!==s&&9!==s&&11!==s)return n;if(!i&&M){if(11!==s&&(o=ye.exec(e)))if(a=o[1]){if(9===s){if(r=t.getElementById(a),!r||!r.parentNode)return n;if(r.id===a)return n.push(r),n}else if(t.ownerDocument&&(r=t.ownerDocument.getElementById(a))&&F(t,r)&&r.id===a)return n.push(r),n}else{if(o[2])return Z.apply(n,t.getElementsByTagName(e)),n;if((a=o[3])&&x.getElementsByClassName)return Z.apply(n,t.getElementsByClassName(a)),n}if(x.qsa&&(!$||!$.test(e))){if(p=d=H,h=t,m=1!==s&&e,1===s&&"object"!==t.nodeName.toLowerCase()){for(c=k(e),(d=t.getAttribute("id"))?p=d.replace(we,"\\$&"):t.setAttribute("id",p),p="[id='"+p+"'] ",l=c.length;l--;)c[l]=p+f(c[l]);h=be.test(e)&&u(t.parentNode)||t,m=c.join(",")}if(m)try{return Z.apply(n,h.querySelectorAll(m)),n}catch(v){}finally{d||t.removeAttribute("id")}}}return E(e.replace(le,"$1"),t,n,i)}function n(){function e(n,i){return t.push(n+" ")>S.cacheLength&&delete e[t.shift()],e[n+" "]=i}var t=[];return e}function i(e){return e[H]=!0,e}function o(e){var t=j.createElement("div");try{return!!e(t)}catch(n){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function r(e,t){for(var n=e.split("|"),i=e.length;i--;)S.attrHandle[n[i]]=t}function a(e,t){var n=t&&e,i=n&&1===e.nodeType&&1===t.nodeType&&(~t.sourceIndex||X)-(~e.sourceIndex||X);if(i)return i;if(n)for(;n=n.nextSibling;)if(n===t)return-1;return e?1:-1}function s(e){return function(t){var n=t.nodeName.toLowerCase();return"input"===n&&t.type===e}}function l(e){return function(t){var n=t.nodeName.toLowerCase();return("input"===n||"button"===n)&&t.type===e}}function c(e){return i(function(t){return t=+t,i(function(n,i){for(var o,r=e([],n.length,t),a=r.length;a--;)n[o=r[a]]&&(n[o]=!(i[o]=n[o]))})})}function u(e){return e&&"undefined"!=typeof e.getElementsByTagName&&e}function d(){}function f(e){for(var t=0,n=e.length,i="";n>t;t++)i+=e[t].value;return i}function p(e,t,n){var i=t.dir,o=n&&"parentNode"===i,r=R++;return t.first?function(t,n,r){for(;t=t[i];)if(1===t.nodeType||o)return e(t,n,r)}:function(t,n,a){var s,l,c=[W,r];if(a){for(;t=t[i];)if((1===t.nodeType||o)&&e(t,n,a))return!0}else for(;t=t[i];)if(1===t.nodeType||o){if(l=t[H]||(t[H]={}),(s=l[i])&&s[0]===W&&s[1]===r)return c[2]=s[2];if(l[i]=c,c[2]=e(t,n,a))return!0}}}function h(e){return e.length>1?function(t,n,i){for(var o=e.length;o--;)if(!e[o](t,n,i))return!1;return!0}:e[0]}function m(e,n,i){for(var o=0,r=n.length;r>o;o++)t(e,n[o],i);return i}function v(e,t,n,i,o){for(var r,a=[],s=0,l=e.length,c=null!=t;l>s;s++)(r=e[s])&&(!n||n(r,i,o))&&(a.push(r),c&&t.push(s));return a}function g(e,t,n,o,r,a){return o&&!o[H]&&(o=g(o)),r&&!r[H]&&(r=g(r,a)),i(function(i,a,s,l){var c,u,d,f=[],p=[],h=a.length,g=i||m(t||"*",s.nodeType?[s]:s,[]),y=!e||!i&&t?g:v(g,f,e,s,l),b=n?r||(i?e:h||o)?[]:a:y;if(n&&n(y,b,s,l),o)for(c=v(b,p),o(c,[],s,l),u=c.length;u--;)(d=c[u])&&(b[p[u]]=!(y[p[u]]=d));if(i){if(r||e){if(r){for(c=[],u=b.length;u--;)(d=b[u])&&c.push(y[u]=d);r(null,b=[],c,l)}for(u=b.length;u--;)(d=b[u])&&(c=r?ee(i,d):f[u])>-1&&(i[c]=!(a[c]=d))}}else b=v(b===a?b.splice(h,b.length):b),r?r(null,a,b,l):Z.apply(a,b)})}function y(e){for(var t,n,i,o=e.length,r=S.relative[e[0].type],a=r||S.relative[" "],s=r?1:0,l=p(function(e){return e===t},a,!0),c=p(function(e){return ee(t,e)>-1},a,!0),u=[function(e,n,i){var o=!r&&(i||n!==O)||((t=n).nodeType?l(e,n,i):c(e,n,i));return t=null,o}];o>s;s++)if(n=S.relative[e[s].type])u=[p(h(u),n)];else{if(n=S.filter[e[s].type].apply(null,e[s].matches),n[H]){for(i=++s;o>i&&!S.relative[e[i].type];i++);return g(s>1&&h(u),s>1&&f(e.slice(0,s-1).concat({value:" "===e[s-2].type?"*":""})).replace(le,"$1"),n,i>s&&y(e.slice(s,i)),o>i&&y(e=e.slice(i)),o>i&&f(e))}u.push(n)}return h(u)}function b(e,n){var o=n.length>0,r=e.length>0,a=function(i,a,s,l,c){var u,d,f,p=0,h="0",m=i&&[],g=[],y=O,b=i||r&&S.find.TAG("*",c),w=W+=null==y?1:Math.random()||.1,x=b.length;for(c&&(O=a!==j&&a);h!==x&&null!=(u=b[h]);h++){if(r&&u){for(d=0;f=e[d++];)if(f(u,a,s)){l.push(u);break}c&&(W=w)}o&&((u=!f&&u)&&p--,i&&m.push(u))}if(p+=h,o&&h!==p){for(d=0;f=n[d++];)f(m,g,a,s);if(i){if(p>0)for(;h--;)m[h]||g[h]||(g[h]=G.call(l));g=v(g)}Z.apply(l,g),c&&!i&&g.length>0&&p+n.length>1&&t.uniqueSort(l)}return c&&(W=w,O=y),m};return o?i(a):a}var w,x,S,C,T,k,I,E,O,P,A,N,j,D,M,$,q,L,F,H="sizzle"+1*new Date,_=e.document,W=0,R=0,B=n(),z=n(),V=n(),Q=function(e,t){return e===t&&(A=!0),0},X=1<<31,Y={}.hasOwnProperty,U=[],G=U.pop,J=U.push,Z=U.push,K=U.slice,ee=function(e,t){for(var n=0,i=e.length;i>n;n++)if(e[n]===t)return n;return-1},te="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",ne="[\\x20\\t\\r\\n\\f]",ie="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",oe=ie.replace("w","w#"),re="\\["+ne+"*("+ie+")(?:"+ne+"*([*^$|!~]?=)"+ne+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+oe+"))|)"+ne+"*\\]",ae=":("+ie+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+re+")*)|.*)\\)|)",se=new RegExp(ne+"+","g"),le=new RegExp("^"+ne+"+|((?:^|[^\\\\])(?:\\\\.)*)"+ne+"+$","g"),ce=new RegExp("^"+ne+"*,"+ne+"*"),ue=new RegExp("^"+ne+"*([>+~]|"+ne+")"+ne+"*"),de=new RegExp("="+ne+"*([^\\]'\"]*?)"+ne+"*\\]","g"),fe=new RegExp(ae),pe=new RegExp("^"+oe+"$"),he={ID:new RegExp("^#("+ie+")"),CLASS:new RegExp("^\\.("+ie+")"),TAG:new RegExp("^("+ie.replace("w","w*")+")"),ATTR:new RegExp("^"+re),PSEUDO:new RegExp("^"+ae),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+ne+"*(even|odd|(([+-]|)(\\d*)n|)"+ne+"*(?:([+-]|)"+ne+"*(\\d+)|))"+ne+"*\\)|)","i"),bool:new RegExp("^(?:"+te+")$","i"),needsContext:new RegExp("^"+ne+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+ne+"*((?:-\\d)?\\d*)"+ne+"*\\)|)(?=[^-]|$)","i")},me=/^(?:input|select|textarea|button)$/i,ve=/^h\d$/i,ge=/^[^{]+\{\s*\[native \w/,ye=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,be=/[+~]/,we=/'|\\/g,xe=new RegExp("\\\\([\\da-f]{1,6}"+ne+"?|("+ne+")|.)","ig"),Se=function(e,t,n){var i="0x"+t-65536;return i!==i||n?t:0>i?String.fromCharCode(i+65536):String.fromCharCode(i>>10|55296,1023&i|56320)},Ce=function(){N()};try{Z.apply(U=K.call(_.childNodes),_.childNodes),U[_.childNodes.length].nodeType}catch(Te){Z={apply:U.length?function(e,t){J.apply(e,K.call(t))}:function(e,t){for(var n=e.length,i=0;e[n++]=t[i++];);e.length=n-1}}}x=t.support={},T=t.isXML=function(e){var t=e&&(e.ownerDocument||e).documentElement;return!!t&&"HTML"!==t.nodeName},N=t.setDocument=function(e){var t,n,i=e?e.ownerDocument||e:_;return i!==j&&9===i.nodeType&&i.documentElement?(j=i,D=i.documentElement,n=i.defaultView,n&&n!==n.top&&(n.addEventListener?n.addEventListener("unload",Ce,!1):n.attachEvent&&n.attachEvent("onunload",Ce)),M=!T(i),x.attributes=o(function(e){return e.className="i",!e.getAttribute("className")}),x.getElementsByTagName=o(function(e){return e.appendChild(i.createComment("")),!e.getElementsByTagName("*").length}),x.getElementsByClassName=ge.test(i.getElementsByClassName),x.getById=o(function(e){return D.appendChild(e).id=H,!i.getElementsByName||!i.getElementsByName(H).length}),x.getById?(S.find.ID=function(e,t){if("undefined"!=typeof t.getElementById&&M){var n=t.getElementById(e);return n&&n.parentNode?[n]:[]}},S.filter.ID=function(e){var t=e.replace(xe,Se);return function(e){return e.getAttribute("id")===t}}):(delete S.find.ID,S.filter.ID=function(e){var t=e.replace(xe,Se);return function(e){var n="undefined"!=typeof e.getAttributeNode&&e.getAttributeNode("id");return n&&n.value===t}}),S.find.TAG=x.getElementsByTagName?function(e,t){return"undefined"!=typeof t.getElementsByTagName?t.getElementsByTagName(e):x.qsa?t.querySelectorAll(e):void 0}:function(e,t){var n,i=[],o=0,r=t.getElementsByTagName(e);if("*"===e){for(;n=r[o++];)1===n.nodeType&&i.push(n);return i}return r},S.find.CLASS=x.getElementsByClassName&&function(e,t){return M?t.getElementsByClassName(e):void 0},q=[],$=[],(x.qsa=ge.test(i.querySelectorAll))&&(o(function(e){D.appendChild(e).innerHTML="<a id='"+H+"'></a><select id='"+H+"-\f]' msallowcapture=''><option selected=''></option></select>",e.querySelectorAll("[msallowcapture^='']").length&&$.push("[*^$]="+ne+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||$.push("\\["+ne+"*(?:value|"+te+")"),e.querySelectorAll("[id~="+H+"-]").length||$.push("~="),
e.querySelectorAll(":checked").length||$.push(":checked"),e.querySelectorAll("a#"+H+"+*").length||$.push(".#.+[+~]")}),o(function(e){var t=i.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&$.push("name"+ne+"*[*^$|!~]?="),e.querySelectorAll(":enabled").length||$.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),$.push(",.*:")})),(x.matchesSelector=ge.test(L=D.matches||D.webkitMatchesSelector||D.mozMatchesSelector||D.oMatchesSelector||D.msMatchesSelector))&&o(function(e){x.disconnectedMatch=L.call(e,"div"),L.call(e,"[s!='']:x"),q.push("!=",ae)}),$=$.length&&new RegExp($.join("|")),q=q.length&&new RegExp(q.join("|")),t=ge.test(D.compareDocumentPosition),F=t||ge.test(D.contains)?function(e,t){var n=9===e.nodeType?e.documentElement:e,i=t&&t.parentNode;return e===i||!(!i||1!==i.nodeType||!(n.contains?n.contains(i):e.compareDocumentPosition&&16&e.compareDocumentPosition(i)))}:function(e,t){if(t)for(;t=t.parentNode;)if(t===e)return!0;return!1},Q=t?function(e,t){if(e===t)return A=!0,0;var n=!e.compareDocumentPosition-!t.compareDocumentPosition;return n?n:(n=(e.ownerDocument||e)===(t.ownerDocument||t)?e.compareDocumentPosition(t):1,1&n||!x.sortDetached&&t.compareDocumentPosition(e)===n?e===i||e.ownerDocument===_&&F(_,e)?-1:t===i||t.ownerDocument===_&&F(_,t)?1:P?ee(P,e)-ee(P,t):0:4&n?-1:1)}:function(e,t){if(e===t)return A=!0,0;var n,o=0,r=e.parentNode,s=t.parentNode,l=[e],c=[t];if(!r||!s)return e===i?-1:t===i?1:r?-1:s?1:P?ee(P,e)-ee(P,t):0;if(r===s)return a(e,t);for(n=e;n=n.parentNode;)l.unshift(n);for(n=t;n=n.parentNode;)c.unshift(n);for(;l[o]===c[o];)o++;return o?a(l[o],c[o]):l[o]===_?-1:c[o]===_?1:0},i):j},t.matches=function(e,n){return t(e,null,null,n)},t.matchesSelector=function(e,n){if((e.ownerDocument||e)!==j&&N(e),n=n.replace(de,"='$1']"),!(!x.matchesSelector||!M||q&&q.test(n)||$&&$.test(n)))try{var i=L.call(e,n);if(i||x.disconnectedMatch||e.document&&11!==e.document.nodeType)return i}catch(o){}return t(n,j,null,[e]).length>0},t.contains=function(e,t){return(e.ownerDocument||e)!==j&&N(e),F(e,t)},t.attr=function(e,t){(e.ownerDocument||e)!==j&&N(e);var n=S.attrHandle[t.toLowerCase()],i=n&&Y.call(S.attrHandle,t.toLowerCase())?n(e,t,!M):void 0;return void 0!==i?i:x.attributes||!M?e.getAttribute(t):(i=e.getAttributeNode(t))&&i.specified?i.value:null},t.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},t.uniqueSort=function(e){var t,n=[],i=0,o=0;if(A=!x.detectDuplicates,P=!x.sortStable&&e.slice(0),e.sort(Q),A){for(;t=e[o++];)t===e[o]&&(i=n.push(o));for(;i--;)e.splice(n[i],1)}return P=null,e},C=t.getText=function(e){var t,n="",i=0,o=e.nodeType;if(o){if(1===o||9===o||11===o){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=C(e)}else if(3===o||4===o)return e.nodeValue}else for(;t=e[i++];)n+=C(t);return n},S=t.selectors={cacheLength:50,createPseudo:i,match:he,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(xe,Se),e[3]=(e[3]||e[4]||e[5]||"").replace(xe,Se),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||t.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&t.error(e[0]),e},PSEUDO:function(e){var t,n=!e[6]&&e[2];return he.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":n&&fe.test(n)&&(t=k(n,!0))&&(t=n.indexOf(")",n.length-t)-n.length)&&(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(xe,Se).toLowerCase();return"*"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=B[e+" "];return t||(t=new RegExp("(^|"+ne+")"+e+"("+ne+"|$)"))&&B(e,function(e){return t.test("string"==typeof e.className&&e.className||"undefined"!=typeof e.getAttribute&&e.getAttribute("class")||"")})},ATTR:function(e,n,i){return function(o){var r=t.attr(o,e);return null==r?"!="===n:!n||(r+="","="===n?r===i:"!="===n?r!==i:"^="===n?i&&0===r.indexOf(i):"*="===n?i&&r.indexOf(i)>-1:"$="===n?i&&r.slice(-i.length)===i:"~="===n?(" "+r.replace(se," ")+" ").indexOf(i)>-1:"|="===n&&(r===i||r.slice(0,i.length+1)===i+"-"))}},CHILD:function(e,t,n,i,o){var r="nth"!==e.slice(0,3),a="last"!==e.slice(-4),s="of-type"===t;return 1===i&&0===o?function(e){return!!e.parentNode}:function(t,n,l){var c,u,d,f,p,h,m=r!==a?"nextSibling":"previousSibling",v=t.parentNode,g=s&&t.nodeName.toLowerCase(),y=!l&&!s;if(v){if(r){for(;m;){for(d=t;d=d[m];)if(s?d.nodeName.toLowerCase()===g:1===d.nodeType)return!1;h=m="only"===e&&!h&&"nextSibling"}return!0}if(h=[a?v.firstChild:v.lastChild],a&&y){for(u=v[H]||(v[H]={}),c=u[e]||[],p=c[0]===W&&c[1],f=c[0]===W&&c[2],d=p&&v.childNodes[p];d=++p&&d&&d[m]||(f=p=0)||h.pop();)if(1===d.nodeType&&++f&&d===t){u[e]=[W,p,f];break}}else if(y&&(c=(t[H]||(t[H]={}))[e])&&c[0]===W)f=c[1];else for(;(d=++p&&d&&d[m]||(f=p=0)||h.pop())&&((s?d.nodeName.toLowerCase()!==g:1!==d.nodeType)||!++f||(y&&((d[H]||(d[H]={}))[e]=[W,f]),d!==t)););return f-=o,f===i||f%i===0&&f/i>=0}}},PSEUDO:function(e,n){var o,r=S.pseudos[e]||S.setFilters[e.toLowerCase()]||t.error("unsupported pseudo: "+e);return r[H]?r(n):r.length>1?(o=[e,e,"",n],S.setFilters.hasOwnProperty(e.toLowerCase())?i(function(e,t){for(var i,o=r(e,n),a=o.length;a--;)i=ee(e,o[a]),e[i]=!(t[i]=o[a])}):function(e){return r(e,0,o)}):r}},pseudos:{not:i(function(e){var t=[],n=[],o=I(e.replace(le,"$1"));return o[H]?i(function(e,t,n,i){for(var r,a=o(e,null,i,[]),s=e.length;s--;)(r=a[s])&&(e[s]=!(t[s]=r))}):function(e,i,r){return t[0]=e,o(t,null,r,n),t[0]=null,!n.pop()}}),has:i(function(e){return function(n){return t(e,n).length>0}}),contains:i(function(e){return e=e.replace(xe,Se),function(t){return(t.textContent||t.innerText||C(t)).indexOf(e)>-1}}),lang:i(function(e){return pe.test(e||"")||t.error("unsupported lang: "+e),e=e.replace(xe,Se).toLowerCase(),function(t){var n;do if(n=M?t.lang:t.getAttribute("xml:lang")||t.getAttribute("lang"))return n=n.toLowerCase(),n===e||0===n.indexOf(e+"-");while((t=t.parentNode)&&1===t.nodeType);return!1}}),target:function(t){var n=e.location&&e.location.hash;return n&&n.slice(1)===t.id},root:function(e){return e===D},focus:function(e){return e===j.activeElement&&(!j.hasFocus||j.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:function(e){return e.disabled===!1},disabled:function(e){return e.disabled===!0},checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,e.selected===!0},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!S.pseudos.empty(e)},header:function(e){return ve.test(e.nodeName)},input:function(e){return me.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){var t;return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(t=e.getAttribute("type"))||"text"===t.toLowerCase())},first:c(function(){return[0]}),last:c(function(e,t){return[t-1]}),eq:c(function(e,t,n){return[0>n?n+t:n]}),even:c(function(e,t){for(var n=0;t>n;n+=2)e.push(n);return e}),odd:c(function(e,t){for(var n=1;t>n;n+=2)e.push(n);return e}),lt:c(function(e,t,n){for(var i=0>n?n+t:n;--i>=0;)e.push(i);return e}),gt:c(function(e,t,n){for(var i=0>n?n+t:n;++i<t;)e.push(i);return e})}},S.pseudos.nth=S.pseudos.eq;for(w in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})S.pseudos[w]=s(w);for(w in{submit:!0,reset:!0})S.pseudos[w]=l(w);return d.prototype=S.filters=S.pseudos,S.setFilters=new d,k=t.tokenize=function(e,n){var i,o,r,a,s,l,c,u=z[e+" "];if(u)return n?0:u.slice(0);for(s=e,l=[],c=S.preFilter;s;){(!i||(o=ce.exec(s)))&&(o&&(s=s.slice(o[0].length)||s),l.push(r=[])),i=!1,(o=ue.exec(s))&&(i=o.shift(),r.push({value:i,type:o[0].replace(le," ")}),s=s.slice(i.length));for(a in S.filter)!(o=he[a].exec(s))||c[a]&&!(o=c[a](o))||(i=o.shift(),r.push({value:i,type:a,matches:o}),s=s.slice(i.length));if(!i)break}return n?s.length:s?t.error(e):z(e,l).slice(0)},I=t.compile=function(e,t){var n,i=[],o=[],r=V[e+" "];if(!r){for(t||(t=k(e)),n=t.length;n--;)r=y(t[n]),r[H]?i.push(r):o.push(r);r=V(e,b(o,i)),r.selector=e}return r},E=t.select=function(e,t,n,i){var o,r,a,s,l,c="function"==typeof e&&e,d=!i&&k(e=c.selector||e);if(n=n||[],1===d.length){if(r=d[0]=d[0].slice(0),r.length>2&&"ID"===(a=r[0]).type&&x.getById&&9===t.nodeType&&M&&S.relative[r[1].type]){if(t=(S.find.ID(a.matches[0].replace(xe,Se),t)||[])[0],!t)return n;c&&(t=t.parentNode),e=e.slice(r.shift().value.length)}for(o=he.needsContext.test(e)?0:r.length;o--&&(a=r[o],!S.relative[s=a.type]);)if((l=S.find[s])&&(i=l(a.matches[0].replace(xe,Se),be.test(r[0].type)&&u(t.parentNode)||t))){if(r.splice(o,1),e=i.length&&f(r),!e)return Z.apply(n,i),n;break}}return(c||I(e,d))(i,t,!M,n,be.test(e)&&u(t.parentNode)||t),n},x.sortStable=H.split("").sort(Q).join("")===H,x.detectDuplicates=!!A,N(),x.sortDetached=o(function(e){return 1&e.compareDocumentPosition(j.createElement("div"))}),o(function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")})||r("type|href|height|width",function(e,t,n){return n?void 0:e.getAttribute(t,"type"===t.toLowerCase()?1:2)}),x.attributes&&o(function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")})||r("value",function(e,t,n){return n||"input"!==e.nodeName.toLowerCase()?void 0:e.defaultValue}),o(function(e){return null==e.getAttribute("disabled")})||r(te,function(e,t,n){var i;return n?void 0:e[t]===!0?t.toLowerCase():(i=e.getAttributeNode(t))&&i.specified?i.value:null}),t}(e);K.find=oe,K.expr=oe.selectors,K.expr[":"]=K.expr.pseudos,K.unique=oe.uniqueSort,K.text=oe.getText,K.isXMLDoc=oe.isXML,K.contains=oe.contains;var re=K.expr.match.needsContext,ae=/^<(\w+)\s*\/?>(?:<\/\1>|)$/,se=/^.[^:#\[\.,]*$/;K.filter=function(e,t,n){var i=t[0];return n&&(e=":not("+e+")"),1===t.length&&1===i.nodeType?K.find.matchesSelector(i,e)?[i]:[]:K.find.matches(e,K.grep(t,function(e){return 1===e.nodeType}))},K.fn.extend({find:function(e){var t,n=this.length,i=[],o=this;if("string"!=typeof e)return this.pushStack(K(e).filter(function(){for(t=0;n>t;t++)if(K.contains(o[t],this))return!0}));for(t=0;n>t;t++)K.find(e,o[t],i);return i=this.pushStack(n>1?K.unique(i):i),i.selector=this.selector?this.selector+" "+e:e,i},filter:function(e){return this.pushStack(i(this,e||[],!1))},not:function(e){return this.pushStack(i(this,e||[],!0))},is:function(e){return!!i(this,"string"==typeof e&&re.test(e)?K(e):e||[],!1).length}});var le,ce=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,ue=K.fn.init=function(e,t){var n,i;if(!e)return this;if("string"==typeof e){if(n="<"===e[0]&&">"===e[e.length-1]&&e.length>=3?[null,e,null]:ce.exec(e),!n||!n[1]&&t)return!t||t.jquery?(t||le).find(e):this.constructor(t).find(e);if(n[1]){if(t=t instanceof K?t[0]:t,K.merge(this,K.parseHTML(n[1],t&&t.nodeType?t.ownerDocument||t:J,!0)),ae.test(n[1])&&K.isPlainObject(t))for(n in t)K.isFunction(this[n])?this[n](t[n]):this.attr(n,t[n]);return this}return i=J.getElementById(n[2]),i&&i.parentNode&&(this.length=1,this[0]=i),this.context=J,this.selector=e,this}return e.nodeType?(this.context=this[0]=e,this.length=1,this):K.isFunction(e)?"undefined"!=typeof le.ready?le.ready(e):e(K):(void 0!==e.selector&&(this.selector=e.selector,this.context=e.context),K.makeArray(e,this))};ue.prototype=K.fn,le=K(J);var de=/^(?:parents|prev(?:Until|All))/,fe={children:!0,contents:!0,next:!0,prev:!0};K.extend({dir:function(e,t,n){for(var i=[],o=void 0!==n;(e=e[t])&&9!==e.nodeType;)if(1===e.nodeType){if(o&&K(e).is(n))break;i.push(e)}return i},sibling:function(e,t){for(var n=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n}}),K.fn.extend({has:function(e){var t=K(e,this),n=t.length;return this.filter(function(){for(var e=0;n>e;e++)if(K.contains(this,t[e]))return!0})},closest:function(e,t){for(var n,i=0,o=this.length,r=[],a=re.test(e)||"string"!=typeof e?K(e,t||this.context):0;o>i;i++)for(n=this[i];n&&n!==t;n=n.parentNode)if(n.nodeType<11&&(a?a.index(n)>-1:1===n.nodeType&&K.find.matchesSelector(n,e))){r.push(n);break}return this.pushStack(r.length>1?K.unique(r):r)},index:function(e){return e?"string"==typeof e?Q.call(K(e),this[0]):Q.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(K.unique(K.merge(this.get(),K(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),K.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return K.dir(e,"parentNode")},parentsUntil:function(e,t,n){return K.dir(e,"parentNode",n)},next:function(e){return o(e,"nextSibling")},prev:function(e){return o(e,"previousSibling")},nextAll:function(e){return K.dir(e,"nextSibling")},prevAll:function(e){return K.dir(e,"previousSibling")},nextUntil:function(e,t,n){return K.dir(e,"nextSibling",n)},prevUntil:function(e,t,n){return K.dir(e,"previousSibling",n)},siblings:function(e){return K.sibling((e.parentNode||{}).firstChild,e)},children:function(e){return K.sibling(e.firstChild)},contents:function(e){return e.contentDocument||K.merge([],e.childNodes)}},function(e,t){K.fn[e]=function(n,i){var o=K.map(this,t,n);return"Until"!==e.slice(-5)&&(i=n),i&&"string"==typeof i&&(o=K.filter(i,o)),this.length>1&&(fe[e]||K.unique(o),de.test(e)&&o.reverse()),this.pushStack(o)}});var pe=/\S+/g,he={};K.Callbacks=function(e){e="string"==typeof e?he[e]||r(e):K.extend({},e);var t,n,i,o,a,s,l=[],c=!e.once&&[],u=function(r){for(t=e.memory&&r,n=!0,s=o||0,o=0,a=l.length,i=!0;l&&a>s;s++)if(l[s].apply(r[0],r[1])===!1&&e.stopOnFalse){t=!1;break}i=!1,l&&(c?c.length&&u(c.shift()):t?l=[]:d.disable())},d={add:function(){if(l){var n=l.length;!function r(t){K.each(t,function(t,n){var i=K.type(n);"function"===i?e.unique&&d.has(n)||l.push(n):n&&n.length&&"string"!==i&&r(n)})}(arguments),i?a=l.length:t&&(o=n,u(t))}return this},remove:function(){return l&&K.each(arguments,function(e,t){for(var n;(n=K.inArray(t,l,n))>-1;)l.splice(n,1),i&&(a>=n&&a--,s>=n&&s--)}),this},has:function(e){return e?K.inArray(e,l)>-1:!(!l||!l.length)},empty:function(){return l=[],a=0,this},disable:function(){return l=c=t=void 0,this},disabled:function(){return!l},lock:function(){return c=void 0,t||d.disable(),this},locked:function(){return!c},fireWith:function(e,t){return!l||n&&!c||(t=t||[],t=[e,t.slice?t.slice():t],i?c.push(t):u(t)),this},fire:function(){return d.fireWith(this,arguments),this},fired:function(){return!!n}};return d},K.extend({Deferred:function(e){var t=[["resolve","done",K.Callbacks("once memory"),"resolved"],["reject","fail",K.Callbacks("once memory"),"rejected"],["notify","progress",K.Callbacks("memory")]],n="pending",i={state:function(){return n},always:function(){return o.done(arguments).fail(arguments),this},then:function(){var e=arguments;return K.Deferred(function(n){K.each(t,function(t,r){var a=K.isFunction(e[t])&&e[t];o[r[1]](function(){var e=a&&a.apply(this,arguments);e&&K.isFunction(e.promise)?e.promise().done(n.resolve).fail(n.reject).progress(n.notify):n[r[0]+"With"](this===i?n.promise():this,a?[e]:arguments)})}),e=null}).promise()},promise:function(e){return null!=e?K.extend(e,i):i}},o={};return i.pipe=i.then,K.each(t,function(e,r){var a=r[2],s=r[3];i[r[1]]=a.add,s&&a.add(function(){n=s},t[1^e][2].disable,t[2][2].lock),o[r[0]]=function(){return o[r[0]+"With"](this===o?i:this,arguments),this},o[r[0]+"With"]=a.fireWith}),i.promise(o),e&&e.call(o,o),o},when:function(e){var t,n,i,o=0,r=B.call(arguments),a=r.length,s=1!==a||e&&K.isFunction(e.promise)?a:0,l=1===s?e:K.Deferred(),c=function(e,n,i){return function(o){n[e]=this,i[e]=arguments.length>1?B.call(arguments):o,i===t?l.notifyWith(n,i):--s||l.resolveWith(n,i)}};if(a>1)for(t=new Array(a),n=new Array(a),i=new Array(a);a>o;o++)r[o]&&K.isFunction(r[o].promise)?r[o].promise().done(c(o,i,r)).fail(l.reject).progress(c(o,n,t)):--s;return s||l.resolveWith(i,r),l.promise()}});var me;K.fn.ready=function(e){return K.ready.promise().done(e),this},K.extend({isReady:!1,readyWait:1,holdReady:function(e){e?K.readyWait++:K.ready(!0)},ready:function(e){(e===!0?--K.readyWait:K.isReady)||(K.isReady=!0,e!==!0&&--K.readyWait>0||(me.resolveWith(J,[K]),K.fn.triggerHandler&&(K(J).triggerHandler("ready"),K(J).off("ready"))))}}),K.ready.promise=function(t){return me||(me=K.Deferred(),"complete"===J.readyState?setTimeout(K.ready):(J.addEventListener("DOMContentLoaded",a,!1),e.addEventListener("load",a,!1))),me.promise(t)},K.ready.promise();var ve=K.access=function(e,t,n,i,o,r,a){var s=0,l=e.length,c=null==n;if("object"===K.type(n)){o=!0;for(s in n)K.access(e,t,s,n[s],!0,r,a)}else if(void 0!==i&&(o=!0,K.isFunction(i)||(a=!0),c&&(a?(t.call(e,i),t=null):(c=t,t=function(e,t,n){return c.call(K(e),n)})),t))for(;l>s;s++)t(e[s],n,a?i:i.call(e[s],s,t(e[s],n)));return o?e:c?t.call(e):l?t(e[0],n):r};K.acceptData=function(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType},s.uid=1,s.accepts=K.acceptData,s.prototype={key:function(e){if(!s.accepts(e))return 0;var t={},n=e[this.expando];if(!n){n=s.uid++;try{t[this.expando]={value:n},Object.defineProperties(e,t)}catch(i){t[this.expando]=n,K.extend(e,t)}}return this.cache[n]||(this.cache[n]={}),n},set:function(e,t,n){var i,o=this.key(e),r=this.cache[o];if("string"==typeof t)r[t]=n;else if(K.isEmptyObject(r))K.extend(this.cache[o],t);else for(i in t)r[i]=t[i];return r},get:function(e,t){var n=this.cache[this.key(e)];return void 0===t?n:n[t]},access:function(e,t,n){var i;return void 0===t||t&&"string"==typeof t&&void 0===n?(i=this.get(e,t),void 0!==i?i:this.get(e,K.camelCase(t))):(this.set(e,t,n),void 0!==n?n:t)},remove:function(e,t){var n,i,o,r=this.key(e),a=this.cache[r];if(void 0===t)this.cache[r]={};else{K.isArray(t)?i=t.concat(t.map(K.camelCase)):(o=K.camelCase(t),t in a?i=[t,o]:(i=o,i=i in a?[i]:i.match(pe)||[])),n=i.length;for(;n--;)delete a[i[n]]}},hasData:function(e){return!K.isEmptyObject(this.cache[e[this.expando]]||{})},discard:function(e){e[this.expando]&&delete this.cache[e[this.expando]]}};var ge=new s,ye=new s,be=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,we=/([A-Z])/g;K.extend({hasData:function(e){return ye.hasData(e)||ge.hasData(e)},data:function(e,t,n){return ye.access(e,t,n)},removeData:function(e,t){ye.remove(e,t)},_data:function(e,t,n){return ge.access(e,t,n)},_removeData:function(e,t){ge.remove(e,t)}}),K.fn.extend({data:function(e,t){var n,i,o,r=this[0],a=r&&r.attributes;if(void 0===e){if(this.length&&(o=ye.get(r),1===r.nodeType&&!ge.get(r,"hasDataAttrs"))){for(n=a.length;n--;)a[n]&&(i=a[n].name,0===i.indexOf("data-")&&(i=K.camelCase(i.slice(5)),l(r,i,o[i])));ge.set(r,"hasDataAttrs",!0)}return o}return"object"==typeof e?this.each(function(){ye.set(this,e)}):ve(this,function(t){var n,i=K.camelCase(e);if(r&&void 0===t){if(n=ye.get(r,e),void 0!==n)return n;if(n=ye.get(r,i),void 0!==n)return n;if(n=l(r,i,void 0),void 0!==n)return n}else this.each(function(){var n=ye.get(this,i);ye.set(this,i,t),-1!==e.indexOf("-")&&void 0!==n&&ye.set(this,e,t)})},null,t,arguments.length>1,null,!0)},removeData:function(e){return this.each(function(){ye.remove(this,e)})}}),K.extend({queue:function(e,t,n){var i;return e?(t=(t||"fx")+"queue",i=ge.get(e,t),n&&(!i||K.isArray(n)?i=ge.access(e,t,K.makeArray(n)):i.push(n)),i||[]):void 0},dequeue:function(e,t){t=t||"fx";var n=K.queue(e,t),i=n.length,o=n.shift(),r=K._queueHooks(e,t),a=function(){K.dequeue(e,t)};"inprogress"===o&&(o=n.shift(),i--),o&&("fx"===t&&n.unshift("inprogress"),delete r.stop,o.call(e,a,r)),!i&&r&&r.empty.fire()},_queueHooks:function(e,t){var n=t+"queueHooks";return ge.get(e,n)||ge.access(e,n,{empty:K.Callbacks("once memory").add(function(){ge.remove(e,[t+"queue",n])})})}}),K.fn.extend({queue:function(e,t){var n=2;return"string"!=typeof e&&(t=e,e="fx",n--),arguments.length<n?K.queue(this[0],e):void 0===t?this:this.each(function(){var n=K.queue(this,e,t);K._queueHooks(this,e),"fx"===e&&"inprogress"!==n[0]&&K.dequeue(this,e)})},dequeue:function(e){return this.each(function(){K.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){var n,i=1,o=K.Deferred(),r=this,a=this.length,s=function(){--i||o.resolveWith(r,[r])};for("string"!=typeof e&&(t=e,e=void 0),e=e||"fx";a--;)n=ge.get(r[a],e+"queueHooks"),n&&n.empty&&(i++,n.empty.add(s));return s(),o.promise(t)}});var xe=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,Se=["Top","Right","Bottom","Left"],Ce=function(e,t){return e=t||e,"none"===K.css(e,"display")||!K.contains(e.ownerDocument,e)},Te=/^(?:checkbox|radio)$/i;!function(){var e=J.createDocumentFragment(),t=e.appendChild(J.createElement("div")),n=J.createElement("input");n.setAttribute("type","radio"),n.setAttribute("checked","checked"),n.setAttribute("name","t"),t.appendChild(n),G.checkClone=t.cloneNode(!0).cloneNode(!0).lastChild.checked,t.innerHTML="<textarea>x</textarea>",G.noCloneChecked=!!t.cloneNode(!0).lastChild.defaultValue}();var ke="undefined";G.focusinBubbles="onfocusin"in e;var Ie=/^key/,Ee=/^(?:mouse|pointer|contextmenu)|click/,Oe=/^(?:focusinfocus|focusoutblur)$/,Pe=/^([^.]*)(?:\.(.+)|)$/;K.event={global:{},add:function(e,t,n,i,o){var r,a,s,l,c,u,d,f,p,h,m,v=ge.get(e);if(v)for(n.handler&&(r=n,n=r.handler,o=r.selector),n.guid||(n.guid=K.guid++),(l=v.events)||(l=v.events={}),(a=v.handle)||(a=v.handle=function(t){return typeof K!==ke&&K.event.triggered!==t.type?K.event.dispatch.apply(e,arguments):void 0}),t=(t||"").match(pe)||[""],c=t.length;c--;)s=Pe.exec(t[c])||[],p=m=s[1],h=(s[2]||"").split(".").sort(),p&&(d=K.event.special[p]||{},p=(o?d.delegateType:d.bindType)||p,d=K.event.special[p]||{},u=K.extend({type:p,origType:m,data:i,handler:n,guid:n.guid,selector:o,needsContext:o&&K.expr.match.needsContext.test(o),namespace:h.join(".")},r),(f=l[p])||(f=l[p]=[],f.delegateCount=0,d.setup&&d.setup.call(e,i,h,a)!==!1||e.addEventListener&&e.addEventListener(p,a,!1)),d.add&&(d.add.call(e,u),u.handler.guid||(u.handler.guid=n.guid)),o?f.splice(f.delegateCount++,0,u):f.push(u),K.event.global[p]=!0)},remove:function(e,t,n,i,o){var r,a,s,l,c,u,d,f,p,h,m,v=ge.hasData(e)&&ge.get(e);if(v&&(l=v.events)){for(t=(t||"").match(pe)||[""],c=t.length;c--;)if(s=Pe.exec(t[c])||[],p=m=s[1],h=(s[2]||"").split(".").sort(),p){for(d=K.event.special[p]||{},p=(i?d.delegateType:d.bindType)||p,f=l[p]||[],s=s[2]&&new RegExp("(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"),a=r=f.length;r--;)u=f[r],!o&&m!==u.origType||n&&n.guid!==u.guid||s&&!s.test(u.namespace)||i&&i!==u.selector&&("**"!==i||!u.selector)||(f.splice(r,1),u.selector&&f.delegateCount--,d.remove&&d.remove.call(e,u));a&&!f.length&&(d.teardown&&d.teardown.call(e,h,v.handle)!==!1||K.removeEvent(e,p,v.handle),delete l[p])}else for(p in l)K.event.remove(e,p+t[c],n,i,!0);K.isEmptyObject(l)&&(delete v.handle,ge.remove(e,"events"))}},trigger:function(t,n,i,o){var r,a,s,l,c,u,d,f=[i||J],p=U.call(t,"type")?t.type:t,h=U.call(t,"namespace")?t.namespace.split("."):[];if(a=s=i=i||J,3!==i.nodeType&&8!==i.nodeType&&!Oe.test(p+K.event.triggered)&&(p.indexOf(".")>=0&&(h=p.split("."),p=h.shift(),h.sort()),c=p.indexOf(":")<0&&"on"+p,t=t[K.expando]?t:new K.Event(p,"object"==typeof t&&t),t.isTrigger=o?2:3,t.namespace=h.join("."),t.namespace_re=t.namespace?new RegExp("(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,t.result=void 0,t.target||(t.target=i),n=null==n?[t]:K.makeArray(n,[t]),d=K.event.special[p]||{},o||!d.trigger||d.trigger.apply(i,n)!==!1)){if(!o&&!d.noBubble&&!K.isWindow(i)){for(l=d.delegateType||p,Oe.test(l+p)||(a=a.parentNode);a;a=a.parentNode)f.push(a),s=a;s===(i.ownerDocument||J)&&f.push(s.defaultView||s.parentWindow||e)}for(r=0;(a=f[r++])&&!t.isPropagationStopped();)t.type=r>1?l:d.bindType||p,u=(ge.get(a,"events")||{})[t.type]&&ge.get(a,"handle"),u&&u.apply(a,n),u=c&&a[c],u&&u.apply&&K.acceptData(a)&&(t.result=u.apply(a,n),t.result===!1&&t.preventDefault());return t.type=p,o||t.isDefaultPrevented()||d._default&&d._default.apply(f.pop(),n)!==!1||!K.acceptData(i)||c&&K.isFunction(i[p])&&!K.isWindow(i)&&(s=i[c],s&&(i[c]=null),K.event.triggered=p,i[p](),K.event.triggered=void 0,s&&(i[c]=s)),t.result}},dispatch:function(e){e=K.event.fix(e);var t,n,i,o,r,a=[],s=B.call(arguments),l=(ge.get(this,"events")||{})[e.type]||[],c=K.event.special[e.type]||{};if(s[0]=e,e.delegateTarget=this,!c.preDispatch||c.preDispatch.call(this,e)!==!1){for(a=K.event.handlers.call(this,e,l),t=0;(o=a[t++])&&!e.isPropagationStopped();)for(e.currentTarget=o.elem,n=0;(r=o.handlers[n++])&&!e.isImmediatePropagationStopped();)(!e.namespace_re||e.namespace_re.test(r.namespace))&&(e.handleObj=r,e.data=r.data,i=((K.event.special[r.origType]||{}).handle||r.handler).apply(o.elem,s),void 0!==i&&(e.result=i)===!1&&(e.preventDefault(),e.stopPropagation()));return c.postDispatch&&c.postDispatch.call(this,e),e.result}},handlers:function(e,t){var n,i,o,r,a=[],s=t.delegateCount,l=e.target;if(s&&l.nodeType&&(!e.button||"click"!==e.type))for(;l!==this;l=l.parentNode||this)if(l.disabled!==!0||"click"!==e.type){for(i=[],n=0;s>n;n++)r=t[n],o=r.selector+" ",void 0===i[o]&&(i[o]=r.needsContext?K(o,this).index(l)>=0:K.find(o,this,null,[l]).length),i[o]&&i.push(r);i.length&&a.push({elem:l,handlers:i})}return s<t.length&&a.push({elem:this,handlers:t.slice(s)}),a},props:"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(e,t){return null==e.which&&(e.which=null!=t.charCode?t.charCode:t.keyCode),e}},mouseHooks:{props:"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(e,t){var n,i,o,r=t.button;return null==e.pageX&&null!=t.clientX&&(n=e.target.ownerDocument||J,i=n.documentElement,o=n.body,e.pageX=t.clientX+(i&&i.scrollLeft||o&&o.scrollLeft||0)-(i&&i.clientLeft||o&&o.clientLeft||0),e.pageY=t.clientY+(i&&i.scrollTop||o&&o.scrollTop||0)-(i&&i.clientTop||o&&o.clientTop||0)),e.which||void 0===r||(e.which=1&r?1:2&r?3:4&r?2:0),e}},fix:function(e){if(e[K.expando])return e;var t,n,i,o=e.type,r=e,a=this.fixHooks[o];for(a||(this.fixHooks[o]=a=Ee.test(o)?this.mouseHooks:Ie.test(o)?this.keyHooks:{}),i=a.props?this.props.concat(a.props):this.props,e=new K.Event(r),t=i.length;t--;)n=i[t],e[n]=r[n];return e.target||(e.target=J),3===e.target.nodeType&&(e.target=e.target.parentNode),a.filter?a.filter(e,r):e},special:{load:{noBubble:!0},focus:{trigger:function(){return this!==d()&&this.focus?(this.focus(),!1):void 0},delegateType:"focusin"},blur:{trigger:function(){return this===d()&&this.blur?(this.blur(),!1):void 0},delegateType:"focusout"},click:{trigger:function(){return"checkbox"===this.type&&this.click&&K.nodeName(this,"input")?(this.click(),!1):void 0},_default:function(e){return K.nodeName(e.target,"a")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}},simulate:function(e,t,n,i){var o=K.extend(new K.Event,n,{type:e,isSimulated:!0,originalEvent:{}});i?K.event.trigger(o,null,t):K.event.dispatch.call(t,o),o.isDefaultPrevented()&&n.preventDefault()}},K.removeEvent=function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n,!1)},K.Event=function(e,t){return this instanceof K.Event?(e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&e.returnValue===!1?c:u):this.type=e,t&&K.extend(this,t),this.timeStamp=e&&e.timeStamp||K.now(),void(this[K.expando]=!0)):new K.Event(e,t)},K.Event.prototype={isDefaultPrevented:u,isPropagationStopped:u,isImmediatePropagationStopped:u,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=c,e&&e.preventDefault&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=c,e&&e.stopPropagation&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=c,e&&e.stopImmediatePropagation&&e.stopImmediatePropagation(),this.stopPropagation()}},K.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(e,t){K.event.special[e]={delegateType:t,bindType:t,handle:function(e){var n,i=this,o=e.relatedTarget,r=e.handleObj;return(!o||o!==i&&!K.contains(i,o))&&(e.type=r.origType,n=r.handler.apply(this,arguments),e.type=t),n}}}),G.focusinBubbles||K.each({focus:"focusin",blur:"focusout"},function(e,t){var n=function(e){K.event.simulate(t,e.target,K.event.fix(e),!0)};K.event.special[t]={setup:function(){var i=this.ownerDocument||this,o=ge.access(i,t);o||i.addEventListener(e,n,!0),ge.access(i,t,(o||0)+1)},teardown:function(){var i=this.ownerDocument||this,o=ge.access(i,t)-1;o?ge.access(i,t,o):(i.removeEventListener(e,n,!0),ge.remove(i,t))}}}),K.fn.extend({on:function(e,t,n,i,o){var r,a;if("object"==typeof e){"string"!=typeof t&&(n=n||t,t=void 0);for(a in e)this.on(a,t,n,e[a],o);return this}if(null==n&&null==i?(i=t,n=t=void 0):null==i&&("string"==typeof t?(i=n,n=void 0):(i=n,n=t,t=void 0)),i===!1)i=u;else if(!i)return this;return 1===o&&(r=i,i=function(e){return K().off(e),r.apply(this,arguments)},i.guid=r.guid||(r.guid=K.guid++)),this.each(function(){K.event.add(this,e,i,n,t)})},one:function(e,t,n,i){return this.on(e,t,n,i,1)},off:function(e,t,n){var i,o;if(e&&e.preventDefault&&e.handleObj)return i=e.handleObj,K(e.delegateTarget).off(i.namespace?i.origType+"."+i.namespace:i.origType,i.selector,i.handler),this;if("object"==typeof e){for(o in e)this.off(o,t,e[o]);return this}return(t===!1||"function"==typeof t)&&(n=t,t=void 0),n===!1&&(n=u),this.each(function(){K.event.remove(this,e,n,t)})},trigger:function(e,t){return this.each(function(){K.event.trigger(e,t,this)})},triggerHandler:function(e,t){var n=this[0];return n?K.event.trigger(e,t,n,!0):void 0}});var Ae=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,Ne=/<([\w:]+)/,je=/<|&#?\w+;/,De=/<(?:script|style|link)/i,Me=/checked\s*(?:[^=]|=\s*.checked.)/i,$e=/^$|\/(?:java|ecma)script/i,qe=/^true\/(.*)/,Le=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,Fe={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};Fe.optgroup=Fe.option,Fe.tbody=Fe.tfoot=Fe.colgroup=Fe.caption=Fe.thead,Fe.th=Fe.td,K.extend({clone:function(e,t,n){var i,o,r,a,s=e.cloneNode(!0),l=K.contains(e.ownerDocument,e);if(!(G.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||K.isXMLDoc(e)))for(a=g(s),r=g(e),i=0,o=r.length;o>i;i++)y(r[i],a[i]);if(t)if(n)for(r=r||g(e),a=a||g(s),i=0,o=r.length;o>i;i++)v(r[i],a[i]);else v(e,s);return a=g(s,"script"),a.length>0&&m(a,!l&&g(e,"script")),s},buildFragment:function(e,t,n,i){for(var o,r,a,s,l,c,u=t.createDocumentFragment(),d=[],f=0,p=e.length;p>f;f++)if(o=e[f],o||0===o)if("object"===K.type(o))K.merge(d,o.nodeType?[o]:o);else if(je.test(o)){for(r=r||u.appendChild(t.createElement("div")),a=(Ne.exec(o)||["",""])[1].toLowerCase(),s=Fe[a]||Fe._default,r.innerHTML=s[1]+o.replace(Ae,"<$1></$2>")+s[2],c=s[0];c--;)r=r.lastChild;K.merge(d,r.childNodes),r=u.firstChild,r.textContent=""}else d.push(t.createTextNode(o));for(u.textContent="",f=0;o=d[f++];)if((!i||-1===K.inArray(o,i))&&(l=K.contains(o.ownerDocument,o),r=g(u.appendChild(o),"script"),l&&m(r),n))for(c=0;o=r[c++];)$e.test(o.type||"")&&n.push(o);return u},cleanData:function(e){for(var t,n,i,o,r=K.event.special,a=0;void 0!==(n=e[a]);a++){if(K.acceptData(n)&&(o=n[ge.expando],o&&(t=ge.cache[o]))){if(t.events)for(i in t.events)r[i]?K.event.remove(n,i):K.removeEvent(n,i,t.handle);
ge.cache[o]&&delete ge.cache[o]}delete ye.cache[n[ye.expando]]}}}),K.fn.extend({text:function(e){return ve(this,function(e){return void 0===e?K.text(this):this.empty().each(function(){(1===this.nodeType||11===this.nodeType||9===this.nodeType)&&(this.textContent=e)})},null,e,arguments.length)},append:function(){return this.domManip(arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=f(this,e);t.appendChild(e)}})},prepend:function(){return this.domManip(arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=f(this,e);t.insertBefore(e,t.firstChild)}})},before:function(){return this.domManip(arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return this.domManip(arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},remove:function(e,t){for(var n,i=e?K.filter(e,this):this,o=0;null!=(n=i[o]);o++)t||1!==n.nodeType||K.cleanData(g(n)),n.parentNode&&(t&&K.contains(n.ownerDocument,n)&&m(g(n,"script")),n.parentNode.removeChild(n));return this},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(K.cleanData(g(e,!1)),e.textContent="");return this},clone:function(e,t){return e=null!=e&&e,t=null==t?e:t,this.map(function(){return K.clone(this,e,t)})},html:function(e){return ve(this,function(e){var t=this[0]||{},n=0,i=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if("string"==typeof e&&!De.test(e)&&!Fe[(Ne.exec(e)||["",""])[1].toLowerCase()]){e=e.replace(Ae,"<$1></$2>");try{for(;i>n;n++)t=this[n]||{},1===t.nodeType&&(K.cleanData(g(t,!1)),t.innerHTML=e);t=0}catch(o){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var e=arguments[0];return this.domManip(arguments,function(t){e=this.parentNode,K.cleanData(g(this)),e&&e.replaceChild(t,this)}),e&&(e.length||e.nodeType)?this:this.remove()},detach:function(e){return this.remove(e,!0)},domManip:function(e,t){e=z.apply([],e);var n,i,o,r,a,s,l=0,c=this.length,u=this,d=c-1,f=e[0],m=K.isFunction(f);if(m||c>1&&"string"==typeof f&&!G.checkClone&&Me.test(f))return this.each(function(n){var i=u.eq(n);m&&(e[0]=f.call(this,n,i.html())),i.domManip(e,t)});if(c&&(n=K.buildFragment(e,this[0].ownerDocument,!1,this),i=n.firstChild,1===n.childNodes.length&&(n=i),i)){for(o=K.map(g(n,"script"),p),r=o.length;c>l;l++)a=n,l!==d&&(a=K.clone(a,!0,!0),r&&K.merge(o,g(a,"script"))),t.call(this[l],a,l);if(r)for(s=o[o.length-1].ownerDocument,K.map(o,h),l=0;r>l;l++)a=o[l],$e.test(a.type||"")&&!ge.access(a,"globalEval")&&K.contains(s,a)&&(a.src?K._evalUrl&&K._evalUrl(a.src):K.globalEval(a.textContent.replace(Le,"")))}return this}}),K.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,t){K.fn[e]=function(e){for(var n,i=[],o=K(e),r=o.length-1,a=0;r>=a;a++)n=a===r?this:this.clone(!0),K(o[a])[t](n),V.apply(i,n.get());return this.pushStack(i)}});var He,_e={},We=/^margin/,Re=new RegExp("^("+xe+")(?!px)[a-z%]+$","i"),Be=function(t){return t.ownerDocument.defaultView.opener?t.ownerDocument.defaultView.getComputedStyle(t,null):e.getComputedStyle(t,null)};!function(){function t(){a.style.cssText="-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute",a.innerHTML="",o.appendChild(r);var t=e.getComputedStyle(a,null);n="1%"!==t.top,i="4px"===t.width,o.removeChild(r)}var n,i,o=J.documentElement,r=J.createElement("div"),a=J.createElement("div");a.style&&(a.style.backgroundClip="content-box",a.cloneNode(!0).style.backgroundClip="",G.clearCloneStyle="content-box"===a.style.backgroundClip,r.style.cssText="border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;position:absolute",r.appendChild(a),e.getComputedStyle&&K.extend(G,{pixelPosition:function(){return t(),n},boxSizingReliable:function(){return null==i&&t(),i},reliableMarginRight:function(){var t,n=a.appendChild(J.createElement("div"));return n.style.cssText=a.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0",n.style.marginRight=n.style.width="0",a.style.width="1px",o.appendChild(r),t=!parseFloat(e.getComputedStyle(n,null).marginRight),o.removeChild(r),a.removeChild(n),t}}))}(),K.swap=function(e,t,n,i){var o,r,a={};for(r in t)a[r]=e.style[r],e.style[r]=t[r];o=n.apply(e,i||[]);for(r in t)e.style[r]=a[r];return o};var ze=/^(none|table(?!-c[ea]).+)/,Ve=new RegExp("^("+xe+")(.*)$","i"),Qe=new RegExp("^([+-])=("+xe+")","i"),Xe={position:"absolute",visibility:"hidden",display:"block"},Ye={letterSpacing:"0",fontWeight:"400"},Ue=["Webkit","O","Moz","ms"];K.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=x(e,"opacity");return""===n?"1":n}}}},cssNumber:{columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":"cssFloat"},style:function(e,t,n,i){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var o,r,a,s=K.camelCase(t),l=e.style;return t=K.cssProps[s]||(K.cssProps[s]=C(l,s)),a=K.cssHooks[t]||K.cssHooks[s],void 0===n?a&&"get"in a&&void 0!==(o=a.get(e,!1,i))?o:l[t]:(r=typeof n,"string"===r&&(o=Qe.exec(n))&&(n=(o[1]+1)*o[2]+parseFloat(K.css(e,t)),r="number"),void(null!=n&&n===n&&("number"!==r||K.cssNumber[s]||(n+="px"),G.clearCloneStyle||""!==n||0!==t.indexOf("background")||(l[t]="inherit"),a&&"set"in a&&void 0===(n=a.set(e,n,i))||(l[t]=n))))}},css:function(e,t,n,i){var o,r,a,s=K.camelCase(t);return t=K.cssProps[s]||(K.cssProps[s]=C(e.style,s)),a=K.cssHooks[t]||K.cssHooks[s],a&&"get"in a&&(o=a.get(e,!0,n)),void 0===o&&(o=x(e,t,i)),"normal"===o&&t in Ye&&(o=Ye[t]),""===n||n?(r=parseFloat(o),n===!0||K.isNumeric(r)?r||0:o):o}}),K.each(["height","width"],function(e,t){K.cssHooks[t]={get:function(e,n,i){return n?ze.test(K.css(e,"display"))&&0===e.offsetWidth?K.swap(e,Xe,function(){return I(e,t,i)}):I(e,t,i):void 0},set:function(e,n,i){var o=i&&Be(e);return T(e,n,i?k(e,t,i,"border-box"===K.css(e,"boxSizing",!1,o),o):0)}}}),K.cssHooks.marginRight=S(G.reliableMarginRight,function(e,t){return t?K.swap(e,{display:"inline-block"},x,[e,"marginRight"]):void 0}),K.each({margin:"",padding:"",border:"Width"},function(e,t){K.cssHooks[e+t]={expand:function(n){for(var i=0,o={},r="string"==typeof n?n.split(" "):[n];4>i;i++)o[e+Se[i]+t]=r[i]||r[i-2]||r[0];return o}},We.test(e)||(K.cssHooks[e+t].set=T)}),K.fn.extend({css:function(e,t){return ve(this,function(e,t,n){var i,o,r={},a=0;if(K.isArray(t)){for(i=Be(e),o=t.length;o>a;a++)r[t[a]]=K.css(e,t[a],!1,i);return r}return void 0!==n?K.style(e,t,n):K.css(e,t)},e,t,arguments.length>1)},show:function(){return E(this,!0)},hide:function(){return E(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each(function(){Ce(this)?K(this).show():K(this).hide()})}}),K.Tween=O,O.prototype={constructor:O,init:function(e,t,n,i,o,r){this.elem=e,this.prop=n,this.easing=o||"swing",this.options=t,this.start=this.now=this.cur(),this.end=i,this.unit=r||(K.cssNumber[n]?"":"px")},cur:function(){var e=O.propHooks[this.prop];return e&&e.get?e.get(this):O.propHooks._default.get(this)},run:function(e){var t,n=O.propHooks[this.prop];return this.pos=t=this.options.duration?K.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):O.propHooks._default.set(this),this}},O.prototype.init.prototype=O.prototype,O.propHooks={_default:{get:function(e){var t;return null==e.elem[e.prop]||e.elem.style&&null!=e.elem.style[e.prop]?(t=K.css(e.elem,e.prop,""),t&&"auto"!==t?t:0):e.elem[e.prop]},set:function(e){K.fx.step[e.prop]?K.fx.step[e.prop](e):e.elem.style&&(null!=e.elem.style[K.cssProps[e.prop]]||K.cssHooks[e.prop])?K.style(e.elem,e.prop,e.now+e.unit):e.elem[e.prop]=e.now}}},O.propHooks.scrollTop=O.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},K.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2}},K.fx=O.prototype.init,K.fx.step={};var Ge,Je,Ze=/^(?:toggle|show|hide)$/,Ke=new RegExp("^(?:([+-])=|)("+xe+")([a-z%]*)$","i"),et=/queueHooks$/,tt=[j],nt={"*":[function(e,t){var n=this.createTween(e,t),i=n.cur(),o=Ke.exec(t),r=o&&o[3]||(K.cssNumber[e]?"":"px"),a=(K.cssNumber[e]||"px"!==r&&+i)&&Ke.exec(K.css(n.elem,e)),s=1,l=20;if(a&&a[3]!==r){r=r||a[3],o=o||[],a=+i||1;do s=s||".5",a/=s,K.style(n.elem,e,a+r);while(s!==(s=n.cur()/i)&&1!==s&&--l)}return o&&(a=n.start=+a||+i||0,n.unit=r,n.end=o[1]?a+(o[1]+1)*o[2]:+o[2]),n}]};K.Animation=K.extend(M,{tweener:function(e,t){K.isFunction(e)?(t=e,e=["*"]):e=e.split(" ");for(var n,i=0,o=e.length;o>i;i++)n=e[i],nt[n]=nt[n]||[],nt[n].unshift(t)},prefilter:function(e,t){t?tt.unshift(e):tt.push(e)}}),K.speed=function(e,t,n){var i=e&&"object"==typeof e?K.extend({},e):{complete:n||!n&&t||K.isFunction(e)&&e,duration:e,easing:n&&t||t&&!K.isFunction(t)&&t};return i.duration=K.fx.off?0:"number"==typeof i.duration?i.duration:i.duration in K.fx.speeds?K.fx.speeds[i.duration]:K.fx.speeds._default,(null==i.queue||i.queue===!0)&&(i.queue="fx"),i.old=i.complete,i.complete=function(){K.isFunction(i.old)&&i.old.call(this),i.queue&&K.dequeue(this,i.queue)},i},K.fn.extend({fadeTo:function(e,t,n,i){return this.filter(Ce).css("opacity",0).show().end().animate({opacity:t},e,n,i)},animate:function(e,t,n,i){var o=K.isEmptyObject(e),r=K.speed(t,n,i),a=function(){var t=M(this,K.extend({},e),r);(o||ge.get(this,"finish"))&&t.stop(!0)};return a.finish=a,o||r.queue===!1?this.each(a):this.queue(r.queue,a)},stop:function(e,t,n){var i=function(e){var t=e.stop;delete e.stop,t(n)};return"string"!=typeof e&&(n=t,t=e,e=void 0),t&&e!==!1&&this.queue(e||"fx",[]),this.each(function(){var t=!0,o=null!=e&&e+"queueHooks",r=K.timers,a=ge.get(this);if(o)a[o]&&a[o].stop&&i(a[o]);else for(o in a)a[o]&&a[o].stop&&et.test(o)&&i(a[o]);for(o=r.length;o--;)r[o].elem!==this||null!=e&&r[o].queue!==e||(r[o].anim.stop(n),t=!1,r.splice(o,1));(t||!n)&&K.dequeue(this,e)})},finish:function(e){return e!==!1&&(e=e||"fx"),this.each(function(){var t,n=ge.get(this),i=n[e+"queue"],o=n[e+"queueHooks"],r=K.timers,a=i?i.length:0;for(n.finish=!0,K.queue(this,e,[]),o&&o.stop&&o.stop.call(this,!0),t=r.length;t--;)r[t].elem===this&&r[t].queue===e&&(r[t].anim.stop(!0),r.splice(t,1));for(t=0;a>t;t++)i[t]&&i[t].finish&&i[t].finish.call(this);delete n.finish})}}),K.each(["toggle","show","hide"],function(e,t){var n=K.fn[t];K.fn[t]=function(e,i,o){return null==e||"boolean"==typeof e?n.apply(this,arguments):this.animate(A(t,!0),e,i,o)}}),K.each({slideDown:A("show"),slideUp:A("hide"),slideToggle:A("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,t){K.fn[e]=function(e,n,i){return this.animate(t,e,n,i)}}),K.timers=[],K.fx.tick=function(){var e,t=0,n=K.timers;for(Ge=K.now();t<n.length;t++)e=n[t],e()||n[t]!==e||n.splice(t--,1);n.length||K.fx.stop(),Ge=void 0},K.fx.timer=function(e){K.timers.push(e),e()?K.fx.start():K.timers.pop()},K.fx.interval=13,K.fx.start=function(){Je||(Je=setInterval(K.fx.tick,K.fx.interval))},K.fx.stop=function(){clearInterval(Je),Je=null},K.fx.speeds={slow:600,fast:200,_default:400},K.fn.delay=function(e,t){return e=K.fx?K.fx.speeds[e]||e:e,t=t||"fx",this.queue(t,function(t,n){var i=setTimeout(t,e);n.stop=function(){clearTimeout(i)}})},function(){var e=J.createElement("input"),t=J.createElement("select"),n=t.appendChild(J.createElement("option"));e.type="checkbox",G.checkOn=""!==e.value,G.optSelected=n.selected,t.disabled=!0,G.optDisabled=!n.disabled,e=J.createElement("input"),e.value="t",e.type="radio",G.radioValue="t"===e.value}();var it,ot,rt=K.expr.attrHandle;K.fn.extend({attr:function(e,t){return ve(this,K.attr,e,t,arguments.length>1)},removeAttr:function(e){return this.each(function(){K.removeAttr(this,e)})}}),K.extend({attr:function(e,t,n){var i,o,r=e.nodeType;if(e&&3!==r&&8!==r&&2!==r)return typeof e.getAttribute===ke?K.prop(e,t,n):(1===r&&K.isXMLDoc(e)||(t=t.toLowerCase(),i=K.attrHooks[t]||(K.expr.match.bool.test(t)?ot:it)),void 0===n?i&&"get"in i&&null!==(o=i.get(e,t))?o:(o=K.find.attr(e,t),null==o?void 0:o):null!==n?i&&"set"in i&&void 0!==(o=i.set(e,n,t))?o:(e.setAttribute(t,n+""),n):void K.removeAttr(e,t))},removeAttr:function(e,t){var n,i,o=0,r=t&&t.match(pe);if(r&&1===e.nodeType)for(;n=r[o++];)i=K.propFix[n]||n,K.expr.match.bool.test(n)&&(e[i]=!1),e.removeAttribute(n)},attrHooks:{type:{set:function(e,t){if(!G.radioValue&&"radio"===t&&K.nodeName(e,"input")){var n=e.value;return e.setAttribute("type",t),n&&(e.value=n),t}}}}}),ot={set:function(e,t,n){return t===!1?K.removeAttr(e,n):e.setAttribute(n,n),n}},K.each(K.expr.match.bool.source.match(/\w+/g),function(e,t){var n=rt[t]||K.find.attr;rt[t]=function(e,t,i){var o,r;return i||(r=rt[t],rt[t]=o,o=null!=n(e,t,i)?t.toLowerCase():null,rt[t]=r),o}});var at=/^(?:input|select|textarea|button)$/i;K.fn.extend({prop:function(e,t){return ve(this,K.prop,e,t,arguments.length>1)},removeProp:function(e){return this.each(function(){delete this[K.propFix[e]||e]})}}),K.extend({propFix:{"for":"htmlFor","class":"className"},prop:function(e,t,n){var i,o,r,a=e.nodeType;if(e&&3!==a&&8!==a&&2!==a)return r=1!==a||!K.isXMLDoc(e),r&&(t=K.propFix[t]||t,o=K.propHooks[t]),void 0!==n?o&&"set"in o&&void 0!==(i=o.set(e,n,t))?i:e[t]=n:o&&"get"in o&&null!==(i=o.get(e,t))?i:e[t]},propHooks:{tabIndex:{get:function(e){return e.hasAttribute("tabindex")||at.test(e.nodeName)||e.href?e.tabIndex:-1}}}}),G.optSelected||(K.propHooks.selected={get:function(e){var t=e.parentNode;return t&&t.parentNode&&t.parentNode.selectedIndex,null}}),K.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){K.propFix[this.toLowerCase()]=this});var st=/[\t\r\n\f]/g;K.fn.extend({addClass:function(e){var t,n,i,o,r,a,s="string"==typeof e&&e,l=0,c=this.length;if(K.isFunction(e))return this.each(function(t){K(this).addClass(e.call(this,t,this.className))});if(s)for(t=(e||"").match(pe)||[];c>l;l++)if(n=this[l],i=1===n.nodeType&&(n.className?(" "+n.className+" ").replace(st," "):" ")){for(r=0;o=t[r++];)i.indexOf(" "+o+" ")<0&&(i+=o+" ");a=K.trim(i),n.className!==a&&(n.className=a)}return this},removeClass:function(e){var t,n,i,o,r,a,s=0===arguments.length||"string"==typeof e&&e,l=0,c=this.length;if(K.isFunction(e))return this.each(function(t){K(this).removeClass(e.call(this,t,this.className))});if(s)for(t=(e||"").match(pe)||[];c>l;l++)if(n=this[l],i=1===n.nodeType&&(n.className?(" "+n.className+" ").replace(st," "):"")){for(r=0;o=t[r++];)for(;i.indexOf(" "+o+" ")>=0;)i=i.replace(" "+o+" "," ");a=e?K.trim(i):"",n.className!==a&&(n.className=a)}return this},toggleClass:function(e,t){var n=typeof e;return"boolean"==typeof t&&"string"===n?t?this.addClass(e):this.removeClass(e):this.each(K.isFunction(e)?function(n){K(this).toggleClass(e.call(this,n,this.className,t),t)}:function(){if("string"===n)for(var t,i=0,o=K(this),r=e.match(pe)||[];t=r[i++];)o.hasClass(t)?o.removeClass(t):o.addClass(t);else(n===ke||"boolean"===n)&&(this.className&&ge.set(this,"__className__",this.className),this.className=this.className||e===!1?"":ge.get(this,"__className__")||"")})},hasClass:function(e){for(var t=" "+e+" ",n=0,i=this.length;i>n;n++)if(1===this[n].nodeType&&(" "+this[n].className+" ").replace(st," ").indexOf(t)>=0)return!0;return!1}});var lt=/\r/g;K.fn.extend({val:function(e){var t,n,i,o=this[0];return arguments.length?(i=K.isFunction(e),this.each(function(n){var o;1===this.nodeType&&(o=i?e.call(this,n,K(this).val()):e,null==o?o="":"number"==typeof o?o+="":K.isArray(o)&&(o=K.map(o,function(e){return null==e?"":e+""})),t=K.valHooks[this.type]||K.valHooks[this.nodeName.toLowerCase()],t&&"set"in t&&void 0!==t.set(this,o,"value")||(this.value=o))})):o?(t=K.valHooks[o.type]||K.valHooks[o.nodeName.toLowerCase()],t&&"get"in t&&void 0!==(n=t.get(o,"value"))?n:(n=o.value,"string"==typeof n?n.replace(lt,""):null==n?"":n)):void 0}}),K.extend({valHooks:{option:{get:function(e){var t=K.find.attr(e,"value");return null!=t?t:K.trim(K.text(e))}},select:{get:function(e){for(var t,n,i=e.options,o=e.selectedIndex,r="select-one"===e.type||0>o,a=r?null:[],s=r?o+1:i.length,l=0>o?s:r?o:0;s>l;l++)if(n=i[l],!(!n.selected&&l!==o||(G.optDisabled?n.disabled:null!==n.getAttribute("disabled"))||n.parentNode.disabled&&K.nodeName(n.parentNode,"optgroup"))){if(t=K(n).val(),r)return t;a.push(t)}return a},set:function(e,t){for(var n,i,o=e.options,r=K.makeArray(t),a=o.length;a--;)i=o[a],(i.selected=K.inArray(i.value,r)>=0)&&(n=!0);return n||(e.selectedIndex=-1),r}}}}),K.each(["radio","checkbox"],function(){K.valHooks[this]={set:function(e,t){return K.isArray(t)?e.checked=K.inArray(K(e).val(),t)>=0:void 0}},G.checkOn||(K.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})}),K.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(e,t){K.fn[t]=function(e,n){return arguments.length>0?this.on(t,null,e,n):this.trigger(t)}}),K.fn.extend({hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)},bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,n,i){return this.on(t,e,n,i)},undelegate:function(e,t,n){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",n)}});var ct=K.now(),ut=/\?/;K.parseJSON=function(e){return JSON.parse(e+"")},K.parseXML=function(e){var t,n;if(!e||"string"!=typeof e)return null;try{n=new DOMParser,t=n.parseFromString(e,"text/xml")}catch(i){t=void 0}return(!t||t.getElementsByTagName("parsererror").length)&&K.error("Invalid XML: "+e),t};var dt=/#.*$/,ft=/([?&])_=[^&]*/,pt=/^(.*?):[ \t]*([^\r\n]*)$/gm,ht=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,mt=/^(?:GET|HEAD)$/,vt=/^\/\//,gt=/^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,yt={},bt={},wt="*/".concat("*"),xt=e.location.href,St=gt.exec(xt.toLowerCase())||[];K.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:xt,type:"GET",isLocal:ht.test(St[1]),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":wt,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":K.parseJSON,"text xml":K.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?L(L(e,K.ajaxSettings),t):L(K.ajaxSettings,e)},ajaxPrefilter:$(yt),ajaxTransport:$(bt),ajax:function(e,t){function n(e,t,n,a){var l,u,g,y,w,S=t;2!==b&&(b=2,s&&clearTimeout(s),i=void 0,r=a||"",x.readyState=e>0?4:0,l=e>=200&&300>e||304===e,n&&(y=F(d,x,n)),y=H(d,y,x,l),l?(d.ifModified&&(w=x.getResponseHeader("Last-Modified"),w&&(K.lastModified[o]=w),w=x.getResponseHeader("etag"),w&&(K.etag[o]=w)),204===e||"HEAD"===d.type?S="nocontent":304===e?S="notmodified":(S=y.state,u=y.data,g=y.error,l=!g)):(g=S,(e||!S)&&(S="error",0>e&&(e=0))),x.status=e,x.statusText=(t||S)+"",l?h.resolveWith(f,[u,S,x]):h.rejectWith(f,[x,S,g]),x.statusCode(v),v=void 0,c&&p.trigger(l?"ajaxSuccess":"ajaxError",[x,d,l?u:g]),m.fireWith(f,[x,S]),c&&(p.trigger("ajaxComplete",[x,d]),--K.active||K.event.trigger("ajaxStop")))}"object"==typeof e&&(t=e,e=void 0),t=t||{};var i,o,r,a,s,l,c,u,d=K.ajaxSetup({},t),f=d.context||d,p=d.context&&(f.nodeType||f.jquery)?K(f):K.event,h=K.Deferred(),m=K.Callbacks("once memory"),v=d.statusCode||{},g={},y={},b=0,w="canceled",x={readyState:0,getResponseHeader:function(e){var t;if(2===b){if(!a)for(a={};t=pt.exec(r);)a[t[1].toLowerCase()]=t[2];t=a[e.toLowerCase()]}return null==t?null:t},getAllResponseHeaders:function(){return 2===b?r:null},setRequestHeader:function(e,t){var n=e.toLowerCase();return b||(e=y[n]=y[n]||e,g[e]=t),this},overrideMimeType:function(e){return b||(d.mimeType=e),this},statusCode:function(e){var t;if(e)if(2>b)for(t in e)v[t]=[v[t],e[t]];else x.always(e[x.status]);return this},abort:function(e){var t=e||w;return i&&i.abort(t),n(0,t),this}};if(h.promise(x).complete=m.add,x.success=x.done,x.error=x.fail,d.url=((e||d.url||xt)+"").replace(dt,"").replace(vt,St[1]+"//"),d.type=t.method||t.type||d.method||d.type,d.dataTypes=K.trim(d.dataType||"*").toLowerCase().match(pe)||[""],null==d.crossDomain&&(l=gt.exec(d.url.toLowerCase()),d.crossDomain=!(!l||l[1]===St[1]&&l[2]===St[2]&&(l[3]||("http:"===l[1]?"80":"443"))===(St[3]||("http:"===St[1]?"80":"443")))),d.data&&d.processData&&"string"!=typeof d.data&&(d.data=K.param(d.data,d.traditional)),q(yt,d,t,x),2===b)return x;c=K.event&&d.global,c&&0===K.active++&&K.event.trigger("ajaxStart"),d.type=d.type.toUpperCase(),d.hasContent=!mt.test(d.type),o=d.url,d.hasContent||(d.data&&(o=d.url+=(ut.test(o)?"&":"?")+d.data,delete d.data),d.cache===!1&&(d.url=ft.test(o)?o.replace(ft,"$1_="+ct++):o+(ut.test(o)?"&":"?")+"_="+ct++)),d.ifModified&&(K.lastModified[o]&&x.setRequestHeader("If-Modified-Since",K.lastModified[o]),K.etag[o]&&x.setRequestHeader("If-None-Match",K.etag[o])),(d.data&&d.hasContent&&d.contentType!==!1||t.contentType)&&x.setRequestHeader("Content-Type",d.contentType),x.setRequestHeader("Accept",d.dataTypes[0]&&d.accepts[d.dataTypes[0]]?d.accepts[d.dataTypes[0]]+("*"!==d.dataTypes[0]?", "+wt+"; q=0.01":""):d.accepts["*"]);for(u in d.headers)x.setRequestHeader(u,d.headers[u]);if(d.beforeSend&&(d.beforeSend.call(f,x,d)===!1||2===b))return x.abort();w="abort";for(u in{success:1,error:1,complete:1})x[u](d[u]);if(i=q(bt,d,t,x)){x.readyState=1,c&&p.trigger("ajaxSend",[x,d]),d.async&&d.timeout>0&&(s=setTimeout(function(){x.abort("timeout")},d.timeout));try{b=1,i.send(g,n)}catch(S){if(!(2>b))throw S;n(-1,S)}}else n(-1,"No Transport");return x},getJSON:function(e,t,n){return K.get(e,t,n,"json")},getScript:function(e,t){return K.get(e,void 0,t,"script")}}),K.each(["get","post"],function(e,t){K[t]=function(e,n,i,o){return K.isFunction(n)&&(o=o||i,i=n,n=void 0),K.ajax({url:e,type:t,dataType:o,data:n,success:i})}}),K._evalUrl=function(e){return K.ajax({url:e,type:"GET",dataType:"script",async:!1,global:!1,"throws":!0})},K.fn.extend({wrapAll:function(e){var t;return K.isFunction(e)?this.each(function(t){K(this).wrapAll(e.call(this,t))}):(this[0]&&(t=K(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){for(var e=this;e.firstElementChild;)e=e.firstElementChild;return e}).append(this)),this)},wrapInner:function(e){return this.each(K.isFunction(e)?function(t){K(this).wrapInner(e.call(this,t))}:function(){var t=K(this),n=t.contents();n.length?n.wrapAll(e):t.append(e)})},wrap:function(e){var t=K.isFunction(e);return this.each(function(n){K(this).wrapAll(t?e.call(this,n):e)})},unwrap:function(){return this.parent().each(function(){K.nodeName(this,"body")||K(this).replaceWith(this.childNodes)}).end()}}),K.expr.filters.hidden=function(e){return e.offsetWidth<=0&&e.offsetHeight<=0},K.expr.filters.visible=function(e){return!K.expr.filters.hidden(e)};var Ct=/%20/g,Tt=/\[\]$/,kt=/\r?\n/g,It=/^(?:submit|button|image|reset|file)$/i,Et=/^(?:input|select|textarea|keygen)/i;K.param=function(e,t){var n,i=[],o=function(e,t){t=K.isFunction(t)?t():null==t?"":t,i[i.length]=encodeURIComponent(e)+"="+encodeURIComponent(t)};if(void 0===t&&(t=K.ajaxSettings&&K.ajaxSettings.traditional),K.isArray(e)||e.jquery&&!K.isPlainObject(e))K.each(e,function(){o(this.name,this.value)});else for(n in e)_(n,e[n],t,o);return i.join("&").replace(Ct,"+")},K.fn.extend({serialize:function(){return K.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=K.prop(this,"elements");return e?K.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!K(this).is(":disabled")&&Et.test(this.nodeName)&&!It.test(e)&&(this.checked||!Te.test(e))}).map(function(e,t){var n=K(this).val();return null==n?null:K.isArray(n)?K.map(n,function(e){return{name:t.name,value:e.replace(kt,"\r\n")}}):{name:t.name,value:n.replace(kt,"\r\n")}}).get()}}),K.ajaxSettings.xhr=function(){try{return new XMLHttpRequest}catch(e){}};var Ot=0,Pt={},At={0:200,1223:204},Nt=K.ajaxSettings.xhr();e.attachEvent&&e.attachEvent("onunload",function(){for(var e in Pt)Pt[e]()}),G.cors=!!Nt&&"withCredentials"in Nt,G.ajax=Nt=!!Nt,K.ajaxTransport(function(e){var t;return G.cors||Nt&&!e.crossDomain?{send:function(n,i){var o,r=e.xhr(),a=++Ot;if(r.open(e.type,e.url,e.async,e.username,e.password),e.xhrFields)for(o in e.xhrFields)r[o]=e.xhrFields[o];e.mimeType&&r.overrideMimeType&&r.overrideMimeType(e.mimeType),e.crossDomain||n["X-Requested-With"]||(n["X-Requested-With"]="XMLHttpRequest");for(o in n)r.setRequestHeader(o,n[o]);t=function(e){return function(){t&&(delete Pt[a],t=r.onload=r.onerror=null,"abort"===e?r.abort():"error"===e?i(r.status,r.statusText):i(At[r.status]||r.status,r.statusText,"string"==typeof r.responseText?{text:r.responseText}:void 0,r.getAllResponseHeaders()))}},r.onload=t(),r.onerror=t("error"),t=Pt[a]=t("abort");try{r.send(e.hasContent&&e.data||null)}catch(s){if(t)throw s}},abort:function(){t&&t()}}:void 0}),K.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/(?:java|ecma)script/},converters:{"text script":function(e){return K.globalEval(e),e}}}),K.ajaxPrefilter("script",function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type="GET")}),K.ajaxTransport("script",function(e){if(e.crossDomain){var t,n;return{send:function(i,o){t=K("<script>").prop({async:!0,charset:e.scriptCharset,src:e.url}).on("load error",n=function(e){t.remove(),n=null,e&&o("error"===e.type?404:200,e.type)}),J.head.appendChild(t[0])},abort:function(){n&&n()}}}});var jt=[],Dt=/(=)\?(?=&|$)|\?\?/;K.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=jt.pop()||K.expando+"_"+ct++;return this[e]=!0,e}}),K.ajaxPrefilter("json jsonp",function(t,n,i){var o,r,a,s=t.jsonp!==!1&&(Dt.test(t.url)?"url":"string"==typeof t.data&&!(t.contentType||"").indexOf("application/x-www-form-urlencoded")&&Dt.test(t.data)&&"data");return s||"jsonp"===t.dataTypes[0]?(o=t.jsonpCallback=K.isFunction(t.jsonpCallback)?t.jsonpCallback():t.jsonpCallback,s?t[s]=t[s].replace(Dt,"$1"+o):t.jsonp!==!1&&(t.url+=(ut.test(t.url)?"&":"?")+t.jsonp+"="+o),t.converters["script json"]=function(){return a||K.error(o+" was not called"),a[0]},t.dataTypes[0]="json",r=e[o],e[o]=function(){a=arguments},i.always(function(){e[o]=r,t[o]&&(t.jsonpCallback=n.jsonpCallback,jt.push(o)),a&&K.isFunction(r)&&r(a[0]),a=r=void 0}),"script"):void 0}),K.parseHTML=function(e,t,n){if(!e||"string"!=typeof e)return null;"boolean"==typeof t&&(n=t,t=!1),t=t||J;var i=ae.exec(e),o=!n&&[];return i?[t.createElement(i[1])]:(i=K.buildFragment([e],t,o),o&&o.length&&K(o).remove(),K.merge([],i.childNodes))};var Mt=K.fn.load;K.fn.load=function(e,t,n){if("string"!=typeof e&&Mt)return Mt.apply(this,arguments);var i,o,r,a=this,s=e.indexOf(" ");return s>=0&&(i=K.trim(e.slice(s)),e=e.slice(0,s)),K.isFunction(t)?(n=t,t=void 0):t&&"object"==typeof t&&(o="POST"),a.length>0&&K.ajax({url:e,type:o,dataType:"html",data:t}).done(function(e){r=arguments,a.html(i?K("<div>").append(K.parseHTML(e)).find(i):e)}).complete(n&&function(e,t){a.each(n,r||[e.responseText,t,e])}),this},K.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(e,t){K.fn[t]=function(e){return this.on(t,e)}}),K.expr.filters.animated=function(e){return K.grep(K.timers,function(t){return e===t.elem}).length};var $t=e.document.documentElement;K.offset={setOffset:function(e,t,n){var i,o,r,a,s,l,c,u=K.css(e,"position"),d=K(e),f={};"static"===u&&(e.style.position="relative"),s=d.offset(),r=K.css(e,"top"),l=K.css(e,"left"),c=("absolute"===u||"fixed"===u)&&(r+l).indexOf("auto")>-1,c?(i=d.position(),a=i.top,o=i.left):(a=parseFloat(r)||0,o=parseFloat(l)||0),K.isFunction(t)&&(t=t.call(e,n,s)),null!=t.top&&(f.top=t.top-s.top+a),null!=t.left&&(f.left=t.left-s.left+o),"using"in t?t.using.call(e,f):d.css(f)}},K.fn.extend({offset:function(e){if(arguments.length)return void 0===e?this:this.each(function(t){K.offset.setOffset(this,e,t)});var t,n,i=this[0],o={top:0,left:0},r=i&&i.ownerDocument;return r?(t=r.documentElement,K.contains(t,i)?(typeof i.getBoundingClientRect!==ke&&(o=i.getBoundingClientRect()),n=W(r),{top:o.top+n.pageYOffset-t.clientTop,left:o.left+n.pageXOffset-t.clientLeft}):o):void 0},position:function(){if(this[0]){var e,t,n=this[0],i={top:0,left:0};return"fixed"===K.css(n,"position")?t=n.getBoundingClientRect():(e=this.offsetParent(),t=this.offset(),K.nodeName(e[0],"html")||(i=e.offset()),i.top+=K.css(e[0],"borderTopWidth",!0),i.left+=K.css(e[0],"borderLeftWidth",!0)),{top:t.top-i.top-K.css(n,"marginTop",!0),left:t.left-i.left-K.css(n,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var e=this.offsetParent||$t;e&&!K.nodeName(e,"html")&&"static"===K.css(e,"position");)e=e.offsetParent;return e||$t})}}),K.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(t,n){var i="pageYOffset"===n;K.fn[t]=function(o){return ve(this,function(t,o,r){var a=W(t);return void 0===r?a?a[n]:t[o]:void(a?a.scrollTo(i?e.pageXOffset:r,i?r:e.pageYOffset):t[o]=r)},t,o,arguments.length,null)}}),K.each(["top","left"],function(e,t){K.cssHooks[t]=S(G.pixelPosition,function(e,n){return n?(n=x(e,t),Re.test(n)?K(e).position()[t]+"px":n):void 0})}),K.each({Height:"height",Width:"width"},function(e,t){K.each({padding:"inner"+e,content:t,"":"outer"+e},function(n,i){K.fn[i]=function(i,o){var r=arguments.length&&(n||"boolean"!=typeof i),a=n||(i===!0||o===!0?"margin":"border");return ve(this,function(t,n,i){var o;return K.isWindow(t)?t.document.documentElement["client"+e]:9===t.nodeType?(o=t.documentElement,Math.max(t.body["scroll"+e],o["scroll"+e],t.body["offset"+e],o["offset"+e],o["client"+e])):void 0===i?K.css(t,n,a):K.style(t,n,i,a)},t,r?i:void 0,r,null)}})}),K.fn.size=function(){return this.length},K.fn.andSelf=K.fn.addBack,"function"==typeof define&&define.amd&&define("jquery",[],function(){return K});var qt=e.jQuery,Lt=e.$;return K.noConflict=function(t){return e.$===K&&(e.$=Lt),t&&e.jQuery===K&&(e.jQuery=qt),K},typeof t===ke&&(e.jQuery=e.$=K),K}),jQuery.easing.jswing=jQuery.easing.swing,jQuery.extend(jQuery.easing,{def:"easeOutQuad",swing:function(e,t,n,i,o){return jQuery.easing[jQuery.easing.def](e,t,n,i,o)},easeInQuad:function(e,t,n,i,o){return i*(t/=o)*t+n},easeOutQuad:function(e,t,n,i,o){return-i*(t/=o)*(t-2)+n},easeInOutQuad:function(e,t,n,i,o){return(t/=o/2)<1?i/2*t*t+n:-i/2*(--t*(t-2)-1)+n},easeInCubic:function(e,t,n,i,o){return i*(t/=o)*t*t+n},easeOutCubic:function(e,t,n,i,o){return i*((t=t/o-1)*t*t+1)+n},easeInOutCubic:function(e,t,n,i,o){return(t/=o/2)<1?i/2*t*t*t+n:i/2*((t-=2)*t*t+2)+n},easeInQuart:function(e,t,n,i,o){return i*(t/=o)*t*t*t+n},easeOutQuart:function(e,t,n,i,o){return-i*((t=t/o-1)*t*t*t-1)+n},easeInOutQuart:function(e,t,n,i,o){return(t/=o/2)<1?i/2*t*t*t*t+n:-i/2*((t-=2)*t*t*t-2)+n},easeInQuint:function(e,t,n,i,o){return i*(t/=o)*t*t*t*t+n},easeOutQuint:function(e,t,n,i,o){return i*((t=t/o-1)*t*t*t*t+1)+n},easeInOutQuint:function(e,t,n,i,o){return(t/=o/2)<1?i/2*t*t*t*t*t+n:i/2*((t-=2)*t*t*t*t+2)+n},easeInSine:function(e,t,n,i,o){return-i*Math.cos(t/o*(Math.PI/2))+i+n},easeOutSine:function(e,t,n,i,o){return i*Math.sin(t/o*(Math.PI/2))+n},easeInOutSine:function(e,t,n,i,o){return-i/2*(Math.cos(Math.PI*t/o)-1)+n},easeInExpo:function(e,t,n,i,o){return 0==t?n:i*Math.pow(2,10*(t/o-1))+n},easeOutExpo:function(e,t,n,i,o){return t==o?n+i:i*(-Math.pow(2,-10*t/o)+1)+n},easeInOutExpo:function(e,t,n,i,o){return 0==t?n:t==o?n+i:(t/=o/2)<1?i/2*Math.pow(2,10*(t-1))+n:i/2*(-Math.pow(2,-10*--t)+2)+n;
},easeInCirc:function(e,t,n,i,o){return-i*(Math.sqrt(1-(t/=o)*t)-1)+n},easeOutCirc:function(e,t,n,i,o){return i*Math.sqrt(1-(t=t/o-1)*t)+n},easeInOutCirc:function(e,t,n,i,o){return(t/=o/2)<1?-i/2*(Math.sqrt(1-t*t)-1)+n:i/2*(Math.sqrt(1-(t-=2)*t)+1)+n},easeInElastic:function(e,t,n,i,o){var r=1.70158,a=0,s=i;if(0==t)return n;if(1==(t/=o))return n+i;if(a||(a=.3*o),s<Math.abs(i)){s=i;var r=a/4}else var r=a/(2*Math.PI)*Math.asin(i/s);return-(s*Math.pow(2,10*(t-=1))*Math.sin((t*o-r)*(2*Math.PI)/a))+n},easeOutElastic:function(e,t,n,i,o){var r=1.70158,a=0,s=i;if(0==t)return n;if(1==(t/=o))return n+i;if(a||(a=.3*o),s<Math.abs(i)){s=i;var r=a/4}else var r=a/(2*Math.PI)*Math.asin(i/s);return s*Math.pow(2,-10*t)*Math.sin((t*o-r)*(2*Math.PI)/a)+i+n},easeInOutElastic:function(e,t,n,i,o){var r=1.70158,a=0,s=i;if(0==t)return n;if(2==(t/=o/2))return n+i;if(a||(a=o*(.3*1.5)),s<Math.abs(i)){s=i;var r=a/4}else var r=a/(2*Math.PI)*Math.asin(i/s);return t<1?-.5*(s*Math.pow(2,10*(t-=1))*Math.sin((t*o-r)*(2*Math.PI)/a))+n:s*Math.pow(2,-10*(t-=1))*Math.sin((t*o-r)*(2*Math.PI)/a)*.5+i+n},easeInBack:function(e,t,n,i,o,r){return void 0==r&&(r=1.70158),i*(t/=o)*t*((r+1)*t-r)+n},easeOutBack:function(e,t,n,i,o,r){return void 0==r&&(r=1.70158),i*((t=t/o-1)*t*((r+1)*t+r)+1)+n},easeInOutBack:function(e,t,n,i,o,r){return void 0==r&&(r=1.70158),(t/=o/2)<1?i/2*(t*t*(((r*=1.525)+1)*t-r))+n:i/2*((t-=2)*t*(((r*=1.525)+1)*t+r)+2)+n},easeInBounce:function(e,t,n,i,o){return i-jQuery.easing.easeOutBounce(e,o-t,0,i,o)+n},easeOutBounce:function(e,t,n,i,o){return(t/=o)<1/2.75?i*(7.5625*t*t)+n:t<2/2.75?i*(7.5625*(t-=1.5/2.75)*t+.75)+n:t<2.5/2.75?i*(7.5625*(t-=2.25/2.75)*t+.9375)+n:i*(7.5625*(t-=2.625/2.75)*t+.984375)+n},easeInOutBounce:function(e,t,n,i,o){return t<o/2?.5*jQuery.easing.easeInBounce(e,2*t,0,i,o)+n:.5*jQuery.easing.easeOutBounce(e,2*t-o,0,i,o)+.5*i+n}}),function(e){function t(t){e.fn.cycle.debug&&n(t)}function n(){window.console&&console.log&&console.log("[cycle] "+Array.prototype.join.call(arguments," "))}function i(t,i,o){function a(t,i,o){if(!t&&i===!0){var r=e(o).data("cycle.opts");if(!r)return n("options not found, can not resume"),!1;o.cycleTimeout&&(clearTimeout(o.cycleTimeout),o.cycleTimeout=0),u(r.elements,r,1,!r.backwards)}}if(void 0==t.cycleStop&&(t.cycleStop=0),void 0!==i&&null!==i||(i={}),i.constructor==String){switch(i){case"destroy":case"stop":var s=e(t).data("cycle.opts");return!!s&&(t.cycleStop++,t.cycleTimeout&&clearTimeout(t.cycleTimeout),t.cycleTimeout=0,e(t).removeData("cycle.opts"),"destroy"==i&&r(s),!1);case"toggle":return t.cyclePause=1===t.cyclePause?0:1,a(t.cyclePause,o,t),!1;case"pause":return t.cyclePause=1,!1;case"resume":return t.cyclePause=0,a(!1,o,t),!1;case"prev":case"next":var s=e(t).data("cycle.opts");return s?(e.fn.cycle[i](s),!1):(n('options not found, "prev/next" ignored'),!1);default:i={fx:i}}return i}if(i.constructor==Number){var l=i;return(i=e(t).data("cycle.opts"))?l<0||l>=i.elements.length?(n("invalid slide index: "+l),!1):(i.nextSlide=l,t.cycleTimeout&&(clearTimeout(t.cycleTimeout),t.cycleTimeout=0),"string"==typeof o&&(i.oneTimeFx=o),u(i.elements,i,1,l>=i.currSlide),!1):(n("options not found, can not advance slide"),!1)}return i}function o(t,n){if(!e.support.opacity&&n.cleartype&&t.style.filter)try{t.style.removeAttribute("filter")}catch(i){}}function r(t){t.next&&e(t.next).unbind(t.prevNextEvent),t.prev&&e(t.prev).unbind(t.prevNextEvent),(t.pager||t.pagerAnchorBuilder)&&e.each(t.pagerAnchors||[],function(){this.unbind().remove()}),t.pagerAnchors=null,t.destroy&&t.destroy(t)}function a(t,i,r,a,d){var p=e.extend({},e.fn.cycle.defaults,a||{},e.metadata?t.metadata():e.meta?t.data():{});p.autostop&&(p.countdown=p.autostopCount||r.length);var v=t[0];if(t.data("cycle.opts",p),p.$cont=t,p.stopCount=v.cycleStop,p.elements=r,p.before=p.before?[p.before]:[],p.after=p.after?[p.after]:[],!e.support.opacity&&p.cleartype&&p.after.push(function(){o(this,p)}),p.continuous&&p.after.push(function(){u(r,p,0,!p.backwards)}),s(p),e.support.opacity||!p.cleartype||p.cleartypeNoBg||m(i),"static"==t.css("position")&&t.css("position","relative"),p.width&&t.width(p.width),p.height&&"auto"!=p.height&&t.height(p.height),p.startingSlide?p.startingSlide=parseInt(p.startingSlide):p.backwards&&(p.startingSlide=r.length-1),p.random){p.randomMap=[];for(var g=0;g<r.length;g++)p.randomMap.push(g);p.randomMap.sort(function(e,t){return Math.random()-.5}),p.randomIndex=1,p.startingSlide=p.randomMap[1]}else p.startingSlide>=r.length&&(p.startingSlide=0);p.currSlide=p.startingSlide||0;var y=p.startingSlide;i.css({position:"absolute",top:0,left:0}).hide().each(function(t){var n;n=p.backwards?y?t<=y?r.length+(t-y):y-t:r.length-t:y?t>=y?r.length-(t-y):y-t:r.length-t,e(this).css("z-index",n)}),e(r[y]).css("opacity",1).show(),o(r[y],p),p.fit&&p.width&&i.width(p.width),p.fit&&p.height&&"auto"!=p.height&&i.height(p.height);var b=p.containerResize&&!t.innerHeight();if(b){for(var w=0,x=0,S=0;S<r.length;S++){var C=e(r[S]),T=C[0],k=C.outerWidth(),I=C.outerHeight();k||(k=T.offsetWidth||T.width||C.attr("width")),I||(I=T.offsetHeight||T.height||C.attr("height")),w=k>w?k:w,x=I>x?I:x}w>0&&x>0&&t.css({width:w+"px",height:x+"px"})}if(p.pause&&t.hover(function(){this.cyclePause++},function(){this.cyclePause--}),l(p)===!1)return!1;var E=!1;if(a.requeueAttempts=a.requeueAttempts||0,i.each(function(){var t=e(this);if(this.cycleH=p.fit&&p.height?p.height:t.height()||this.offsetHeight||this.height||t.attr("height")||0,this.cycleW=p.fit&&p.width?p.width:t.width()||this.offsetWidth||this.width||t.attr("width")||0,t.is("img")){var i=e.browser.msie&&28==this.cycleW&&30==this.cycleH&&!this.complete,o=e.browser.mozilla&&34==this.cycleW&&19==this.cycleH&&!this.complete,r=e.browser.opera&&(42==this.cycleW&&19==this.cycleH||37==this.cycleW&&17==this.cycleH)&&!this.complete,s=0==this.cycleH&&0==this.cycleW&&!this.complete;if(i||o||r||s){if(d.s&&p.requeueOnImageNotLoaded&&++a.requeueAttempts<100)return n(a.requeueAttempts," - img slide not loaded, requeuing slideshow: ",this.src,this.cycleW,this.cycleH),setTimeout(function(){e(d.s,d.c).cycle(a)},p.requeueTimeout),E=!0,!1;n("could not determine size of image: "+this.src,this.cycleW,this.cycleH)}}return!0}),E)return!1;if(p.cssBefore=p.cssBefore||{},p.cssAfter=p.cssAfter||{},p.cssFirst=p.cssFirst||{},p.animIn=p.animIn||{},p.animOut=p.animOut||{},i.not(":eq("+y+")").css(p.cssBefore),e(i[y]).css(p.cssFirst),p.timeout){p.timeout=parseInt(p.timeout),p.speed.constructor==String&&(p.speed=e.fx.speeds[p.speed]||parseInt(p.speed)),p.sync||(p.speed=p.speed/2);for(var O="none"==p.fx?0:"shuffle"==p.fx?500:250;p.timeout-p.speed<O;)p.timeout+=p.speed}if(p.easing&&(p.easeIn=p.easeOut=p.easing),p.speedIn||(p.speedIn=p.speed),p.speedOut||(p.speedOut=p.speed),p.slideCount=r.length,p.currSlide=p.lastSlide=y,p.random?(++p.randomIndex==r.length&&(p.randomIndex=0),p.nextSlide=p.randomMap[p.randomIndex]):p.backwards?p.nextSlide=0==p.startingSlide?r.length-1:p.startingSlide-1:p.nextSlide=p.startingSlide>=r.length-1?0:p.startingSlide+1,!p.multiFx){var P=e.fn.cycle.transitions[p.fx];if(e.isFunction(P))P(t,i,p);else if("custom"!=p.fx&&!p.multiFx)return n("unknown transition: "+p.fx,"; slideshow terminating"),!1}var A=i[y];return p.before.length&&p.before[0].apply(A,[A,A,p,!0]),p.after.length&&p.after[0].apply(A,[A,A,p,!0]),p.next&&e(p.next).bind(p.prevNextEvent,function(){return f(p,1)}),p.prev&&e(p.prev).bind(p.prevNextEvent,function(){return f(p,0)}),(p.pager||p.pagerAnchorBuilder)&&h(r,p),c(p,r),p}function s(t){t.original={before:[],after:[]},t.original.cssBefore=e.extend({},t.cssBefore),t.original.cssAfter=e.extend({},t.cssAfter),t.original.animIn=e.extend({},t.animIn),t.original.animOut=e.extend({},t.animOut),e.each(t.before,function(){t.original.before.push(this)}),e.each(t.after,function(){t.original.after.push(this)})}function l(i){var o,r,a=e.fn.cycle.transitions;if(i.fx.indexOf(",")>0){for(i.multiFx=!0,i.fxs=i.fx.replace(/\s*/g,"").split(","),o=0;o<i.fxs.length;o++){var s=i.fxs[o];r=a[s],r&&a.hasOwnProperty(s)&&e.isFunction(r)||(n("discarding unknown transition: ",s),i.fxs.splice(o,1),o--)}if(!i.fxs.length)return n("No valid transitions named; slideshow terminating."),!1}else if("all"==i.fx){i.multiFx=!0,i.fxs=[];for(p in a)r=a[p],a.hasOwnProperty(p)&&e.isFunction(r)&&i.fxs.push(p)}if(i.multiFx&&i.randomizeEffects){var l=Math.floor(20*Math.random())+30;for(o=0;o<l;o++){var c=Math.floor(Math.random()*i.fxs.length);i.fxs.push(i.fxs.splice(c,1)[0])}t("randomized fx sequence: ",i.fxs)}return!0}function c(t,n){t.addSlide=function(i,o){var r=e(i),a=r[0];t.autostopCount||t.countdown++,n[o?"unshift":"push"](a),t.els&&t.els[o?"unshift":"push"](a),t.slideCount=n.length,r.css("position","absolute"),r[o?"prependTo":"appendTo"](t.$cont),o&&(t.currSlide++,t.nextSlide++),e.support.opacity||!t.cleartype||t.cleartypeNoBg||m(r),t.fit&&t.width&&r.width(t.width),t.fit&&t.height&&"auto"!=t.height&&r.height(t.height),a.cycleH=t.fit&&t.height?t.height:r.height(),a.cycleW=t.fit&&t.width?t.width:r.width(),r.css(t.cssBefore),(t.pager||t.pagerAnchorBuilder)&&e.fn.cycle.createPagerAnchor(n.length-1,a,e(t.pager),n,t),e.isFunction(t.onAddSlide)?t.onAddSlide(r):r.hide()}}function u(n,i,o,r){if(o&&i.busy&&i.manualTrump&&(t("manualTrump in go(), stopping active transition"),e(n).stop(!0,!0),i.busy=0),i.busy)return void t("transition active, ignoring new tx request");var a=i.$cont[0],s=n[i.currSlide],l=n[i.nextSlide];if(a.cycleStop==i.stopCount&&(0!==a.cycleTimeout||o)){if(!o&&!a.cyclePause&&!i.bounce&&(i.autostop&&--i.countdown<=0||i.nowrap&&!i.random&&i.nextSlide<i.currSlide))return void(i.end&&i.end(i));var c=!1;if((o||!a.cyclePause)&&i.nextSlide!=i.currSlide){c=!0;var f=i.fx;s.cycleH=s.cycleH||e(s).height(),s.cycleW=s.cycleW||e(s).width(),l.cycleH=l.cycleH||e(l).height(),l.cycleW=l.cycleW||e(l).width(),i.multiFx&&((void 0==i.lastFx||++i.lastFx>=i.fxs.length)&&(i.lastFx=0),f=i.fxs[i.lastFx],i.currFx=f),i.oneTimeFx&&(f=i.oneTimeFx,i.oneTimeFx=null),e.fn.cycle.resetState(i,f),i.before.length&&e.each(i.before,function(e,t){a.cycleStop==i.stopCount&&t.apply(l,[s,l,i,r])});var p=function(){i.busy=0,e.each(i.after,function(e,t){a.cycleStop==i.stopCount&&t.apply(l,[s,l,i,r])})};t("tx firing("+f+"); currSlide: "+i.currSlide+"; nextSlide: "+i.nextSlide),i.busy=1,i.fxFn?i.fxFn(s,l,i,p,r,o&&i.fastOnEvent):e.isFunction(e.fn.cycle[i.fx])?e.fn.cycle[i.fx](s,l,i,p,r,o&&i.fastOnEvent):e.fn.cycle.custom(s,l,i,p,r,o&&i.fastOnEvent)}if(c||i.nextSlide==i.currSlide)if(i.lastSlide=i.currSlide,i.random)i.currSlide=i.nextSlide,++i.randomIndex==n.length&&(i.randomIndex=0),i.nextSlide=i.randomMap[i.randomIndex],i.nextSlide==i.currSlide&&(i.nextSlide=i.currSlide==i.slideCount-1?0:i.currSlide+1);else if(i.backwards){var h=i.nextSlide-1<0;h&&i.bounce?(i.backwards=!i.backwards,i.nextSlide=1,i.currSlide=0):(i.nextSlide=h?n.length-1:i.nextSlide-1,i.currSlide=h?0:i.nextSlide+1)}else{var h=i.nextSlide+1==n.length;h&&i.bounce?(i.backwards=!i.backwards,i.nextSlide=n.length-2,i.currSlide=n.length-1):(i.nextSlide=h?0:i.nextSlide+1,i.currSlide=h?n.length-1:i.nextSlide-1)}c&&i.pager&&i.updateActivePagerLink(i.pager,i.currSlide,i.activePagerClass);var m=0;i.timeout&&!i.continuous?m=d(n[i.currSlide],n[i.nextSlide],i,r):i.continuous&&a.cyclePause&&(m=10),m>0&&(a.cycleTimeout=setTimeout(function(){u(n,i,0,!i.backwards)},m))}}function d(e,n,i,o){if(i.timeoutFn){for(var r=i.timeoutFn.call(e,e,n,i,o);"none"!=i.fx&&r-i.speed<250;)r+=i.speed;if(t("calculated timeout: "+r+"; speed: "+i.speed),r!==!1)return r}return i.timeout}function f(t,n){var i=n?1:-1,o=t.elements,r=t.$cont[0],a=r.cycleTimeout;if(a&&(clearTimeout(a),r.cycleTimeout=0),t.random&&i<0)t.randomIndex--,--t.randomIndex==-2?t.randomIndex=o.length-2:t.randomIndex==-1&&(t.randomIndex=o.length-1),t.nextSlide=t.randomMap[t.randomIndex];else if(t.random)t.nextSlide=t.randomMap[t.randomIndex];else if(t.nextSlide=t.currSlide+i,t.nextSlide<0){if(t.nowrap)return!1;t.nextSlide=o.length-1}else if(t.nextSlide>=o.length){if(t.nowrap)return!1;t.nextSlide=0}var s=t.onPrevNextEvent||t.prevNextClick;return e.isFunction(s)&&s(i>0,t.nextSlide,o[t.nextSlide]),u(o,t,1,n),!1}function h(t,n){var i=e(n.pager);e.each(t,function(o,r){e.fn.cycle.createPagerAnchor(o,r,i,t,n)}),n.updateActivePagerLink(n.pager,n.startingSlide,n.activePagerClass)}function m(n){function i(e){return e=parseInt(e).toString(16),e.length<2?"0"+e:e}function o(t){for(;t&&"html"!=t.nodeName.toLowerCase();t=t.parentNode){var n=e.css(t,"background-color");if(n&&n.indexOf("rgb")>=0){var o=n.match(/\d+/g);return"#"+i(o[0])+i(o[1])+i(o[2])}if(n&&"transparent"!=n)return n}return"#ffffff"}t("applying clearType background-color hack"),n.each(function(){e(this).css("background-color",o(this))})}var v="2.99";void 0==e.support&&(e.support={opacity:!e.browser.msie}),e.expr[":"].paused=function(e){return e.cyclePause},e.fn.cycle=function(o,r){var s={s:this.selector,c:this.context};return 0===this.length&&"stop"!=o?!e.isReady&&s.s?(n("DOM not ready, queuing slideshow"),e(function(){e(s.s,s.c).cycle(o,r)}),this):(n("terminating; zero elements found by selector"+(e.isReady?"":" (DOM not ready)")),this):this.each(function(){var l=i(this,o,r);if(l!==!1){l.updateActivePagerLink=l.updateActivePagerLink||e.fn.cycle.updateActivePagerLink,this.cycleTimeout&&clearTimeout(this.cycleTimeout),this.cycleTimeout=this.cyclePause=0;var c=e(this),f=l.slideExpr?e(l.slideExpr,this):c.children(),p=f.get();if(p.length<2)return void n("terminating; too few slides: "+p.length);var h=a(c,f,p,l,s);if(h!==!1){var m=h.continuous?10:d(p[h.currSlide],p[h.nextSlide],h,!h.backwards);m&&(m+=h.delay||0,m<10&&(m=10),t("first timeout: "+m),this.cycleTimeout=setTimeout(function(){u(p,h,0,!l.backwards)},m))}}})},e.fn.cycle.resetState=function(t,n){n=n||t.fx,t.before=[],t.after=[],t.cssBefore=e.extend({},t.original.cssBefore),t.cssAfter=e.extend({},t.original.cssAfter),t.animIn=e.extend({},t.original.animIn),t.animOut=e.extend({},t.original.animOut),t.fxFn=null,e.each(t.original.before,function(){t.before.push(this)}),e.each(t.original.after,function(){t.after.push(this)});var i=e.fn.cycle.transitions[n];e.isFunction(i)&&i(t.$cont,e(t.elements),t)},e.fn.cycle.updateActivePagerLink=function(t,n,i){e(t).each(function(){e(this).children().removeClass(i).eq(n).addClass(i)})},e.fn.cycle.next=function(e){f(e,1)},e.fn.cycle.prev=function(e){f(e,0)},e.fn.cycle.createPagerAnchor=function(n,i,o,r,a){var s;if(e.isFunction(a.pagerAnchorBuilder)?(s=a.pagerAnchorBuilder(n,i),t("pagerAnchorBuilder("+n+", el) returned: "+s)):s='<a href="#">'+(n+1)+"</a>",s){var l=e(s);if(0===l.parents("body").length){var c=[];o.length>1?(o.each(function(){var t=l.clone(!0);e(this).append(t),c.push(t[0])}),l=e(c)):l.appendTo(o)}a.pagerAnchors=a.pagerAnchors||[],a.pagerAnchors.push(l),l.bind(a.pagerEvent,function(t){t.preventDefault(),a.nextSlide=n;var i=a.$cont[0],o=i.cycleTimeout;o&&(clearTimeout(o),i.cycleTimeout=0);var s=a.onPagerEvent||a.pagerClick;e.isFunction(s)&&s(a.nextSlide,r[a.nextSlide]),u(r,a,1,a.currSlide<n)}),/^click/.test(a.pagerEvent)||a.allowPagerClickBubble||l.bind("click.cycle",function(){return!1}),a.pauseOnPagerHover&&l.hover(function(){a.$cont[0].cyclePause++},function(){a.$cont[0].cyclePause--})}},e.fn.cycle.hopsFromLast=function(e,t){var n,i=e.lastSlide,o=e.currSlide;return n=t?o>i?o-i:e.slideCount-i:o<i?i-o:i+e.slideCount-o},e.fn.cycle.commonReset=function(t,n,i,o,r,a){e(i.elements).not(t).hide(),"undefined"==typeof i.cssBefore.opacity&&(i.cssBefore.opacity=1),i.cssBefore.display="block",i.slideResize&&o!==!1&&n.cycleW>0&&(i.cssBefore.width=n.cycleW),i.slideResize&&r!==!1&&n.cycleH>0&&(i.cssBefore.height=n.cycleH),i.cssAfter=i.cssAfter||{},i.cssAfter.display="none",e(t).css("zIndex",i.slideCount+(a===!0?1:0)),e(n).css("zIndex",i.slideCount+(a===!0?0:1))},e.fn.cycle.custom=function(t,n,i,o,r,a){var s=e(t),l=e(n),c=i.speedIn,u=i.speedOut,d=i.easeIn,f=i.easeOut;l.css(i.cssBefore),a&&(c=u="number"==typeof a?a:1,d=f=null);var p=function(){l.animate(i.animIn,c,d,function(){o()})};s.animate(i.animOut,u,f,function(){s.css(i.cssAfter),i.sync||p()}),i.sync&&p()},e.fn.cycle.transitions={fade:function(t,n,i){n.not(":eq("+i.currSlide+")").css("opacity",0),i.before.push(function(t,n,i){e.fn.cycle.commonReset(t,n,i),i.cssBefore.opacity=0}),i.animIn={opacity:1},i.animOut={opacity:0},i.cssBefore={top:0,left:0}}},e.fn.cycle.ver=function(){return v},e.fn.cycle.defaults={activePagerClass:"activeSlide",after:null,allowPagerClickBubble:!1,animIn:null,animOut:null,autostop:0,autostopCount:0,backwards:!1,before:null,cleartype:!e.support.opacity,cleartypeNoBg:!1,containerResize:1,continuous:0,cssAfter:null,cssBefore:null,delay:0,easeIn:null,easeOut:null,easing:null,end:null,fastOnEvent:0,fit:0,fx:"fade",fxFn:null,height:"auto",manualTrump:!0,next:null,nowrap:0,onPagerEvent:null,onPrevNextEvent:null,pager:null,pagerAnchorBuilder:null,pagerEvent:"click.cycle",pause:0,pauseOnPagerHover:0,prev:null,prevNextEvent:"click.cycle",random:0,randomizeEffects:1,requeueOnImageNotLoaded:!0,requeueTimeout:250,rev:0,shuffle:null,slideExpr:null,slideResize:1,speed:1e3,speedIn:null,speedOut:null,startingSlide:0,sync:1,timeout:4e3,timeoutFn:null,updateActivePagerLink:null}}(jQuery),function(e){e.fn.cycle.transitions.none=function(t,n,i){i.fxFn=function(t,n,i,o){e(n).show(),e(t).hide(),o()}},e.fn.cycle.transitions.fadeout=function(t,n,i){n.not(":eq("+i.currSlide+")").css({display:"block",opacity:1}),i.before.push(function(t,n,i,o,r,a){e(t).css("zIndex",i.slideCount+(!a==!0?1:0)),e(n).css("zIndex",i.slideCount+(!a==!0?0:1))}),i.animIn.opacity=1,i.animOut.opacity=0,i.cssBefore.opacity=1,i.cssBefore.display="block",i.cssAfter.zIndex=0},e.fn.cycle.transitions.scrollUp=function(t,n,i){t.css("overflow","hidden"),i.before.push(e.fn.cycle.commonReset);var o=t.height();i.cssBefore.top=o,i.cssBefore.left=0,i.cssFirst.top=0,i.animIn.top=0,i.animOut.top=-o},e.fn.cycle.transitions.scrollDown=function(t,n,i){t.css("overflow","hidden"),i.before.push(e.fn.cycle.commonReset);var o=t.height();i.cssFirst.top=0,i.cssBefore.top=-o,i.cssBefore.left=0,i.animIn.top=0,i.animOut.top=o},e.fn.cycle.transitions.scrollLeft=function(t,n,i){t.css("overflow","hidden"),i.before.push(e.fn.cycle.commonReset);var o=t.width();i.cssFirst.left=0,i.cssBefore.left=o,i.cssBefore.top=0,i.animIn.left=0,i.animOut.left=0-o},e.fn.cycle.transitions.scrollRight=function(t,n,i){t.css("overflow","hidden"),i.before.push(e.fn.cycle.commonReset);var o=t.width();i.cssFirst.left=0,i.cssBefore.left=-o,i.cssBefore.top=0,i.animIn.left=0,i.animOut.left=o},e.fn.cycle.transitions.scrollHorz=function(t,n,i){t.css("overflow","hidden").width(),i.before.push(function(t,n,i,o){i.rev&&(o=!o),e.fn.cycle.commonReset(t,n,i),i.cssBefore.left=o?n.cycleW-1:1-n.cycleW,i.animOut.left=o?-t.cycleW:t.cycleW}),i.cssFirst.left=0,i.cssBefore.top=0,i.animIn.left=0,i.animOut.top=0},e.fn.cycle.transitions.scrollVert=function(t,n,i){t.css("overflow","hidden"),i.before.push(function(t,n,i,o){i.rev&&(o=!o),e.fn.cycle.commonReset(t,n,i),i.cssBefore.top=o?1-n.cycleH:n.cycleH-1,i.animOut.top=o?t.cycleH:-t.cycleH}),i.cssFirst.top=0,i.cssBefore.left=0,i.animIn.top=0,i.animOut.left=0},e.fn.cycle.transitions.slideX=function(t,n,i){i.before.push(function(t,n,i){e(i.elements).not(t).hide(),e.fn.cycle.commonReset(t,n,i,!1,!0),i.animIn.width=n.cycleW}),i.cssBefore.left=0,i.cssBefore.top=0,i.cssBefore.width=0,i.animIn.width="show",i.animOut.width=0},e.fn.cycle.transitions.slideY=function(t,n,i){i.before.push(function(t,n,i){e(i.elements).not(t).hide(),e.fn.cycle.commonReset(t,n,i,!0,!1),i.animIn.height=n.cycleH}),i.cssBefore.left=0,i.cssBefore.top=0,i.cssBefore.height=0,i.animIn.height="show",i.animOut.height=0},e.fn.cycle.transitions.shuffle=function(t,n,i){var o,r=t.css("overflow","visible").width();for(n.css({left:0,top:0}),i.before.push(function(t,n,i){e.fn.cycle.commonReset(t,n,i,!0,!0,!0)}),i.speedAdjusted||(i.speed=i.speed/2,i.speedAdjusted=!0),i.random=0,i.shuffle=i.shuffle||{left:-r,top:15},i.els=[],o=0;o<n.length;o++)i.els.push(n[o]);for(o=0;o<i.currSlide;o++)i.els.push(i.els.shift());i.fxFn=function(t,n,i,o,r){i.rev&&(r=!r);var a=e(r?t:n);e(n).css(i.cssBefore);var s=i.slideCount;a.animate(i.shuffle,i.speedIn,i.easeIn,function(){for(var n=e.fn.cycle.hopsFromLast(i,r),l=0;l<n;l++)r?i.els.push(i.els.shift()):i.els.unshift(i.els.pop());if(r)for(var c=0,u=i.els.length;c<u;c++)e(i.els[c]).css("z-index",u-c+s);else{var d=e(t).css("z-index");a.css("z-index",parseInt(d)+1+s)}a.animate({left:0,top:0},i.speedOut,i.easeOut,function(){e(r?this:t).hide(),o&&o()})})},e.extend(i.cssBefore,{display:"block",opacity:1,top:0,left:0})},e.fn.cycle.transitions.turnUp=function(t,n,i){i.before.push(function(t,n,i){e.fn.cycle.commonReset(t,n,i,!0,!1),i.cssBefore.top=n.cycleH,i.animIn.height=n.cycleH,i.animOut.width=n.cycleW}),i.cssFirst.top=0,i.cssBefore.left=0,i.cssBefore.height=0,i.animIn.top=0,i.animOut.height=0},e.fn.cycle.transitions.turnDown=function(t,n,i){i.before.push(function(t,n,i){e.fn.cycle.commonReset(t,n,i,!0,!1),i.animIn.height=n.cycleH,i.animOut.top=t.cycleH}),i.cssFirst.top=0,i.cssBefore.left=0,i.cssBefore.top=0,i.cssBefore.height=0,i.animOut.height=0},e.fn.cycle.transitions.turnLeft=function(t,n,i){i.before.push(function(t,n,i){e.fn.cycle.commonReset(t,n,i,!1,!0),i.cssBefore.left=n.cycleW,i.animIn.width=n.cycleW}),i.cssBefore.top=0,i.cssBefore.width=0,i.animIn.left=0,i.animOut.width=0},e.fn.cycle.transitions.turnRight=function(t,n,i){i.before.push(function(t,n,i){e.fn.cycle.commonReset(t,n,i,!1,!0),i.animIn.width=n.cycleW,i.animOut.left=t.cycleW}),e.extend(i.cssBefore,{top:0,left:0,width:0}),i.animIn.left=0,i.animOut.width=0},e.fn.cycle.transitions.zoom=function(t,n,i){i.before.push(function(t,n,i){e.fn.cycle.commonReset(t,n,i,!1,!1,!0),i.cssBefore.top=n.cycleH/2,i.cssBefore.left=n.cycleW/2,e.extend(i.animIn,{top:0,left:0,width:n.cycleW,height:n.cycleH}),e.extend(i.animOut,{width:0,height:0,top:t.cycleH/2,left:t.cycleW/2})}),i.cssFirst.top=0,i.cssFirst.left=0,i.cssBefore.width=0,i.cssBefore.height=0},e.fn.cycle.transitions.fadeZoom=function(t,n,i){i.before.push(function(t,n,i){e.fn.cycle.commonReset(t,n,i,!1,!1),i.cssBefore.left=n.cycleW/2,i.cssBefore.top=n.cycleH/2,e.extend(i.animIn,{top:0,left:0,width:n.cycleW,height:n.cycleH})}),i.cssBefore.width=0,i.cssBefore.height=0,i.animOut.opacity=0},e.fn.cycle.transitions.blindX=function(t,n,i){var o=t.css("overflow","hidden").width();i.before.push(function(t,n,i){e.fn.cycle.commonReset(t,n,i),i.animIn.width=n.cycleW,i.animOut.left=t.cycleW}),i.cssBefore.left=o,i.cssBefore.top=0,i.animIn.left=0,i.animOut.left=o},e.fn.cycle.transitions.blindY=function(t,n,i){var o=t.css("overflow","hidden").height();i.before.push(function(t,n,i){e.fn.cycle.commonReset(t,n,i),i.animIn.height=n.cycleH,i.animOut.top=t.cycleH}),i.cssBefore.top=o,i.cssBefore.left=0,i.animIn.top=0,i.animOut.top=o},e.fn.cycle.transitions.blindZ=function(t,n,i){var o=t.css("overflow","hidden").height(),r=t.width();i.before.push(function(t,n,i){e.fn.cycle.commonReset(t,n,i),i.animIn.height=n.cycleH,i.animOut.top=t.cycleH}),i.cssBefore.top=o,i.cssBefore.left=r,i.animIn.top=0,i.animIn.left=0,i.animOut.top=o,i.animOut.left=r},e.fn.cycle.transitions.growX=function(t,n,i){i.before.push(function(t,n,i){e.fn.cycle.commonReset(t,n,i,!1,!0),i.cssBefore.left=this.cycleW/2,i.animIn.left=0,i.animIn.width=this.cycleW,i.animOut.left=0}),i.cssBefore.top=0,i.cssBefore.width=0},e.fn.cycle.transitions.growY=function(t,n,i){i.before.push(function(t,n,i){e.fn.cycle.commonReset(t,n,i,!0,!1),i.cssBefore.top=this.cycleH/2,i.animIn.top=0,i.animIn.height=this.cycleH,i.animOut.top=0}),i.cssBefore.height=0,i.cssBefore.left=0},e.fn.cycle.transitions.curtainX=function(t,n,i){i.before.push(function(t,n,i){e.fn.cycle.commonReset(t,n,i,!1,!0,!0),i.cssBefore.left=n.cycleW/2,i.animIn.left=0,i.animIn.width=this.cycleW,i.animOut.left=t.cycleW/2,i.animOut.width=0}),i.cssBefore.top=0,i.cssBefore.width=0},e.fn.cycle.transitions.curtainY=function(t,n,i){i.before.push(function(t,n,i){e.fn.cycle.commonReset(t,n,i,!0,!1,!0),i.cssBefore.top=n.cycleH/2,i.animIn.top=0,i.animIn.height=n.cycleH,i.animOut.top=t.cycleH/2,i.animOut.height=0}),i.cssBefore.height=0,i.cssBefore.left=0},e.fn.cycle.transitions.cover=function(t,n,i){var o=i.direction||"left",r=t.css("overflow","hidden").width(),a=t.height();i.before.push(function(t,n,i){e.fn.cycle.commonReset(t,n,i),"right"==o?i.cssBefore.left=-r:"up"==o?i.cssBefore.top=a:"down"==o?i.cssBefore.top=-a:i.cssBefore.left=r}),i.animIn.left=0,i.animIn.top=0,i.cssBefore.top=0,i.cssBefore.left=0},e.fn.cycle.transitions.uncover=function(t,n,i){var o=i.direction||"left",r=t.css("overflow","hidden").width(),a=t.height();i.before.push(function(t,n,i){e.fn.cycle.commonReset(t,n,i,!0,!0,!0),"right"==o?i.animOut.left=r:"up"==o?i.animOut.top=-a:"down"==o?i.animOut.top=a:i.animOut.left=-r}),i.animIn.left=0,i.animIn.top=0,i.cssBefore.top=0,i.cssBefore.left=0},e.fn.cycle.transitions.toss=function(t,n,i){var o=t.css("overflow","visible").width(),r=t.height();i.before.push(function(t,n,i){e.fn.cycle.commonReset(t,n,i,!0,!0,!0),i.animOut.left||i.animOut.top?i.animOut.opacity=0:e.extend(i.animOut,{left:2*o,top:-r/2,opacity:0})}),i.cssBefore.left=0,i.cssBefore.top=0,i.animIn.left=0},e.fn.cycle.transitions.wipe=function(t,n,i){var o=t.css("overflow","hidden").width(),r=t.height();i.cssBefore=i.cssBefore||{};var a;if(i.clip)if(/l2r/.test(i.clip))a="rect(0px 0px "+r+"px 0px)";else if(/r2l/.test(i.clip))a="rect(0px "+o+"px "+r+"px "+o+"px)";else if(/t2b/.test(i.clip))a="rect(0px "+o+"px 0px 0px)";else if(/b2t/.test(i.clip))a="rect("+r+"px "+o+"px "+r+"px 0px)";else if(/zoom/.test(i.clip)){var s=parseInt(r/2),l=parseInt(o/2);a="rect("+s+"px "+l+"px "+s+"px "+l+"px)"}i.cssBefore.clip=i.cssBefore.clip||a||"rect(0px 0px 0px 0px)";var c=i.cssBefore.clip.match(/(\d+)/g),u=parseInt(c[0]),d=parseInt(c[1]),f=parseInt(c[2]),p=parseInt(c[3]);i.before.push(function(t,n,i){if(t!=n){var a=e(t),s=e(n);e.fn.cycle.commonReset(t,n,i,!0,!0,!1),i.cssAfter.display="block";var l=1,c=parseInt(i.speedIn/13)-1;!function h(){var e=u?u-parseInt(l*(u/c)):0,t=p?p-parseInt(l*(p/c)):0,n=f<r?f+parseInt(l*((r-f)/c||1)):r,i=d<o?d+parseInt(l*((o-d)/c||1)):o;s.css({clip:"rect("+e+"px "+i+"px "+n+"px "+t+"px)"}),l++<=c?setTimeout(h,13):a.css("display","none")}()}}),e.extend(i.cssBefore,{display:"block",opacity:1,top:0,left:0}),i.animIn={left:0},i.animOut={left:0}}}(jQuery),function(){var e=[].indexOf||function(e){for(var t=0,n=this.length;t<n;t++)if(t in this&&this[t]===e)return t;return-1},t=[].slice;!function(e,t){return"function"==typeof define&&define.amd?define("waypoints",["jquery"],function(n){return t(n,e)}):t(e.jQuery,e)}(window,function(n,i){var o,r,a,s,l,c,u,d,f,p,h,m,v,g,y,b;return o=n(i),d=e.call(i,"ontouchstart")>=0,s={horizontal:{},vertical:{}},l=1,u={},c="waypoints-context-id",h="resize.waypoints",m="scroll.waypoints",v=1,g="waypoints-waypoint-ids",y="waypoint",b="waypoints",r=function(){function e(e){var t=this;this.$element=e,this.element=e[0],this.didResize=!1,this.didScroll=!1,this.id="context"+l++,this.oldScroll={x:e.scrollLeft(),y:e.scrollTop()},this.waypoints={horizontal:{},vertical:{}},this.element[c]=this.id,u[this.id]=this,e.bind(m,function(){var e;if(!t.didScroll&&!d)return t.didScroll=!0,e=function(){return t.doScroll(),t.didScroll=!1},i.setTimeout(e,n[b].settings.scrollThrottle)}),e.bind(h,function(){var e;if(!t.didResize)return t.didResize=!0,e=function(){return n[b]("refresh"),t.didResize=!1},i.setTimeout(e,n[b].settings.resizeThrottle)})}return e.prototype.doScroll=function(){var e,t=this;return e={horizontal:{newScroll:this.$element.scrollLeft(),oldScroll:this.oldScroll.x,forward:"right",backward:"left"},vertical:{newScroll:this.$element.scrollTop(),oldScroll:this.oldScroll.y,forward:"down",backward:"up"}},!d||e.vertical.oldScroll&&e.vertical.newScroll||n[b]("refresh"),n.each(e,function(e,i){var o,r,a;return a=[],r=i.newScroll>i.oldScroll,o=r?i.forward:i.backward,n.each(t.waypoints[e],function(e,t){var n,o;return i.oldScroll<(n=t.offset)&&n<=i.newScroll?a.push(t):i.newScroll<(o=t.offset)&&o<=i.oldScroll?a.push(t):void 0}),a.sort(function(e,t){return e.offset-t.offset}),r||a.reverse(),n.each(a,function(e,t){if(t.options.continuous||e===a.length-1)return t.trigger([o])})}),this.oldScroll={x:e.horizontal.newScroll,y:e.vertical.newScroll}},e.prototype.refresh=function(){var e,t,i,o=this;return i=n.isWindow(this.element),t=this.$element.offset(),this.doScroll(),e={horizontal:{contextOffset:i?0:t.left,contextScroll:i?0:this.oldScroll.x,contextDimension:this.$element.width(),oldScroll:this.oldScroll.x,forward:"right",backward:"left",offsetProp:"left"},vertical:{contextOffset:i?0:t.top,contextScroll:i?0:this.oldScroll.y,contextDimension:i?n[b]("viewportHeight"):this.$element.height(),oldScroll:this.oldScroll.y,forward:"down",backward:"up",offsetProp:"top"}},n.each(e,function(e,t){return n.each(o.waypoints[e],function(e,i){var o,r,a,s,l;if(o=i.options.offset,a=i.offset,r=n.isWindow(i.element)?0:i.$element.offset()[t.offsetProp],n.isFunction(o)?o=o.apply(i.element):"string"==typeof o&&(o=parseFloat(o),i.options.offset.indexOf("%")>-1&&(o=Math.ceil(t.contextDimension*o/100))),i.offset=r-t.contextOffset+t.contextScroll-o,(!i.options.onlyOnScroll||null==a)&&i.enabled)return null!==a&&a<(s=t.oldScroll)&&s<=i.offset?i.trigger([t.backward]):null!==a&&a>(l=t.oldScroll)&&l>=i.offset?i.trigger([t.forward]):null===a&&t.oldScroll>=i.offset?i.trigger([t.forward]):void 0})})},e.prototype.checkEmpty=function(){if(n.isEmptyObject(this.waypoints.horizontal)&&n.isEmptyObject(this.waypoints.vertical))return this.$element.unbind([h,m].join(" ")),delete u[this.id]},e}(),a=function(){function e(e,t,i){var o,r;"bottom-in-view"===i.offset&&(i.offset=function(){var e;return e=n[b]("viewportHeight"),n.isWindow(t.element)||(e=t.$element.height()),e-n(this).outerHeight()}),this.$element=e,this.element=e[0],this.axis=i.horizontal?"horizontal":"vertical",this.callback=i.handler,this.context=t,this.enabled=i.enabled,this.id="waypoints"+v++,this.offset=null,this.options=i,t.waypoints[this.axis][this.id]=this,s[this.axis][this.id]=this,o=null!=(r=this.element[g])?r:[],o.push(this.id),this.element[g]=o}return e.prototype.trigger=function(e){if(this.enabled)return null!=this.callback&&this.callback.apply(this.element,e),this.options.triggerOnce?this.destroy():void 0},e.prototype.disable=function(){return this.enabled=!1},e.prototype.enable=function(){return this.context.refresh(),this.enabled=!0},e.prototype.destroy=function(){return delete s[this.axis][this.id],delete this.context.waypoints[this.axis][this.id],this.context.checkEmpty()},e.getWaypointsByElement=function(e){var t,i;return(i=e[g])?(t=n.extend({},s.horizontal,s.vertical),n.map(i,function(e){return t[e]})):[]},e}(),p={init:function(e,t){var i;return t=n.extend({},n.fn[y].defaults,t),null==(i=t.handler)&&(t.handler=e),this.each(function(){var e,i,o,s;return e=n(this),o=null!=(s=t.context)?s:n.fn[y].defaults.context,n.isWindow(o)||(o=e.closest(o)),o=n(o),i=u[o[0][c]],i||(i=new r(o)),new a(e,i,t)}),n[b]("refresh"),this},disable:function(){return p._invoke.call(this,"disable")},enable:function(){return p._invoke.call(this,"enable")},destroy:function(){return p._invoke.call(this,"destroy")},prev:function(e,t){return p._traverse.call(this,e,t,function(e,t,n){if(t>0)return e.push(n[t-1])})},next:function(e,t){return p._traverse.call(this,e,t,function(e,t,n){if(t<n.length-1)return e.push(n[t+1])})},_traverse:function(e,t,o){var r,a;return null==e&&(e="vertical"),null==t&&(t=i),a=f.aggregate(t),r=[],this.each(function(){var t;return t=n.inArray(this,a[e]),o(r,t,a[e])}),this.pushStack(r)},_invoke:function(e){return this.each(function(){var t;return t=a.getWaypointsByElement(this),n.each(t,function(t,n){return n[e](),!0})}),this}},n.fn[y]=function(){var e,i;return i=arguments[0],e=2<=arguments.length?t.call(arguments,1):[],p[i]?p[i].apply(this,e):n.isFunction(i)?p.init.apply(this,arguments):n.isPlainObject(i)?p.init.apply(this,[null,i]):i?n.error("The "+i+" method does not exist in jQuery Waypoints."):n.error("jQuery Waypoints needs a callback function or handler option.");
},n.fn[y].defaults={context:i,continuous:!0,enabled:!0,horizontal:!1,offset:0,triggerOnce:!1},f={refresh:function(){return n.each(u,function(e,t){return t.refresh()})},viewportHeight:function(){var e;return null!=(e=i.innerHeight)?e:o.height()},aggregate:function(e){var t,i,o;return t=s,e&&(t=null!=(o=u[n(e)[0][c]])?o.waypoints:void 0),t?(i={horizontal:[],vertical:[]},n.each(i,function(e,o){return n.each(t[e],function(e,t){return o.push(t)}),o.sort(function(e,t){return e.offset-t.offset}),i[e]=n.map(o,function(e){return e.element}),i[e]=n.unique(i[e])}),i):[]},above:function(e){return null==e&&(e=i),f._filter(e,"vertical",function(e,t){return t.offset<=e.oldScroll.y})},below:function(e){return null==e&&(e=i),f._filter(e,"vertical",function(e,t){return t.offset>e.oldScroll.y})},left:function(e){return null==e&&(e=i),f._filter(e,"horizontal",function(e,t){return t.offset<=e.oldScroll.x})},right:function(e){return null==e&&(e=i),f._filter(e,"horizontal",function(e,t){return t.offset>e.oldScroll.x})},enable:function(){return f._invoke("enable")},disable:function(){return f._invoke("disable")},destroy:function(){return f._invoke("destroy")},extendFn:function(e,t){return p[e]=t},_invoke:function(e){var t;return t=n.extend({},s.vertical,s.horizontal),n.each(t,function(t,n){return n[e](),!0})},_filter:function(e,t,i){var o,r;return(o=u[n(e)[0][c]])?(r=[],n.each(o.waypoints[t],function(e,t){if(i(o,t))return r.push(t)}),r.sort(function(e,t){return e.offset-t.offset}),n.map(r,function(e){return e.element})):[]}},n[b]=function(){var e,n;return n=arguments[0],e=2<=arguments.length?t.call(arguments,1):[],f[n]?f[n].apply(null,e):f.aggregate.call(null,n)},n[b].settings={resizeThrottle:100,scrollThrottle:30},o.on("load.waypoints",function(){return n[b]("refresh")})})}.call(this),jQuery.easing.jswing=jQuery.easing.swing,jQuery.extend(jQuery.easing,{def:"easeOutQuad",swing:function(e,t,n,i,o){return jQuery.easing[jQuery.easing.def](e,t,n,i,o)},easeInQuad:function(e,t,n,i,o){return i*(t/=o)*t+n},easeOutQuad:function(e,t,n,i,o){return-i*(t/=o)*(t-2)+n},easeInOutQuad:function(e,t,n,i,o){return(t/=o/2)<1?i/2*t*t+n:-i/2*(--t*(t-2)-1)+n},easeInCubic:function(e,t,n,i,o){return i*(t/=o)*t*t+n},easeOutCubic:function(e,t,n,i,o){return i*((t=t/o-1)*t*t+1)+n},easeInOutCubic:function(e,t,n,i,o){return(t/=o/2)<1?i/2*t*t*t+n:i/2*((t-=2)*t*t+2)+n},easeInQuart:function(e,t,n,i,o){return i*(t/=o)*t*t*t+n},easeOutQuart:function(e,t,n,i,o){return-i*((t=t/o-1)*t*t*t-1)+n},easeInOutQuart:function(e,t,n,i,o){return(t/=o/2)<1?i/2*t*t*t*t+n:-i/2*((t-=2)*t*t*t-2)+n},easeInQuint:function(e,t,n,i,o){return i*(t/=o)*t*t*t*t+n},easeOutQuint:function(e,t,n,i,o){return i*((t=t/o-1)*t*t*t*t+1)+n},easeInOutQuint:function(e,t,n,i,o){return(t/=o/2)<1?i/2*t*t*t*t*t+n:i/2*((t-=2)*t*t*t*t+2)+n},easeInSine:function(e,t,n,i,o){return-i*Math.cos(t/o*(Math.PI/2))+i+n},easeOutSine:function(e,t,n,i,o){return i*Math.sin(t/o*(Math.PI/2))+n},easeInOutSine:function(e,t,n,i,o){return-i/2*(Math.cos(Math.PI*t/o)-1)+n},easeInExpo:function(e,t,n,i,o){return 0==t?n:i*Math.pow(2,10*(t/o-1))+n},easeOutExpo:function(e,t,n,i,o){return t==o?n+i:i*(-Math.pow(2,-10*t/o)+1)+n},easeInOutExpo:function(e,t,n,i,o){return 0==t?n:t==o?n+i:(t/=o/2)<1?i/2*Math.pow(2,10*(t-1))+n:i/2*(-Math.pow(2,-10*--t)+2)+n},easeInCirc:function(e,t,n,i,o){return-i*(Math.sqrt(1-(t/=o)*t)-1)+n},easeOutCirc:function(e,t,n,i,o){return i*Math.sqrt(1-(t=t/o-1)*t)+n},easeInOutCirc:function(e,t,n,i,o){return(t/=o/2)<1?-i/2*(Math.sqrt(1-t*t)-1)+n:i/2*(Math.sqrt(1-(t-=2)*t)+1)+n},easeInElastic:function(e,t,n,i,o){var r=1.70158,a=0,s=i;if(0==t)return n;if(1==(t/=o))return n+i;if(a||(a=.3*o),s<Math.abs(i)){s=i;var r=a/4}else var r=a/(2*Math.PI)*Math.asin(i/s);return-(s*Math.pow(2,10*(t-=1))*Math.sin((t*o-r)*(2*Math.PI)/a))+n},easeOutElastic:function(e,t,n,i,o){var r=1.70158,a=0,s=i;if(0==t)return n;if(1==(t/=o))return n+i;if(a||(a=.3*o),s<Math.abs(i)){s=i;var r=a/4}else var r=a/(2*Math.PI)*Math.asin(i/s);return s*Math.pow(2,-10*t)*Math.sin((t*o-r)*(2*Math.PI)/a)+i+n},easeInOutElastic:function(e,t,n,i,o){var r=1.70158,a=0,s=i;if(0==t)return n;if(2==(t/=o/2))return n+i;if(a||(a=o*(.3*1.5)),s<Math.abs(i)){s=i;var r=a/4}else var r=a/(2*Math.PI)*Math.asin(i/s);return t<1?-.5*(s*Math.pow(2,10*(t-=1))*Math.sin((t*o-r)*(2*Math.PI)/a))+n:s*Math.pow(2,-10*(t-=1))*Math.sin((t*o-r)*(2*Math.PI)/a)*.5+i+n},easeInBack:function(e,t,n,i,o,r){return void 0==r&&(r=1.70158),i*(t/=o)*t*((r+1)*t-r)+n},easeOutBack:function(e,t,n,i,o,r){return void 0==r&&(r=1.70158),i*((t=t/o-1)*t*((r+1)*t+r)+1)+n},easeInOutBack:function(e,t,n,i,o,r){return void 0==r&&(r=1.70158),(t/=o/2)<1?i/2*(t*t*(((r*=1.525)+1)*t-r))+n:i/2*((t-=2)*t*(((r*=1.525)+1)*t+r)+2)+n},easeInBounce:function(e,t,n,i,o){return i-jQuery.easing.easeOutBounce(e,o-t,0,i,o)+n},easeOutBounce:function(e,t,n,i,o){return(t/=o)<1/2.75?i*(7.5625*t*t)+n:t<2/2.75?i*(7.5625*(t-=1.5/2.75)*t+.75)+n:t<2.5/2.75?i*(7.5625*(t-=2.25/2.75)*t+.9375)+n:i*(7.5625*(t-=2.625/2.75)*t+.984375)+n},easeInOutBounce:function(e,t,n,i,o){return t<o/2?.5*jQuery.easing.easeInBounce(e,2*t,0,i,o)+n:.5*jQuery.easing.easeOutBounce(e,2*t-o,0,i,o)+.5*i+n}}),!function(e){function t(e){var t=e.length,i=n.type(e);return"function"!==i&&!n.isWindow(e)&&(!(1!==e.nodeType||!t)||("array"===i||0===t||"number"==typeof t&&t>0&&t-1 in e))}if(!e.jQuery){var n=function(e,t){return new n.fn.init(e,t)};n.isWindow=function(e){return null!=e&&e==e.window},n.type=function(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?o[a.call(e)]||"object":typeof e},n.isArray=Array.isArray||function(e){return"array"===n.type(e)},n.isPlainObject=function(e){var t;if(!e||"object"!==n.type(e)||e.nodeType||n.isWindow(e))return!1;try{if(e.constructor&&!r.call(e,"constructor")&&!r.call(e.constructor.prototype,"isPrototypeOf"))return!1}catch(i){return!1}for(t in e);return void 0===t||r.call(e,t)},n.each=function(e,n,i){var o,r=0,a=e.length,s=t(e);if(i){if(s)for(;a>r&&(o=n.apply(e[r],i),o!==!1);r++);else for(r in e)if(o=n.apply(e[r],i),o===!1)break}else if(s)for(;a>r&&(o=n.call(e[r],r,e[r]),o!==!1);r++);else for(r in e)if(o=n.call(e[r],r,e[r]),o===!1)break;return e},n.data=function(e,t,o){if(void 0===o){var r=e[n.expando],a=r&&i[r];if(void 0===t)return a;if(a&&t in a)return a[t]}else if(void 0!==t){var r=e[n.expando]||(e[n.expando]=++n.uuid);return i[r]=i[r]||{},i[r][t]=o,o}},n.removeData=function(e,t){var o=e[n.expando],r=o&&i[o];r&&n.each(t,function(e,t){delete r[t]})},n.extend=function(){var e,t,i,o,r,a,s=arguments[0]||{},l=1,c=arguments.length,u=!1;for("boolean"==typeof s&&(u=s,s=arguments[l]||{},l++),"object"!=typeof s&&"function"!==n.type(s)&&(s={}),l===c&&(s=this,l--);c>l;l++)if(null!=(r=arguments[l]))for(o in r)e=s[o],i=r[o],s!==i&&(u&&i&&(n.isPlainObject(i)||(t=n.isArray(i)))?(t?(t=!1,a=e&&n.isArray(e)?e:[]):a=e&&n.isPlainObject(e)?e:{},s[o]=n.extend(u,a,i)):void 0!==i&&(s[o]=i));return s},n.queue=function(e,i,o){function r(e,n){var i=n||[];return null!=e&&(t(Object(e))?!function(e,t){for(var n=+t.length,i=0,o=e.length;n>i;)e[o++]=t[i++];if(n!==n)for(;void 0!==t[i];)e[o++]=t[i++];return e.length=o,e}(i,"string"==typeof e?[e]:e):[].push.call(i,e)),i}if(e){i=(i||"fx")+"queue";var a=n.data(e,i);return o?(!a||n.isArray(o)?a=n.data(e,i,r(o)):a.push(o),a):a||[]}},n.dequeue=function(e,t){n.each(e.nodeType?[e]:e,function(e,i){t=t||"fx";var o=n.queue(i,t),r=o.shift();"inprogress"===r&&(r=o.shift()),r&&("fx"===t&&o.unshift("inprogress"),r.call(i,function(){n.dequeue(i,t)}))})},n.fn=n.prototype={init:function(e){if(e.nodeType)return this[0]=e,this;throw new Error("Not a DOM node.")},offset:function(){var t=this[0].getBoundingClientRect?this[0].getBoundingClientRect():{top:0,left:0};return{top:t.top+(e.pageYOffset||document.scrollTop||0)-(document.clientTop||0),left:t.left+(e.pageXOffset||document.scrollLeft||0)-(document.clientLeft||0)}},position:function(){function e(){for(var e=this.offsetParent||document;e&&"html"===!e.nodeType.toLowerCase&&"static"===e.style.position;)e=e.offsetParent;return e||document}var t=this[0],e=e.apply(t),i=this.offset(),o=/^(?:body|html)$/i.test(e.nodeName)?{top:0,left:0}:n(e).offset();return i.top-=parseFloat(t.style.marginTop)||0,i.left-=parseFloat(t.style.marginLeft)||0,e.style&&(o.top+=parseFloat(e.style.borderTopWidth)||0,o.left+=parseFloat(e.style.borderLeftWidth)||0),{top:i.top-o.top,left:i.left-o.left}}};var i={};n.expando="velocity"+(new Date).getTime(),n.uuid=0;for(var o={},r=o.hasOwnProperty,a=o.toString,s="Boolean Number String Function Array Date RegExp Object Error".split(" "),l=0;l<s.length;l++)o["[object "+s[l]+"]"]=s[l].toLowerCase();n.fn.init.prototype=n.fn,e.Velocity={Utilities:n}}}(window),function(e){"object"==typeof module&&"object"==typeof module.exports?module.exports=e():"function"==typeof define&&define.amd?define(e):e()}(function(){return function(e,t,n,i){function o(e){for(var t=-1,n=e?e.length:0,i=[];++t<n;){var o=e[t];o&&i.push(o)}return i}function r(e){return m.isWrapped(e)?e=[].slice.call(e):m.isNode(e)&&(e=[e]),e}function a(e){var t=f.data(e,"velocity");return null===t?i:t}function s(e){return function(t){return Math.round(t*e)*(1/e)}}function l(e,n,i,o){function r(e,t){return 1-3*t+3*e}function a(e,t){return 3*t-6*e}function s(e){return 3*e}function l(e,t,n){return((r(t,n)*e+a(t,n))*e+s(t))*e}function c(e,t,n){return 3*r(t,n)*e*e+2*a(t,n)*e+s(t)}function u(t,n){for(var o=0;m>o;++o){var r=c(n,e,i);if(0===r)return n;var a=l(n,e,i)-t;n-=a/r}return n}function d(){for(var t=0;b>t;++t)C[t]=l(t*w,e,i)}function f(t,n,o){var r,a,s=0;do a=n+(o-n)/2,r=l(a,e,i)-t,r>0?o=a:n=a;while(Math.abs(r)>g&&++s<y);return a}function p(t){for(var n=0,o=1,r=b-1;o!=r&&C[o]<=t;++o)n+=w;--o;var a=(t-C[o])/(C[o+1]-C[o]),s=n+a*w,l=c(s,e,i);return l>=v?u(t,s):0==l?s:f(t,n,n+w)}function h(){T=!0,(e!=n||i!=o)&&d()}var m=4,v=.001,g=1e-7,y=10,b=11,w=1/(b-1),x="Float32Array"in t;if(4!==arguments.length)return!1;for(var S=0;4>S;++S)if("number"!=typeof arguments[S]||isNaN(arguments[S])||!isFinite(arguments[S]))return!1;e=Math.min(e,1),i=Math.min(i,1),e=Math.max(e,0),i=Math.max(i,0);var C=x?new Float32Array(b):new Array(b),T=!1,k=function(t){return T||h(),e===n&&i===o?t:0===t?0:1===t?1:l(p(t),n,o)};k.getControlPoints=function(){return[{x:e,y:n},{x:i,y:o}]};var I="generateBezier("+[e,n,i,o]+")";return k.toString=function(){return I},k}function c(e,t){var n=e;return m.isString(e)?b.Easings[e]||(n=!1):n=m.isArray(e)&&1===e.length?s.apply(null,e):m.isArray(e)&&2===e.length?w.apply(null,e.concat([t])):!(!m.isArray(e)||4!==e.length)&&l.apply(null,e),n===!1&&(n=b.Easings[b.defaults.easing]?b.defaults.easing:y),n}function u(e){if(e)for(var t=(new Date).getTime(),n=0,o=b.State.calls.length;o>n;n++)if(b.State.calls[n]){var r=b.State.calls[n],s=r[0],l=r[2],c=r[3],p=!!c;c||(c=b.State.calls[n][3]=t-16);for(var h=Math.min((t-c)/l.duration,1),v=0,g=s.length;g>v;v++){var y=s[v],w=y.element;if(a(w)){var S=!1;if(l.display!==i&&null!==l.display&&"none"!==l.display){if("flex"===l.display){var T=["-webkit-box","-moz-box","-ms-flexbox","-webkit-flex"];f.each(T,function(e,t){x.setPropertyValue(w,"display",t)})}x.setPropertyValue(w,"display",l.display)}l.visibility!==i&&"hidden"!==l.visibility&&x.setPropertyValue(w,"visibility",l.visibility);for(var k in y)if("element"!==k){var I,E=y[k],O=m.isString(E.easing)?b.Easings[E.easing]:E.easing;if(1===h)I=E.endValue;else if(I=E.startValue+(E.endValue-E.startValue)*O(h),!p&&I===E.currentValue)continue;if(E.currentValue=I,x.Hooks.registered[k]){var P=x.Hooks.getRoot(k),A=a(w).rootPropertyValueCache[P];A&&(E.rootPropertyValue=A)}var N=x.setPropertyValue(w,k,E.currentValue+(0===parseFloat(I)?"":E.unitType),E.rootPropertyValue,E.scrollData);x.Hooks.registered[k]&&(a(w).rootPropertyValueCache[P]=x.Normalizations.registered[P]?x.Normalizations.registered[P]("extract",null,N[1]):N[1]),"transform"===N[0]&&(S=!0)}l.mobileHA&&a(w).transformCache.translate3d===i&&(a(w).transformCache.translate3d="(0px, 0px, 0px)",S=!0),S&&x.flushTransformCache(w)}}l.display!==i&&"none"!==l.display&&(b.State.calls[n][2].display=!1),l.visibility!==i&&"hidden"!==l.visibility&&(b.State.calls[n][2].visibility=!1),l.progress&&l.progress.call(r[1],r[1],h,Math.max(0,c+l.duration-t),c),1===h&&d(n)}b.State.isTicking&&C(u)}function d(e,t){if(!b.State.calls[e])return!1;for(var n=b.State.calls[e][0],o=b.State.calls[e][1],r=b.State.calls[e][2],s=b.State.calls[e][4],l=!1,c=0,u=n.length;u>c;c++){var d=n[c].element;if(t||r.loop||("none"===r.display&&x.setPropertyValue(d,"display",r.display),"hidden"===r.visibility&&x.setPropertyValue(d,"visibility",r.visibility)),r.loop!==!0&&(f.queue(d)[1]===i||!/\.velocityQueueEntryFlag/i.test(f.queue(d)[1]))&&a(d)){a(d).isAnimating=!1,a(d).rootPropertyValueCache={};var p=!1;f.each(x.Lists.transforms3D,function(e,t){var n=/^scale/.test(t)?1:0,o=a(d).transformCache[t];a(d).transformCache[t]!==i&&new RegExp("^\\("+n+"[^.]").test(o)&&(p=!0,delete a(d).transformCache[t])}),r.mobileHA&&(p=!0,delete a(d).transformCache.translate3d),p&&x.flushTransformCache(d),x.Values.removeClass(d,"velocity-animating")}if(!t&&r.complete&&!r.loop&&c===u-1)try{r.complete.call(o,o)}catch(h){setTimeout(function(){throw h},1)}s&&r.loop!==!0&&s(o),r.loop!==!0||t||(f.each(a(d).tweensContainer,function(e,t){/^rotate/.test(e)&&360===parseFloat(t.endValue)&&(t.endValue=0,t.startValue=360)}),b(d,"reverse",{loop:!0,delay:r.delay})),r.queue!==!1&&f.dequeue(d,r.queue)}b.State.calls[e]=!1;for(var m=0,v=b.State.calls.length;v>m;m++)if(b.State.calls[m]!==!1){l=!0;break}l===!1&&(b.State.isTicking=!1,delete b.State.calls,b.State.calls=[])}var f,p=function(){if(n.documentMode)return n.documentMode;for(var e=7;e>4;e--){var t=n.createElement("div");if(t.innerHTML="<!--[if IE "+e+"]><span></span><![endif]-->",t.getElementsByTagName("span").length)return t=null,e}return i}(),h=function(){var e=0;return t.webkitRequestAnimationFrame||t.mozRequestAnimationFrame||function(t){var n,i=(new Date).getTime();return n=Math.max(0,16-(i-e)),e=i+n,setTimeout(function(){t(i+n)},n)}}(),m={isString:function(e){return"string"==typeof e},isArray:Array.isArray||function(e){return"[object Array]"===Object.prototype.toString.call(e)},isFunction:function(e){return"[object Function]"===Object.prototype.toString.call(e)},isNode:function(e){return e&&e.nodeType},isNodeList:function(e){return"object"==typeof e&&/^\[object (HTMLCollection|NodeList|Object)\]$/.test(Object.prototype.toString.call(e))&&e.length!==i&&(0===e.length||"object"==typeof e[0]&&e[0].nodeType>0)},isWrapped:function(e){return e&&(e.jquery||t.Zepto&&t.Zepto.zepto.isZ(e))},isSVG:function(e){return t.SVGElement&&e instanceof t.SVGElement},isEmptyObject:function(e){for(var t in e)return!1;return!0}},v=!1;if(e.fn&&e.fn.jquery?(f=e,v=!0):f=t.Velocity.Utilities,8>=p&&!v)throw new Error("Velocity: IE8 and below require jQuery to be loaded before Velocity.");if(7>=p)return void(jQuery.fn.velocity=jQuery.fn.animate);var g=400,y="swing",b={State:{isMobile:/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),isAndroid:/Android/i.test(navigator.userAgent),isGingerbread:/Android 2\.3\.[3-7]/i.test(navigator.userAgent),isChrome:t.chrome,isFirefox:/Firefox/i.test(navigator.userAgent),prefixElement:n.createElement("div"),prefixMatches:{},scrollAnchor:null,scrollPropertyLeft:null,scrollPropertyTop:null,isTicking:!1,calls:[]},CSS:{},Utilities:f,Redirects:{},Easings:{},Promise:t.Promise,defaults:{queue:"",duration:g,easing:y,begin:i,complete:i,progress:i,display:i,visibility:i,loop:!1,delay:!1,mobileHA:!0,_cacheValues:!0},init:function(e){f.data(e,"velocity",{isSVG:m.isSVG(e),isAnimating:!1,computedStyle:null,tweensContainer:null,rootPropertyValueCache:{},transformCache:{}})},hook:null,mock:!1,version:{major:1,minor:1,patch:0},debug:!1};t.pageYOffset!==i?(b.State.scrollAnchor=t,b.State.scrollPropertyLeft="pageXOffset",b.State.scrollPropertyTop="pageYOffset"):(b.State.scrollAnchor=n.documentElement||n.body.parentNode||n.body,b.State.scrollPropertyLeft="scrollLeft",b.State.scrollPropertyTop="scrollTop");var w=function(){function e(e){return-e.tension*e.x-e.friction*e.v}function t(t,n,i){var o={x:t.x+i.dx*n,v:t.v+i.dv*n,tension:t.tension,friction:t.friction};return{dx:o.v,dv:e(o)}}function n(n,i){var o={dx:n.v,dv:e(n)},r=t(n,.5*i,o),a=t(n,.5*i,r),s=t(n,i,a),l=1/6*(o.dx+2*(r.dx+a.dx)+s.dx),c=1/6*(o.dv+2*(r.dv+a.dv)+s.dv);return n.x=n.x+l*i,n.v=n.v+c*i,n}return function i(e,t,o){var r,a,s,l={x:-1,v:0,tension:null,friction:null},c=[0],u=0,d=1e-4,f=.016;for(e=parseFloat(e)||500,t=parseFloat(t)||20,o=o||null,l.tension=e,l.friction=t,r=null!==o,r?(u=i(e,t),a=u/o*f):a=f;s=n(s||l,a),c.push(1+s.x),u+=16,Math.abs(s.x)>d&&Math.abs(s.v)>d;);return r?function(e){return c[e*(c.length-1)|0]}:u}}();b.Easings={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},spring:function(e){return 1-Math.cos(4.5*e*Math.PI)*Math.exp(6*-e)}},f.each([["ease",[.25,.1,.25,1]],["ease-in",[.42,0,1,1]],["ease-out",[0,0,.58,1]],["ease-in-out",[.42,0,.58,1]],["easeInSine",[.47,0,.745,.715]],["easeOutSine",[.39,.575,.565,1]],["easeInOutSine",[.445,.05,.55,.95]],["easeInQuad",[.55,.085,.68,.53]],["easeOutQuad",[.25,.46,.45,.94]],["easeInOutQuad",[.455,.03,.515,.955]],["easeInCubic",[.55,.055,.675,.19]],["easeOutCubic",[.215,.61,.355,1]],["easeInOutCubic",[.645,.045,.355,1]],["easeInQuart",[.895,.03,.685,.22]],["easeOutQuart",[.165,.84,.44,1]],["easeInOutQuart",[.77,0,.175,1]],["easeInQuint",[.755,.05,.855,.06]],["easeOutQuint",[.23,1,.32,1]],["easeInOutQuint",[.86,0,.07,1]],["easeInExpo",[.95,.05,.795,.035]],["easeOutExpo",[.19,1,.22,1]],["easeInOutExpo",[1,0,0,1]],["easeInCirc",[.6,.04,.98,.335]],["easeOutCirc",[.075,.82,.165,1]],["easeInOutCirc",[.785,.135,.15,.86]]],function(e,t){b.Easings[t[0]]=l.apply(null,t[1])});var x=b.CSS={RegEx:{isHex:/^#([A-f\d]{3}){1,2}$/i,valueUnwrap:/^[A-z]+\((.*)\)$/i,wrappedValueAlreadyExtracted:/[0-9.]+ [0-9.]+ [0-9.]+( [0-9.]+)?/,valueSplit:/([A-z]+\(.+\))|(([A-z0-9#-.]+?)(?=\s|$))/gi},Lists:{colors:["fill","stroke","stopColor","color","backgroundColor","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","outlineColor"],transformsBase:["translateX","translateY","scale","scaleX","scaleY","skewX","skewY","rotateZ"],transforms3D:["transformPerspective","translateZ","scaleZ","rotateX","rotateY"]},Hooks:{templates:{textShadow:["Color X Y Blur","black 0px 0px 0px"],boxShadow:["Color X Y Blur Spread","black 0px 0px 0px 0px"],clip:["Top Right Bottom Left","0px 0px 0px 0px"],backgroundPosition:["X Y","0% 0%"],transformOrigin:["X Y Z","50% 50% 0px"],perspectiveOrigin:["X Y","50% 50%"]},registered:{},register:function(){for(var e=0;e<x.Lists.colors.length;e++){var t="color"===x.Lists.colors[e]?"0 0 0 1":"255 255 255 1";x.Hooks.templates[x.Lists.colors[e]]=["Red Green Blue Alpha",t]}var n,i,o;if(p)for(n in x.Hooks.templates){i=x.Hooks.templates[n],o=i[0].split(" ");var r=i[1].match(x.RegEx.valueSplit);"Color"===o[0]&&(o.push(o.shift()),r.push(r.shift()),x.Hooks.templates[n]=[o.join(" "),r.join(" ")])}for(n in x.Hooks.templates){i=x.Hooks.templates[n],o=i[0].split(" ");for(var e in o){var a=n+o[e],s=e;x.Hooks.registered[a]=[n,s]}}},getRoot:function(e){var t=x.Hooks.registered[e];return t?t[0]:e},cleanRootPropertyValue:function(e,t){return x.RegEx.valueUnwrap.test(t)&&(t=t.match(x.RegEx.valueUnwrap)[1]),x.Values.isCSSNullValue(t)&&(t=x.Hooks.templates[e][1]),t},extractValue:function(e,t){var n=x.Hooks.registered[e];if(n){var i=n[0],o=n[1];return t=x.Hooks.cleanRootPropertyValue(i,t),t.toString().match(x.RegEx.valueSplit)[o]}return t},injectValue:function(e,t,n){var i=x.Hooks.registered[e];if(i){var o,r,a=i[0],s=i[1];return n=x.Hooks.cleanRootPropertyValue(a,n),o=n.toString().match(x.RegEx.valueSplit),o[s]=t,r=o.join(" ")}return n}},Normalizations:{registered:{clip:function(e,t,n){switch(e){case"name":return"clip";case"extract":var i;return x.RegEx.wrappedValueAlreadyExtracted.test(n)?i=n:(i=n.toString().match(x.RegEx.valueUnwrap),i=i?i[1].replace(/,(\s+)?/g," "):n),i;case"inject":return"rect("+n+")"}},blur:function(e,t,n){switch(e){case"name":return"-webkit-filter";case"extract":var i=parseFloat(n);if(!i&&0!==i){var o=n.toString().match(/blur\(([0-9]+[A-z]+)\)/i);i=o?o[1]:0}return i;case"inject":return parseFloat(n)?"blur("+n+")":"none"}},opacity:function(e,t,n){if(8>=p)switch(e){case"name":return"filter";case"extract":var i=n.toString().match(/alpha\(opacity=(.*)\)/i);return n=i?i[1]/100:1;case"inject":return t.style.zoom=1,parseFloat(n)>=1?"":"alpha(opacity="+parseInt(100*parseFloat(n),10)+")"}else switch(e){case"name":return"opacity";case"extract":return n;case"inject":return n}}},register:function(){9>=p||b.State.isGingerbread||(x.Lists.transformsBase=x.Lists.transformsBase.concat(x.Lists.transforms3D));for(var e=0;e<x.Lists.transformsBase.length;e++)!function(){var t=x.Lists.transformsBase[e];x.Normalizations.registered[t]=function(e,n,o){switch(e){case"name":return"transform";case"extract":return a(n)===i||a(n).transformCache[t]===i?/^scale/i.test(t)?1:0:a(n).transformCache[t].replace(/[()]/g,"");case"inject":var r=!1;switch(t.substr(0,t.length-1)){case"translate":r=!/(%|px|em|rem|vw|vh|\d)$/i.test(o);break;case"scal":case"scale":b.State.isAndroid&&a(n).transformCache[t]===i&&1>o&&(o=1),r=!/(\d)$/i.test(o);break;case"skew":r=!/(deg|\d)$/i.test(o);break;case"rotate":r=!/(deg|\d)$/i.test(o)}return r||(a(n).transformCache[t]="("+o+")"),a(n).transformCache[t]}}}();for(var e=0;e<x.Lists.colors.length;e++)!function(){var t=x.Lists.colors[e];x.Normalizations.registered[t]=function(e,n,o){switch(e){case"name":return t;case"extract":var r;if(x.RegEx.wrappedValueAlreadyExtracted.test(o))r=o;else{var a,s={black:"rgb(0, 0, 0)",blue:"rgb(0, 0, 255)",gray:"rgb(128, 128, 128)",green:"rgb(0, 128, 0)",red:"rgb(255, 0, 0)",white:"rgb(255, 255, 255)"};/^[A-z]+$/i.test(o)?a=s[o]!==i?s[o]:s.black:x.RegEx.isHex.test(o)?a="rgb("+x.Values.hexToRgb(o).join(" ")+")":/^rgba?\(/i.test(o)||(a=s.black),r=(a||o).toString().match(x.RegEx.valueUnwrap)[1].replace(/,(\s+)?/g," ")}return 8>=p||3!==r.split(" ").length||(r+=" 1"),r;case"inject":return 8>=p?4===o.split(" ").length&&(o=o.split(/\s+/).slice(0,3).join(" ")):3===o.split(" ").length&&(o+=" 1"),(8>=p?"rgb":"rgba")+"("+o.replace(/\s+/g,",").replace(/\.(\d)+(?=,)/g,"")+")"}}}()}},Names:{camelCase:function(e){return e.replace(/-(\w)/g,function(e,t){return t.toUpperCase()})},SVGAttribute:function(e){var t="width|height|x|y|cx|cy|r|rx|ry|x1|x2|y1|y2";return(p||b.State.isAndroid&&!b.State.isChrome)&&(t+="|transform"),new RegExp("^("+t+")$","i").test(e)},prefixCheck:function(e){if(b.State.prefixMatches[e])return[b.State.prefixMatches[e],!0];for(var t=["","Webkit","Moz","ms","O"],n=0,i=t.length;i>n;n++){var o;if(o=0===n?e:t[n]+e.replace(/^\w/,function(e){return e.toUpperCase()}),m.isString(b.State.prefixElement.style[o]))return b.State.prefixMatches[e]=o,[o,!0]}return[e,!1]}},Values:{hexToRgb:function(e){var t,n=/^#?([a-f\d])([a-f\d])([a-f\d])$/i,i=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i;return e=e.replace(n,function(e,t,n,i){return t+t+n+n+i+i}),t=i.exec(e),t?[parseInt(t[1],16),parseInt(t[2],16),parseInt(t[3],16)]:[0,0,0]},isCSSNullValue:function(e){return 0==e||/^(none|auto|transparent|(rgba\(0, ?0, ?0, ?0\)))$/i.test(e)},getUnitType:function(e){return/^(rotate|skew)/i.test(e)?"deg":/(^(scale|scaleX|scaleY|scaleZ|alpha|flexGrow|flexHeight|zIndex|fontWeight)$)|((opacity|red|green|blue|alpha)$)/i.test(e)?"":"px"},getDisplayType:function(e){var t=e&&e.tagName.toString().toLowerCase();return/^(b|big|i|small|tt|abbr|acronym|cite|code|dfn|em|kbd|strong|samp|var|a|bdo|br|img|map|object|q|script|span|sub|sup|button|input|label|select|textarea)$/i.test(t)?"inline":/^(li)$/i.test(t)?"list-item":/^(tr)$/i.test(t)?"table-row":"block"},addClass:function(e,t){e.classList?e.classList.add(t):e.className+=(e.className.length?" ":"")+t},removeClass:function(e,t){e.classList?e.classList.remove(t):e.className=e.className.toString().replace(new RegExp("(^|\\s)"+t.split(" ").join("|")+"(\\s|$)","gi")," ")}},getPropertyValue:function(e,n,o,r){function s(e,n){function o(){c&&x.setPropertyValue(e,"display","none")}var l=0;if(8>=p)l=f.css(e,n);else{var c=!1;if(/^(width|height)$/.test(n)&&0===x.getPropertyValue(e,"display")&&(c=!0,x.setPropertyValue(e,"display",x.Values.getDisplayType(e))),!r){if("height"===n&&"border-box"!==x.getPropertyValue(e,"boxSizing").toString().toLowerCase()){var u=e.offsetHeight-(parseFloat(x.getPropertyValue(e,"borderTopWidth"))||0)-(parseFloat(x.getPropertyValue(e,"borderBottomWidth"))||0)-(parseFloat(x.getPropertyValue(e,"paddingTop"))||0)-(parseFloat(x.getPropertyValue(e,"paddingBottom"))||0);return o(),u}if("width"===n&&"border-box"!==x.getPropertyValue(e,"boxSizing").toString().toLowerCase()){var d=e.offsetWidth-(parseFloat(x.getPropertyValue(e,"borderLeftWidth"))||0)-(parseFloat(x.getPropertyValue(e,"borderRightWidth"))||0)-(parseFloat(x.getPropertyValue(e,"paddingLeft"))||0)-(parseFloat(x.getPropertyValue(e,"paddingRight"))||0);return o(),d}}var h;h=a(e)===i?t.getComputedStyle(e,null):a(e).computedStyle?a(e).computedStyle:a(e).computedStyle=t.getComputedStyle(e,null),(p||b.State.isFirefox)&&"borderColor"===n&&(n="borderTopColor"),l=9===p&&"filter"===n?h.getPropertyValue(n):h[n],(""===l||null===l)&&(l=e.style[n]),o()}if("auto"===l&&/^(top|right|bottom|left)$/i.test(n)){var m=s(e,"position");("fixed"===m||"absolute"===m&&/top|left/i.test(n))&&(l=f(e).position()[n]+"px")}return l}var l;if(x.Hooks.registered[n]){var c=n,u=x.Hooks.getRoot(c);o===i&&(o=x.getPropertyValue(e,x.Names.prefixCheck(u)[0])),x.Normalizations.registered[u]&&(o=x.Normalizations.registered[u]("extract",e,o)),l=x.Hooks.extractValue(c,o)}else if(x.Normalizations.registered[n]){var d,h;d=x.Normalizations.registered[n]("name",e),"transform"!==d&&(h=s(e,x.Names.prefixCheck(d)[0]),x.Values.isCSSNullValue(h)&&x.Hooks.templates[n]&&(h=x.Hooks.templates[n][1])),l=x.Normalizations.registered[n]("extract",e,h)}return/^[\d-]/.test(l)||(l=a(e)&&a(e).isSVG&&x.Names.SVGAttribute(n)?/^(height|width)$/i.test(n)?e.getBBox()[n]:e.getAttribute(n):s(e,x.Names.prefixCheck(n)[0])),x.Values.isCSSNullValue(l)&&(l=0),b.debug>=2&&console.log("Get "+n+": "+l),l},setPropertyValue:function(e,n,i,o,r){var s=n;if("scroll"===n)r.container?r.container["scroll"+r.direction]=i:"Left"===r.direction?t.scrollTo(i,r.alternateValue):t.scrollTo(r.alternateValue,i);else if(x.Normalizations.registered[n]&&"transform"===x.Normalizations.registered[n]("name",e))x.Normalizations.registered[n]("inject",e,i),s="transform",i=a(e).transformCache[n];else{if(x.Hooks.registered[n]){var l=n,c=x.Hooks.getRoot(n);o=o||x.getPropertyValue(e,c),i=x.Hooks.injectValue(l,i,o),n=c}if(x.Normalizations.registered[n]&&(i=x.Normalizations.registered[n]("inject",e,i),n=x.Normalizations.registered[n]("name",e)),s=x.Names.prefixCheck(n)[0],8>=p)try{e.style[s]=i}catch(u){b.debug&&console.log("Browser does not support ["+i+"] for ["+s+"]")}else a(e)&&a(e).isSVG&&x.Names.SVGAttribute(n)?e.setAttribute(n,i):e.style[s]=i;b.debug>=2&&console.log("Set "+n+" ("+s+"): "+i)}return[s,i]},flushTransformCache:function(e){function t(t){return parseFloat(x.getPropertyValue(e,t))}var n="";if((p||b.State.isAndroid&&!b.State.isChrome)&&a(e).isSVG){var i={translate:[t("translateX"),t("translateY")],skewX:[t("skewX")],skewY:[t("skewY")],scale:1!==t("scale")?[t("scale"),t("scale")]:[t("scaleX"),t("scaleY")],rotate:[t("rotateZ"),0,0]};f.each(a(e).transformCache,function(e){/^translate/i.test(e)?e="translate":/^scale/i.test(e)?e="scale":/^rotate/i.test(e)&&(e="rotate"),i[e]&&(n+=e+"("+i[e].join(" ")+") ",delete i[e])})}else{var o,r;f.each(a(e).transformCache,function(t){return o=a(e).transformCache[t],"transformPerspective"===t?(r=o,!0):(9===p&&"rotateZ"===t&&(t="rotate"),void(n+=t+o+" "))}),r&&(n="perspective"+r+" "+n)}x.setPropertyValue(e,"transform",n)}};x.Hooks.register(),x.Normalizations.register(),b.hook=function(e,t,n){var o=i;return e=r(e),f.each(e,function(e,r){if(a(r)===i&&b.init(r),n===i)o===i&&(o=b.CSS.getPropertyValue(r,t));else{var s=b.CSS.setPropertyValue(r,t,n);"transform"===s[0]&&b.CSS.flushTransformCache(r),o=s}}),o};var S=function(){function e(){return l?O.promise||null:p}function s(){function e(e){function p(e,t){var n=i,o=i,r=i;return m.isArray(e)?(n=e[0],!m.isArray(e[1])&&/^[\d-]/.test(e[1])||m.isFunction(e[1])||x.RegEx.isHex.test(e[1])?r=e[1]:(m.isString(e[1])&&!x.RegEx.isHex.test(e[1])||m.isArray(e[1]))&&(o=t?e[1]:c(e[1],l.duration),e[2]!==i&&(r=e[2]))):n=e,t||(o=o||l.easing),m.isFunction(n)&&(n=n.call(s,k,T)),m.isFunction(r)&&(r=r.call(s,k,T)),[n||0,o,r]}function h(e,t){var n,i;return i=(t||"0").toString().toLowerCase().replace(/[%A-z]+$/,function(e){return n=e,""}),n||(n=x.Values.getUnitType(e)),[i,n]}function g(){var e={myParent:s.parentNode||n.body,position:x.getPropertyValue(s,"position"),fontSize:x.getPropertyValue(s,"fontSize")},i=e.position===$.lastPosition&&e.myParent===$.lastParent,o=e.fontSize===$.lastFontSize;$.lastParent=e.myParent,$.lastPosition=e.position,$.lastFontSize=e.fontSize;var r=100,l={};if(o&&i)l.emToPx=$.lastEmToPx,l.percentToPxWidth=$.lastPercentToPxWidth,l.percentToPxHeight=$.lastPercentToPxHeight;else{var c=a(s).isSVG?n.createElementNS("http://www.w3.org/2000/svg","rect"):n.createElement("div");b.init(c),e.myParent.appendChild(c),f.each(["overflow","overflowX","overflowY"],function(e,t){b.CSS.setPropertyValue(c,t,"hidden")}),b.CSS.setPropertyValue(c,"position",e.position),b.CSS.setPropertyValue(c,"fontSize",e.fontSize),b.CSS.setPropertyValue(c,"boxSizing","content-box"),f.each(["minWidth","maxWidth","width","minHeight","maxHeight","height"],function(e,t){b.CSS.setPropertyValue(c,t,r+"%")}),b.CSS.setPropertyValue(c,"paddingLeft",r+"em"),l.percentToPxWidth=$.lastPercentToPxWidth=(parseFloat(x.getPropertyValue(c,"width",null,!0))||1)/r,l.percentToPxHeight=$.lastPercentToPxHeight=(parseFloat(x.getPropertyValue(c,"height",null,!0))||1)/r,l.emToPx=$.lastEmToPx=(parseFloat(x.getPropertyValue(c,"paddingLeft"))||1)/r,e.myParent.removeChild(c)}return null===$.remToPx&&($.remToPx=parseFloat(x.getPropertyValue(n.body,"fontSize"))||16),null===$.vwToPx&&($.vwToPx=parseFloat(t.innerWidth)/100,$.vhToPx=parseFloat(t.innerHeight)/100),l.remToPx=$.remToPx,l.vwToPx=$.vwToPx,l.vhToPx=$.vhToPx,b.debug>=1&&console.log("Unit ratios: "+JSON.stringify(l),s),l}if(l.begin&&0===k)try{l.begin.call(v,v)}catch(S){setTimeout(function(){throw S},1)}if("scroll"===P){var C,I,E,A=/^x$/i.test(l.axis)?"Left":"Top",N=parseFloat(l.offset)||0;l.container?m.isWrapped(l.container)||m.isNode(l.container)?(l.container=l.container[0]||l.container,C=l.container["scroll"+A],E=C+f(s).position()[A.toLowerCase()]+N):l.container=null:(C=b.State.scrollAnchor[b.State["scrollProperty"+A]],I=b.State.scrollAnchor[b.State["scrollProperty"+("Left"===A?"Top":"Left")]],E=f(s).offset()[A.toLowerCase()]+N),d={scroll:{rootPropertyValue:!1,startValue:C,currentValue:C,endValue:E,unitType:"",easing:l.easing,scrollData:{container:l.container,direction:A,alternateValue:I}},element:s},b.debug&&console.log("tweensContainer (scroll): ",d.scroll,s)}else if("reverse"===P){if(!a(s).tweensContainer)return void f.dequeue(s,l.queue);"none"===a(s).opts.display&&(a(s).opts.display="auto"),"hidden"===a(s).opts.visibility&&(a(s).opts.visibility="visible"),a(s).opts.loop=!1,a(s).opts.begin=null,a(s).opts.complete=null,w.easing||delete l.easing,w.duration||delete l.duration,l=f.extend({},a(s).opts,l);var j=f.extend(!0,{},a(s).tweensContainer);for(var D in j)if("element"!==D){var M=j[D].startValue;j[D].startValue=j[D].currentValue=j[D].endValue,j[D].endValue=M,m.isEmptyObject(w)||(j[D].easing=l.easing),b.debug&&console.log("reverse tweensContainer ("+D+"): "+JSON.stringify(j[D]),s)}d=j}else if("start"===P){var j;a(s).tweensContainer&&a(s).isAnimating===!0&&(j=a(s).tweensContainer),f.each(y,function(e,t){if(RegExp("^"+x.Lists.colors.join("$|^")+"$").test(e)){var n=p(t,!0),o=n[0],r=n[1],a=n[2];if(x.RegEx.isHex.test(o)){for(var s=["Red","Green","Blue"],l=x.Values.hexToRgb(o),c=a?x.Values.hexToRgb(a):i,u=0;u<s.length;u++){
var d=[l[u]];r&&d.push(r),c!==i&&d.push(c[u]),y[e+s[u]]=d}delete y[e]}}});for(var L in y){var F=p(y[L]),H=F[0],_=F[1],W=F[2];L=x.Names.camelCase(L);var R=x.Hooks.getRoot(L),B=!1;if(a(s).isSVG||x.Names.prefixCheck(R)[1]!==!1||x.Normalizations.registered[R]!==i){(l.display!==i&&null!==l.display&&"none"!==l.display||l.visibility!==i&&"hidden"!==l.visibility)&&/opacity|filter/.test(L)&&!W&&0!==H&&(W=0),l._cacheValues&&j&&j[L]?(W===i&&(W=j[L].endValue+j[L].unitType),B=a(s).rootPropertyValueCache[R]):x.Hooks.registered[L]?W===i?(B=x.getPropertyValue(s,R),W=x.getPropertyValue(s,L,B)):B=x.Hooks.templates[R][1]:W===i&&(W=x.getPropertyValue(s,L));var z,V,Q,X=!1;if(z=h(L,W),W=z[0],Q=z[1],z=h(L,H),H=z[0].replace(/^([+-\/*])=/,function(e,t){return X=t,""}),V=z[1],W=parseFloat(W)||0,H=parseFloat(H)||0,"%"===V&&(/^(fontSize|lineHeight)$/.test(L)?(H/=100,V="em"):/^scale/.test(L)?(H/=100,V=""):/(Red|Green|Blue)$/i.test(L)&&(H=H/100*255,V="")),/[\/*]/.test(X))V=Q;else if(Q!==V&&0!==W)if(0===H)V=Q;else{r=r||g();var Y=/margin|padding|left|right|width|text|word|letter/i.test(L)||/X$/.test(L)||"x"===L?"x":"y";switch(Q){case"%":W*="x"===Y?r.percentToPxWidth:r.percentToPxHeight;break;case"px":break;default:W*=r[Q+"ToPx"]}switch(V){case"%":W*=1/("x"===Y?r.percentToPxWidth:r.percentToPxHeight);break;case"px":break;default:W*=1/r[V+"ToPx"]}}switch(X){case"+":H=W+H;break;case"-":H=W-H;break;case"*":H=W*H;break;case"/":H=W/H}d[L]={rootPropertyValue:B,startValue:W,currentValue:W,endValue:H,unitType:V,easing:_},b.debug&&console.log("tweensContainer ("+L+"): "+JSON.stringify(d[L]),s)}else b.debug&&console.log("Skipping ["+R+"] due to a lack of browser support.")}d.element=s}d.element&&(x.Values.addClass(s,"velocity-animating"),q.push(d),""===l.queue&&(a(s).tweensContainer=d,a(s).opts=l),a(s).isAnimating=!0,k===T-1?(b.State.calls.length>1e4&&(b.State.calls=o(b.State.calls)),b.State.calls.push([q,v,l,null,O.resolver]),b.State.isTicking===!1&&(b.State.isTicking=!0,u())):k++)}var r,s=this,l=f.extend({},b.defaults,w),d={};switch(a(s)===i&&b.init(s),parseFloat(l.delay)&&l.queue!==!1&&f.queue(s,l.queue,function(e){b.velocityQueueEntryFlag=!0,a(s).delayTimer={setTimeout:setTimeout(e,parseFloat(l.delay)),next:e}}),l.duration.toString().toLowerCase()){case"fast":l.duration=200;break;case"normal":l.duration=g;break;case"slow":l.duration=600;break;default:l.duration=parseFloat(l.duration)||1}b.mock!==!1&&(b.mock===!0?l.duration=l.delay=1:(l.duration*=parseFloat(b.mock)||1,l.delay*=parseFloat(b.mock)||1)),l.easing=c(l.easing,l.duration),l.begin&&!m.isFunction(l.begin)&&(l.begin=null),l.progress&&!m.isFunction(l.progress)&&(l.progress=null),l.complete&&!m.isFunction(l.complete)&&(l.complete=null),l.display!==i&&null!==l.display&&(l.display=l.display.toString().toLowerCase(),"auto"===l.display&&(l.display=b.CSS.Values.getDisplayType(s))),l.visibility!==i&&null!==l.visibility&&(l.visibility=l.visibility.toString().toLowerCase()),l.mobileHA=l.mobileHA&&b.State.isMobile&&!b.State.isGingerbread,l.queue===!1?l.delay?setTimeout(e,l.delay):e():f.queue(s,l.queue,function(t,n){return n===!0?(O.promise&&O.resolver(v),!0):(b.velocityQueueEntryFlag=!0,void e(t))}),""!==l.queue&&"fx"!==l.queue||"inprogress"===f.queue(s)[0]||f.dequeue(s)}var l,p,h,v,y,w,C=arguments[0]&&(f.isPlainObject(arguments[0].properties)&&!arguments[0].properties.names||m.isString(arguments[0].properties));if(m.isWrapped(this)?(l=!1,h=0,v=this,p=this):(l=!0,h=1,v=C?arguments[0].elements:arguments[0]),v=r(v)){C?(y=arguments[0].properties,w=arguments[0].options):(y=arguments[h],w=arguments[h+1]);var T=v.length,k=0;if("stop"!==y&&!f.isPlainObject(w)){var I=h+1;w={};for(var E=I;E<arguments.length;E++)m.isArray(arguments[E])||!/^(fast|normal|slow)$/i.test(arguments[E])&&!/^\d/.test(arguments[E])?m.isString(arguments[E])||m.isArray(arguments[E])?w.easing=arguments[E]:m.isFunction(arguments[E])&&(w.complete=arguments[E]):w.duration=arguments[E]}var O={promise:null,resolver:null,rejecter:null};l&&b.Promise&&(O.promise=new b.Promise(function(e,t){O.resolver=e,O.rejecter=t}));var P;switch(y){case"scroll":P="scroll";break;case"reverse":P="reverse";break;case"stop":f.each(v,function(e,t){a(t)&&a(t).delayTimer&&(clearTimeout(a(t).delayTimer.setTimeout),a(t).delayTimer.next&&a(t).delayTimer.next(),delete a(t).delayTimer)});var A=[];return f.each(b.State.calls,function(e,t){t&&f.each(t[1],function(n,o){var r=m.isString(w)?w:"";return w!==i&&t[2].queue!==r||void f.each(v,function(t,n){n===o&&(w!==i&&(f.each(f.queue(n,r),function(e,t){m.isFunction(t)&&t(null,!0)}),f.queue(n,r,[])),a(n)&&""===r&&f.each(a(n).tweensContainer,function(e,t){t.endValue=t.currentValue}),A.push(e))})})}),f.each(A,function(e,t){d(t,!0)}),O.promise&&O.resolver(v),e();default:if(!f.isPlainObject(y)||m.isEmptyObject(y)){if(m.isString(y)&&b.Redirects[y]){var N=f.extend({},w),j=N.duration,D=N.delay||0;return N.backwards===!0&&(v=f.extend(!0,[],v).reverse()),f.each(v,function(e,t){parseFloat(N.stagger)?N.delay=D+parseFloat(N.stagger)*e:m.isFunction(N.stagger)&&(N.delay=D+N.stagger.call(t,e,T)),N.drag&&(N.duration=parseFloat(j)||(/^(callout|transition)/.test(y)?1e3:g),N.duration=Math.max(N.duration*(N.backwards?1-e/T:(e+1)/T),.75*N.duration,200)),b.Redirects[y].call(t,t,N||{},e,T,v,O.promise?O:i)}),e()}var M="Velocity: First argument ("+y+") was not a property map, a known action, or a registered redirect. Aborting.";return O.promise?O.rejecter(new Error(M)):console.log(M),e()}P="start"}var $={lastParent:null,lastPosition:null,lastFontSize:null,lastPercentToPxWidth:null,lastPercentToPxHeight:null,lastEmToPx:null,remToPx:null,vwToPx:null,vhToPx:null},q=[];f.each(v,function(e,t){m.isNode(t)&&s.call(t)});var L,N=f.extend({},b.defaults,w);if(N.loop=parseInt(N.loop),L=2*N.loop-1,N.loop)for(var F=0;L>F;F++){var H={delay:N.delay,progress:N.progress};F===L-1&&(H.display=N.display,H.visibility=N.visibility,H.complete=N.complete),S(v,"reverse",H)}return e()}};b=f.extend(S,b),b.animate=S;var C=t.requestAnimationFrame||h;return b.State.isMobile||n.hidden===i||n.addEventListener("visibilitychange",function(){n.hidden?(C=function(e){return setTimeout(function(){e(!0)},16)},u()):C=t.requestAnimationFrame||h}),e.Velocity=b,e!==t&&(e.fn.velocity=S,e.fn.velocity.defaults=b.defaults),f.each(["Down","Up"],function(e,t){b.Redirects["slide"+t]=function(e,n,o,r,a,s){var l=f.extend({},n),c=l.begin,u=l.complete,d={height:"",marginTop:"",marginBottom:"",paddingTop:"",paddingBottom:""},p={};l.display===i&&(l.display="Down"===t?"inline"===b.CSS.Values.getDisplayType(e)?"inline-block":"block":"none"),l.begin=function(){c&&c.call(a,a);for(var n in d){p[n]=e.style[n];var i=b.CSS.getPropertyValue(e,n);d[n]="Down"===t?[i,0]:[0,i]}p.overflow=e.style.overflow,e.style.overflow="hidden"},l.complete=function(){for(var t in p)e.style[t]=p[t];u&&u.call(a,a),s&&s.resolver(a)},b(e,d,l)}}),f.each(["In","Out"],function(e,t){b.Redirects["fade"+t]=function(e,n,o,r,a,s){var l=f.extend({},n),c={opacity:"In"===t?1:0},u=l.complete;l.complete=o!==r-1?l.begin=null:function(){u&&u.call(a,a),s&&s.resolver(a)},l.display===i&&(l.display="In"===t?"auto":"none"),b(this,c,l)}}),b}(window.jQuery||window.Zepto||window,window,document)}),!function(e,t,n,i){"use strict";function o(e,t,n){return setTimeout(u(e,n),t)}function r(e,t,n){return!!Array.isArray(e)&&(a(e,n[t],n),!0)}function a(e,t,n){var o;if(e)if(e.forEach)e.forEach(t,n);else if(e.length!==i)for(o=0;o<e.length;)t.call(n,e[o],o,e),o++;else for(o in e)e.hasOwnProperty(o)&&t.call(n,e[o],o,e)}function s(e,t,n){for(var o=Object.keys(t),r=0;r<o.length;)(!n||n&&e[o[r]]===i)&&(e[o[r]]=t[o[r]]),r++;return e}function l(e,t){return s(e,t,!0)}function c(e,t,n){var i,o=t.prototype;i=e.prototype=Object.create(o),i.constructor=e,i._super=o,n&&s(i,n)}function u(e,t){return function(){return e.apply(t,arguments)}}function d(e,t){return typeof e==ue?e.apply(t?t[0]||i:i,t):e}function f(e,t){return e===i?t:e}function p(e,t,n){a(g(t),function(t){e.addEventListener(t,n,!1)})}function h(e,t,n){a(g(t),function(t){e.removeEventListener(t,n,!1)})}function m(e,t){for(;e;){if(e==t)return!0;e=e.parentNode}return!1}function v(e,t){return e.indexOf(t)>-1}function g(e){return e.trim().split(/\s+/g)}function y(e,t,n){if(e.indexOf&&!n)return e.indexOf(t);for(var i=0;i<e.length;){if(n&&e[i][n]==t||!n&&e[i]===t)return i;i++}return-1}function b(e){return Array.prototype.slice.call(e,0)}function w(e,t,n){for(var i=[],o=[],r=0;r<e.length;){var a=t?e[r][t]:e[r];y(o,a)<0&&i.push(e[r]),o[r]=a,r++}return n&&(i=t?i.sort(function(e,n){return e[t]>n[t]}):i.sort()),i}function x(e,t){for(var n,o,r=t[0].toUpperCase()+t.slice(1),a=0;a<le.length;){if(n=le[a],o=n?n+r:t,o in e)return o;a++}return i}function S(){return he++}function C(e){var t=e.ownerDocument;return t.defaultView||t.parentWindow}function T(e,t){var n=this;this.manager=e,this.callback=t,this.element=e.element,this.target=e.options.inputTarget,this.domHandler=function(t){d(e.options.enable,[e])&&n.handler(t)},this.init()}function k(e){var t,n=e.options.inputClass;return new(t=n?n:ge?H:ye?R:ve?z:F)(e,I)}function I(e,t,n){var i=n.pointers.length,o=n.changedPointers.length,r=t&Te&&0===i-o,a=t&(Ie|Ee)&&0===i-o;n.isFirst=!!r,n.isFinal=!!a,r&&(e.session={}),n.eventType=t,E(e,n),e.emit("hammer.input",n),e.recognize(n),e.session.prevInput=n}function E(e,t){var n=e.session,i=t.pointers,o=i.length;n.firstInput||(n.firstInput=A(t)),o>1&&!n.firstMultiple?n.firstMultiple=A(t):1===o&&(n.firstMultiple=!1);var r=n.firstInput,a=n.firstMultiple,s=a?a.center:r.center,l=t.center=N(i);t.timeStamp=pe(),t.deltaTime=t.timeStamp-r.timeStamp,t.angle=$(s,l),t.distance=M(s,l),O(n,t),t.offsetDirection=D(t.deltaX,t.deltaY),t.scale=a?L(a.pointers,i):1,t.rotation=a?q(a.pointers,i):0,P(n,t);var c=e.element;m(t.srcEvent.target,c)&&(c=t.srcEvent.target),t.target=c}function O(e,t){var n=t.center,i=e.offsetDelta||{},o=e.prevDelta||{},r=e.prevInput||{};(t.eventType===Te||r.eventType===Ie)&&(o=e.prevDelta={x:r.deltaX||0,y:r.deltaY||0},i=e.offsetDelta={x:n.x,y:n.y}),t.deltaX=o.x+(n.x-i.x),t.deltaY=o.y+(n.y-i.y)}function P(e,t){var n,o,r,a,s=e.lastInterval||t,l=t.timeStamp-s.timeStamp;if(t.eventType!=Ee&&(l>Ce||s.velocity===i)){var c=s.deltaX-t.deltaX,u=s.deltaY-t.deltaY,d=j(l,c,u);o=d.x,r=d.y,n=fe(d.x)>fe(d.y)?d.x:d.y,a=D(c,u),e.lastInterval=t}else n=s.velocity,o=s.velocityX,r=s.velocityY,a=s.direction;t.velocity=n,t.velocityX=o,t.velocityY=r,t.direction=a}function A(e){for(var t=[],n=0;n<e.pointers.length;)t[n]={clientX:de(e.pointers[n].clientX),clientY:de(e.pointers[n].clientY)},n++;return{timeStamp:pe(),pointers:t,center:N(t),deltaX:e.deltaX,deltaY:e.deltaY}}function N(e){var t=e.length;if(1===t)return{x:de(e[0].clientX),y:de(e[0].clientY)};for(var n=0,i=0,o=0;t>o;)n+=e[o].clientX,i+=e[o].clientY,o++;return{x:de(n/t),y:de(i/t)}}function j(e,t,n){return{x:t/e||0,y:n/e||0}}function D(e,t){return e===t?Oe:fe(e)>=fe(t)?e>0?Pe:Ae:t>0?Ne:je}function M(e,t,n){n||(n=qe);var i=t[n[0]]-e[n[0]],o=t[n[1]]-e[n[1]];return Math.sqrt(i*i+o*o)}function $(e,t,n){n||(n=qe);var i=t[n[0]]-e[n[0]],o=t[n[1]]-e[n[1]];return 180*Math.atan2(o,i)/Math.PI}function q(e,t){return $(t[1],t[0],Le)-$(e[1],e[0],Le)}function L(e,t){return M(t[0],t[1],Le)/M(e[0],e[1],Le)}function F(){this.evEl=He,this.evWin=_e,this.allow=!0,this.pressed=!1,T.apply(this,arguments)}function H(){this.evEl=Be,this.evWin=ze,T.apply(this,arguments),this.store=this.manager.session.pointerEvents=[]}function _(){this.evTarget=Qe,this.evWin=Xe,this.started=!1,T.apply(this,arguments)}function W(e,t){var n=b(e.touches),i=b(e.changedTouches);return t&(Ie|Ee)&&(n=w(n.concat(i),"identifier",!0)),[n,i]}function R(){this.evTarget=Ue,this.targetIds={},T.apply(this,arguments)}function B(e,t){var n=b(e.touches),i=this.targetIds;if(t&(Te|ke)&&1===n.length)return i[n[0].identifier]=!0,[n,n];var o,r,a=b(e.changedTouches),s=[],l=this.target;if(r=n.filter(function(e){return m(e.target,l)}),t===Te)for(o=0;o<r.length;)i[r[o].identifier]=!0,o++;for(o=0;o<a.length;)i[a[o].identifier]&&s.push(a[o]),t&(Ie|Ee)&&delete i[a[o].identifier],o++;return s.length?[w(r.concat(s),"identifier",!0),s]:void 0}function z(){T.apply(this,arguments);var e=u(this.handler,this);this.touch=new R(this.manager,e),this.mouse=new F(this.manager,e)}function V(e,t){this.manager=e,this.set(t)}function Q(e){if(v(e,tt))return tt;var t=v(e,nt),n=v(e,it);return t&&n?nt+" "+it:t||n?t?nt:it:v(e,et)?et:Ke}function X(e){this.id=S(),this.manager=null,this.options=l(e||{},this.defaults),this.options.enable=f(this.options.enable,!0),this.state=ot,this.simultaneous={},this.requireFail=[]}function Y(e){return e&ct?"cancel":e&st?"end":e&at?"move":e&rt?"start":""}function U(e){return e==je?"down":e==Ne?"up":e==Pe?"left":e==Ae?"right":""}function G(e,t){var n=t.manager;return n?n.get(e):e}function J(){X.apply(this,arguments)}function Z(){J.apply(this,arguments),this.pX=null,this.pY=null}function K(){J.apply(this,arguments)}function ee(){X.apply(this,arguments),this._timer=null,this._input=null}function te(){J.apply(this,arguments)}function ne(){J.apply(this,arguments)}function ie(){X.apply(this,arguments),this.pTime=!1,this.pCenter=!1,this._timer=null,this._input=null,this.count=0}function oe(e,t){return t=t||{},t.recognizers=f(t.recognizers,oe.defaults.preset),new re(e,t)}function re(e,t){t=t||{},this.options=l(t,oe.defaults),this.options.inputTarget=this.options.inputTarget||e,this.handlers={},this.session={},this.recognizers=[],this.element=e,this.input=k(this),this.touchAction=new V(this,this.options.touchAction),ae(this,!0),a(t.recognizers,function(e){var t=this.add(new e[0](e[1]));e[2]&&t.recognizeWith(e[2]),e[3]&&t.requireFailure(e[3])},this)}function ae(e,t){var n=e.element;a(e.options.cssProps,function(e,i){n.style[x(n.style,i)]=t?e:""})}function se(e,n){var i=t.createEvent("Event");i.initEvent(e,!0,!0),i.gesture=n,n.target.dispatchEvent(i)}var le=["","webkit","moz","MS","ms","o"],ce=t.createElement("div"),ue="function",de=Math.round,fe=Math.abs,pe=Date.now,he=1,me=/mobile|tablet|ip(ad|hone|od)|android/i,ve="ontouchstart"in e,ge=x(e,"PointerEvent")!==i,ye=ve&&me.test(navigator.userAgent),be="touch",we="pen",xe="mouse",Se="kinect",Ce=25,Te=1,ke=2,Ie=4,Ee=8,Oe=1,Pe=2,Ae=4,Ne=8,je=16,De=Pe|Ae,Me=Ne|je,$e=De|Me,qe=["x","y"],Le=["clientX","clientY"];T.prototype={handler:function(){},init:function(){this.evEl&&p(this.element,this.evEl,this.domHandler),this.evTarget&&p(this.target,this.evTarget,this.domHandler),this.evWin&&p(C(this.element),this.evWin,this.domHandler)},destroy:function(){this.evEl&&h(this.element,this.evEl,this.domHandler),this.evTarget&&h(this.target,this.evTarget,this.domHandler),this.evWin&&h(C(this.element),this.evWin,this.domHandler)}};var Fe={mousedown:Te,mousemove:ke,mouseup:Ie},He="mousedown",_e="mousemove mouseup";c(F,T,{handler:function(e){var t=Fe[e.type];t&Te&&0===e.button&&(this.pressed=!0),t&ke&&1!==e.which&&(t=Ie),this.pressed&&this.allow&&(t&Ie&&(this.pressed=!1),this.callback(this.manager,t,{pointers:[e],changedPointers:[e],pointerType:xe,srcEvent:e}))}});var We={pointerdown:Te,pointermove:ke,pointerup:Ie,pointercancel:Ee,pointerout:Ee},Re={2:be,3:we,4:xe,5:Se},Be="pointerdown",ze="pointermove pointerup pointercancel";e.MSPointerEvent&&(Be="MSPointerDown",ze="MSPointerMove MSPointerUp MSPointerCancel"),c(H,T,{handler:function(e){var t=this.store,n=!1,i=e.type.toLowerCase().replace("ms",""),o=We[i],r=Re[e.pointerType]||e.pointerType,a=r==be,s=y(t,e.pointerId,"pointerId");o&Te&&(0===e.button||a)?0>s&&(t.push(e),s=t.length-1):o&(Ie|Ee)&&(n=!0),0>s||(t[s]=e,this.callback(this.manager,o,{pointers:t,changedPointers:[e],pointerType:r,srcEvent:e}),n&&t.splice(s,1))}});var Ve={touchstart:Te,touchmove:ke,touchend:Ie,touchcancel:Ee},Qe="touchstart",Xe="touchstart touchmove touchend touchcancel";c(_,T,{handler:function(e){var t=Ve[e.type];if(t===Te&&(this.started=!0),this.started){var n=W.call(this,e,t);t&(Ie|Ee)&&0===n[0].length-n[1].length&&(this.started=!1),this.callback(this.manager,t,{pointers:n[0],changedPointers:n[1],pointerType:be,srcEvent:e})}}});var Ye={touchstart:Te,touchmove:ke,touchend:Ie,touchcancel:Ee},Ue="touchstart touchmove touchend touchcancel";c(R,T,{handler:function(e){var t=Ye[e.type],n=B.call(this,e,t);n&&this.callback(this.manager,t,{pointers:n[0],changedPointers:n[1],pointerType:be,srcEvent:e})}}),c(z,T,{handler:function(e,t,n){var i=n.pointerType==be,o=n.pointerType==xe;if(i)this.mouse.allow=!1;else if(o&&!this.mouse.allow)return;t&(Ie|Ee)&&(this.mouse.allow=!0),this.callback(e,t,n)},destroy:function(){this.touch.destroy(),this.mouse.destroy()}});var Ge=x(ce.style,"touchAction"),Je=Ge!==i,Ze="compute",Ke="auto",et="manipulation",tt="none",nt="pan-x",it="pan-y";V.prototype={set:function(e){e==Ze&&(e=this.compute()),Je&&(this.manager.element.style[Ge]=e),this.actions=e.toLowerCase().trim()},update:function(){this.set(this.manager.options.touchAction)},compute:function(){var e=[];return a(this.manager.recognizers,function(t){d(t.options.enable,[t])&&(e=e.concat(t.getTouchAction()))}),Q(e.join(" "))},preventDefaults:function(e){if(!Je){var t=e.srcEvent,n=e.offsetDirection;if(this.manager.session.prevented)return void t.preventDefault();var i=this.actions,o=v(i,tt),r=v(i,it),a=v(i,nt);return o||r&&n&De||a&&n&Me?this.preventSrc(t):void 0}},preventSrc:function(e){this.manager.session.prevented=!0,e.preventDefault()}};var ot=1,rt=2,at=4,st=8,lt=st,ct=16,ut=32;X.prototype={defaults:{},set:function(e){return s(this.options,e),this.manager&&this.manager.touchAction.update(),this},recognizeWith:function(e){if(r(e,"recognizeWith",this))return this;var t=this.simultaneous;return e=G(e,this),t[e.id]||(t[e.id]=e,e.recognizeWith(this)),this},dropRecognizeWith:function(e){return r(e,"dropRecognizeWith",this)?this:(e=G(e,this),delete this.simultaneous[e.id],this)},requireFailure:function(e){if(r(e,"requireFailure",this))return this;var t=this.requireFail;return e=G(e,this),-1===y(t,e)&&(t.push(e),e.requireFailure(this)),this},dropRequireFailure:function(e){if(r(e,"dropRequireFailure",this))return this;e=G(e,this);var t=y(this.requireFail,e);return t>-1&&this.requireFail.splice(t,1),this},hasRequireFailures:function(){return this.requireFail.length>0},canRecognizeWith:function(e){return!!this.simultaneous[e.id]},emit:function(e){function t(t){n.manager.emit(n.options.event+(t?Y(i):""),e)}var n=this,i=this.state;st>i&&t(!0),t(),i>=st&&t(!0)},tryEmit:function(e){return this.canEmit()?this.emit(e):void(this.state=ut)},canEmit:function(){for(var e=0;e<this.requireFail.length;){if(!(this.requireFail[e].state&(ut|ot)))return!1;e++}return!0},recognize:function(e){var t=s({},e);return d(this.options.enable,[this,t])?(this.state&(lt|ct|ut)&&(this.state=ot),this.state=this.process(t),void(this.state&(rt|at|st|ct)&&this.tryEmit(t))):(this.reset(),void(this.state=ut))},process:function(){},getTouchAction:function(){},reset:function(){}},c(J,X,{defaults:{pointers:1},attrTest:function(e){var t=this.options.pointers;return 0===t||e.pointers.length===t},process:function(e){var t=this.state,n=e.eventType,i=t&(rt|at),o=this.attrTest(e);return i&&(n&Ee||!o)?t|ct:i||o?n&Ie?t|st:t&rt?t|at:rt:ut}}),c(Z,J,{defaults:{event:"pan",threshold:10,pointers:1,direction:$e},getTouchAction:function(){var e=this.options.direction,t=[];return e&De&&t.push(it),e&Me&&t.push(nt),t},directionTest:function(e){var t=this.options,n=!0,i=e.distance,o=e.direction,r=e.deltaX,a=e.deltaY;return o&t.direction||(t.direction&De?(o=0===r?Oe:0>r?Pe:Ae,n=r!=this.pX,i=Math.abs(e.deltaX)):(o=0===a?Oe:0>a?Ne:je,n=a!=this.pY,i=Math.abs(e.deltaY))),e.direction=o,n&&i>t.threshold&&o&t.direction},attrTest:function(e){return J.prototype.attrTest.call(this,e)&&(this.state&rt||!(this.state&rt)&&this.directionTest(e))},emit:function(e){this.pX=e.deltaX,this.pY=e.deltaY;var t=U(e.direction);t&&this.manager.emit(this.options.event+t,e),this._super.emit.call(this,e)}}),c(K,J,{defaults:{event:"pinch",threshold:0,pointers:2},getTouchAction:function(){return[tt]},attrTest:function(e){return this._super.attrTest.call(this,e)&&(Math.abs(e.scale-1)>this.options.threshold||this.state&rt)},emit:function(e){if(this._super.emit.call(this,e),1!==e.scale){var t=e.scale<1?"in":"out";this.manager.emit(this.options.event+t,e)}}}),c(ee,X,{defaults:{event:"press",pointers:1,time:500,threshold:5},getTouchAction:function(){return[Ke]},process:function(e){var t=this.options,n=e.pointers.length===t.pointers,i=e.distance<t.threshold,r=e.deltaTime>t.time;if(this._input=e,!i||!n||e.eventType&(Ie|Ee)&&!r)this.reset();else if(e.eventType&Te)this.reset(),this._timer=o(function(){this.state=lt,this.tryEmit()},t.time,this);else if(e.eventType&Ie)return lt;return ut},reset:function(){clearTimeout(this._timer)},emit:function(e){this.state===lt&&(e&&e.eventType&Ie?this.manager.emit(this.options.event+"up",e):(this._input.timeStamp=pe(),this.manager.emit(this.options.event,this._input)))}}),c(te,J,{defaults:{event:"rotate",threshold:0,pointers:2},getTouchAction:function(){return[tt]},attrTest:function(e){return this._super.attrTest.call(this,e)&&(Math.abs(e.rotation)>this.options.threshold||this.state&rt)}}),c(ne,J,{defaults:{event:"swipe",threshold:10,velocity:.65,direction:De|Me,pointers:1},getTouchAction:function(){return Z.prototype.getTouchAction.call(this)},attrTest:function(e){var t,n=this.options.direction;return n&(De|Me)?t=e.velocity:n&De?t=e.velocityX:n&Me&&(t=e.velocityY),this._super.attrTest.call(this,e)&&n&e.direction&&e.distance>this.options.threshold&&fe(t)>this.options.velocity&&e.eventType&Ie},emit:function(e){var t=U(e.direction);t&&this.manager.emit(this.options.event+t,e),this.manager.emit(this.options.event,e)}}),c(ie,X,{defaults:{event:"tap",pointers:1,taps:1,interval:300,time:250,threshold:2,posThreshold:10},getTouchAction:function(){return[et]},process:function(e){var t=this.options,n=e.pointers.length===t.pointers,i=e.distance<t.threshold,r=e.deltaTime<t.time;if(this.reset(),e.eventType&Te&&0===this.count)return this.failTimeout();if(i&&r&&n){if(e.eventType!=Ie)return this.failTimeout();var a=!this.pTime||e.timeStamp-this.pTime<t.interval,s=!this.pCenter||M(this.pCenter,e.center)<t.posThreshold;this.pTime=e.timeStamp,this.pCenter=e.center,s&&a?this.count+=1:this.count=1,this._input=e;var l=this.count%t.taps;if(0===l)return this.hasRequireFailures()?(this._timer=o(function(){this.state=lt,this.tryEmit()},t.interval,this),rt):lt}return ut},failTimeout:function(){return this._timer=o(function(){this.state=ut},this.options.interval,this),ut},reset:function(){clearTimeout(this._timer)},emit:function(){this.state==lt&&(this._input.tapCount=this.count,this.manager.emit(this.options.event,this._input))}}),oe.VERSION="2.0.4",oe.defaults={domEvents:!1,touchAction:Ze,enable:!0,inputTarget:null,inputClass:null,preset:[[te,{enable:!1}],[K,{enable:!1},["rotate"]],[ne,{direction:De}],[Z,{direction:De},["swipe"]],[ie],[ie,{event:"doubletap",taps:2},["tap"]],[ee]],cssProps:{userSelect:"default",touchSelect:"none",touchCallout:"none",contentZooming:"none",userDrag:"none",tapHighlightColor:"rgba(0,0,0,0)"}};var dt=1,ft=2;re.prototype={set:function(e){return s(this.options,e),e.touchAction&&this.touchAction.update(),e.inputTarget&&(this.input.destroy(),this.input.target=e.inputTarget,this.input.init()),this},stop:function(e){this.session.stopped=e?ft:dt},recognize:function(e){var t=this.session;if(!t.stopped){this.touchAction.preventDefaults(e);var n,i=this.recognizers,o=t.curRecognizer;(!o||o&&o.state&lt)&&(o=t.curRecognizer=null);for(var r=0;r<i.length;)n=i[r],t.stopped===ft||o&&n!=o&&!n.canRecognizeWith(o)?n.reset():n.recognize(e),!o&&n.state&(rt|at|st)&&(o=t.curRecognizer=n),r++}},get:function(e){if(e instanceof X)return e;for(var t=this.recognizers,n=0;n<t.length;n++)if(t[n].options.event==e)return t[n];return null},add:function(e){if(r(e,"add",this))return this;var t=this.get(e.options.event);return t&&this.remove(t),this.recognizers.push(e),e.manager=this,this.touchAction.update(),e},remove:function(e){if(r(e,"remove",this))return this;var t=this.recognizers;return e=this.get(e),t.splice(y(t,e),1),this.touchAction.update(),this},on:function(e,t){var n=this.handlers;return a(g(e),function(e){n[e]=n[e]||[],n[e].push(t)}),this},off:function(e,t){var n=this.handlers;return a(g(e),function(e){t?n[e].splice(y(n[e],t),1):delete n[e]}),this},emit:function(e,t){this.options.domEvents&&se(e,t);var n=this.handlers[e]&&this.handlers[e].slice();if(n&&n.length){t.type=e,t.preventDefault=function(){t.srcEvent.preventDefault()};for(var i=0;i<n.length;)n[i](t),i++}},destroy:function(){this.element&&ae(this,!1),this.handlers={},this.session={},this.input.destroy(),this.element=null}},s(oe,{INPUT_START:Te,INPUT_MOVE:ke,INPUT_END:Ie,INPUT_CANCEL:Ee,STATE_POSSIBLE:ot,STATE_BEGAN:rt,STATE_CHANGED:at,STATE_ENDED:st,STATE_RECOGNIZED:lt,STATE_CANCELLED:ct,STATE_FAILED:ut,DIRECTION_NONE:Oe,DIRECTION_LEFT:Pe,DIRECTION_RIGHT:Ae,DIRECTION_UP:Ne,DIRECTION_DOWN:je,DIRECTION_HORIZONTAL:De,DIRECTION_VERTICAL:Me,DIRECTION_ALL:$e,Manager:re,Input:T,TouchAction:V,TouchInput:R,MouseInput:F,PointerEventInput:H,TouchMouseInput:z,SingleTouchInput:_,Recognizer:X,AttrRecognizer:J,Tap:ie,Pan:Z,Swipe:ne,Pinch:K,Rotate:te,Press:ee,on:p,off:h,each:a,merge:l,extend:s,inherit:c,bindFn:u,prefixed:x}),typeof define==ue&&define.amd?define(function(){return oe}):"undefined"!=typeof module&&module.exports?module.exports=oe:e[n]=oe}(window,document,"Hammer"),function(e){"function"==typeof define&&define.amd?define(["jquery","hammerjs"],e):"object"==typeof exports?e(require("jquery"),require("hammerjs")):e(jQuery,Hammer)}(function(e,t){function n(n,i){var o=e(n);o.data("hammer")||o.data("hammer",new t(o[0],i))}e.fn.hammer=function(e){return this.each(function(){n(this,e)})},t.Manager.prototype.emit=function(t){return function(n,i){t.call(this,n,i),e(this.element).trigger({type:n,gesture:i})}}(t.Manager.prototype.emit)}),function(e){e.fn.collapsible=function(t){var n={accordion:!0};return t=e.extend(n,t),this.each(function(){function t(e){e.parent().toggleClass("active"),e.parent().hasClass("active")?e.siblings(".collapsible-body").stop(!0,!1).slideDown({duration:350,easing:"easeOutQuart",queue:!1}):e.siblings(".collapsible-body").stop(!0,!1).slideUp({duration:350,easing:"easeOutQuart",queue:!1}),o.not(e).parent().removeClass("active"),o.not(e).parent().children(".collapsible-body").stop(!0,!1).slideUp({duration:350,easing:"easeOutQuart",queue:!1})}function i(e){e.parent().toggleClass("active"),e.parent().hasClass("active")?e.siblings(".collapsible-body").stop(!0,!1).slideDown({duration:350,easing:"easeOutQuart",queue:!1}):e.siblings(".collapsible-body").stop(!0,!1).slideUp({duration:350,easing:"easeOutQuart",queue:!1})}var o=(e(this),e(this).find(".collapsible-header"));n.accordion?(o.each(function(){e(this).click(function(){t(e(this))})}),t(o.filter(".active").first())):o.each(function(){e(this).hasClass("active")&&i(e(this)),e(this).click(function(){i(e(this))})})})}}(jQuery),function(e){e.fn.dropdown=function(t){var n={inDuration:300,outDuration:225,constrain_width:!0,hover:!0};t=e.extend(n,t),this.each(function(){function n(){var e=r.height();t.constrain_width===!0&&r.css("width",o.outerWidth()),i(o[0])?r.css({display:"block",position:"fixed",height:0,top:o.position().top,left:o.position().left}):r.css({display:"block",top:o.offset().top,left:o.offset().left,height:0}),r.velocity({opacity:1},{duration:t.inDuration,queue:!1,easing:"easeOutQuad"}).velocity({height:e},{duration:t.inDuration,queue:!1,easing:"easeOutCubic",complete:function(){r.css("overflow-y","auto")}})}function i(t){var n=e(t),i=n.add(n.parents()),o=!1;return i.each(function(){if("fixed"===e(this).css("position"))return o=!0,!1}),o}var o=e(this),r=e("#"+o.attr("data-activates"));if(r.parent().is(e("body"))||(r.detach(),e("body").append(r)),t.hover)o.on("mouseover",function(e){n()}),r.on("mouseleave",function(e){r.velocity({opacity:0},{duration:t.outDuration,easing:"easeOutQuad",complete:function(){r.css({display:"none","overflow-y":""})}})});else{o.click(function(i){i.preventDefault(),i.stopPropagation(),n(),e(document).bind("click."+r.attr("id"),function(n){r.is(n.target)||o.is(n.target)||(r.velocity({opacity:0},{duration:t.outDuration,easing:"easeOutQuad",complete:function(){r.css({display:"none","overflow-y":""})}}),e(document).unbind("click."+r.attr("id")))})})}e(document).on("resize",function(){})})}}(jQuery),function(e){e.fn.extend({openModal:function(t){var n=this,i=e('<div id="lean-overlay"></div>');e("body").append(i);var o={opacity:.5,in_duration:300,out_duration:200,ready:void 0,complete:void 0,dismissible:!0};t=e.extend(o,t),t.dismissible&&(e("#lean-overlay").click(function(){e(n).closeModal(t)}),e(document).keyup(function(i){27===i.keyCode&&(e(n).closeModal(t),e(this).off())})),e(n).find(".modal-close").click(function(i){i.preventDefault(),e(n).closeModal(t)}),e("#lean-overlay").css({display:"block",opacity:0}),e(n).css({display:"block",top:"4%",opacity:0}),e("#lean-overlay").velocity({opacity:t.opacity},{duration:t.in_duration,queue:!1,ease:"easeOutCubic"}),e(n).velocity({top:"10%",opacity:1},{duration:t.in_duration,queue:!1,ease:"easeOutCubic",complete:function(){"function"==typeof t.ready&&t.ready()}})}}),e.fn.extend({closeModal:function(t){var n={out_duration:200,complete:void 0},t=e.extend(n,t);e("#lean-overlay").velocity({opacity:0},{duration:t.out_duration,queue:!1,ease:"easeOutQuart"}),e(this).fadeOut(t.out_duration,function(){e(this).css({top:0}),e("#lean-overlay").css({display:"none"}),"function"==typeof t.complete&&t.complete()})}}),e.fn.extend({leanModal:function(t){return this.each(function(){e(this).click(function(n){var i=e(this).attr("href");e(i).openModal(t),n.preventDefault()})})}})}(jQuery),function(e){e.fn.materialbox=function(){return this.each(function(){function t(){i=!1;var t=a.parent(".material-placeholder"),o=(window.innerWidth,window.innerHeight,a.data("width")),s=a.data("height");e("#materialbox-overlay").fadeOut(r,function(){n=!1,e(this).remove()}),a.velocity({width:o,height:s,left:0,top:0},{duration:r,queue:!1,easing:"easeOutQuad"}),e(".materialbox-caption").velocity({opacity:0},{duration:r+200,queue:!1,easing:"easeOutQuad",complete:function(){t.css({height:"",width:"",position:"",top:"",left:""}),a.css({height:"",position:"",top:"",left:"",width:"","max-width":"",position:"","z-index":""}),a.removeClass("active"),i=!0,e(this).remove()}})}var n=!1,i=!0,o=275,r=200,a=e(this),s=e("<div></div>").addClass("material-placeholder");a.wrap(s),a.on("click",function(){var r=a.parent(".material-placeholder"),s=window.innerWidth,l=window.innerHeight,c=a.width(),u=a.height();if(i===!1)return!1;if(n&&i===!0)return t(),!1;i=!1,a.addClass("active"),n=!0,r.css({width:r[0].getBoundingClientRect().width,height:r[0].getBoundingClientRect().height,position:"relative",top:0,left:0}),a.css({position:"absolute","z-index":1e3}).data("width",c).data("height",u);var d=e('<div id="materialbox-overlay"></div>').css({opacity:0}).click(function(){i===!0&&t()});if(e("body").append(d),d.velocity({opacity:1},{duration:o,queue:!1,easing:"easeOutQuad"}),""!==a.data("caption")){var f=e('<div class="materialbox-caption"></div');f.text(a.data("caption")),e("body").append(f),f.css({display:"inline"}),f.velocity({opacity:1},{duration:o,queue:!1,easing:"easeOutQuad"})}var p=0,h=c/s,m=u/l,v=0,g=0;h>m?(p=u/c,v=.9*s,g=.9*s*p):(p=c/u,v=.9*l*p,g=.9*l),a.hasClass("responsive-img")?a.velocity({"max-width":v,width:c},{duration:0,queue:!1,complete:function(){a.css({left:0,top:0}).velocity({height:g,width:v,left:e(document).scrollLeft()+s/2-a.parent(".material-placeholder").offset().left-v/2,top:e(document).scrollTop()+l/2-a.parent(".material-placeholder").offset().top-g/2},{duration:o,queue:!1,easing:"easeOutQuad",complete:function(){i=!0}})}}):a.css("left",0).css("top",0).velocity({height:g,width:v,left:e(document).scrollLeft()+s/2-a.parent(".material-placeholder").offset().left-v/2,top:e(document).scrollTop()+l/2-a.parent(".material-placeholder").offset().top-g/2},{duration:o,queue:!1,easing:"easeOutQuad",complete:function(){
i=!0}})}),e(window).scroll(function(){n&&t()}),e(document).keyup(function(e){27===e.keyCode&&i===!0&&n&&t()})})}}(jQuery),function(e){e.fn.parallax=function(){var t=e(window).width();return this.each(function(n){function i(n){if(t>992){var i=o.height(),r=o.children("img").height(),a=r-i,s=o.offset().top+i,l=o.offset().top,c=e(window).scrollTop(),u=window.innerHeight,d=c+u,f=(d-l)/(i+u),p=-1*a*f;s>c&&l<c+u&&o.children("img").first().css("bottom",p+"px"),n&&o.children("img").first().show()}else o.children("img").show()}var o=e(this);o.addClass("parallax"),i(!0),e(window).scroll(function(){t=e(window).width(),i(!1)})})}}(jQuery),function(e){e.fn.tabs=function(){return this.each(function(){var t=e(this);e(window).width();t.width("100%");var n=e(this).children("li").length;t.children("li").each(function(){e(this).width(100/n+"%")});var i,o,r=t.find("li.tab a"),a=t.width(),s=t.find("li").first().outerWidth(),l=0;i=e(r.filter('[href="'+location.hash+'"]')),0===i.length&&(i=e(this).find("li.tab a.active").first()),0===i.length&&(i=e(this).find("li.tab a").first()),i.addClass("active"),l=r.index(i),l<0&&(l=0),o=e(i[0].hash),t.append('<div class="indicator"></div>');var c=t.find(".indicator");t.is(":visible")&&(c.css({right:a-(l+1)*s}),c.css({left:l*s})),e(window).resize(function(){a=t.width(),s=t.find("li").first().outerWidth(),l<0&&(l=0),0!==s&&0!==a&&(c.css({right:a-(l+1)*s}),c.css({left:l*s}))}),r.not(i).each(function(){e(this.hash).hide()}),t.on("click","a",function(n){a=t.width(),s=t.find("li").first().outerWidth(),i.removeClass("active"),o.hide(),i=e(this),o=e(this.hash),r=t.find("li.tab a"),i.addClass("active");var u=l;l=r.index(e(this)),l<0&&(l=0),o.show(),l-u>=0?(c.velocity({right:a-(l+1)*s},{duration:300,queue:!1,easing:"easeOutQuad"}),c.velocity({left:l*s},{duration:300,queue:!1,easing:"easeOutQuad",delay:80})):(c.velocity({left:l*s},{duration:300,queue:!1,easing:"easeOutQuad"}),c.velocity({right:a-(l+1)*s},{duration:300,queue:!1,easing:"easeOutQuad",delay:80})),n.preventDefault()})})}}(jQuery),function(e){var t,n,i;e.fn.tooltip=function(o){var r=5;n=!1;var a={delay:350};return o=e.extend(a,o),this.each(function(){var o=e(this),s=e("<div></div");s.addClass("material-tooltip").text(o.attr("data-tooltip")),s.appendTo(e("body"));var l=e("<div></div").addClass("backdrop");l.appendTo(s),l.css({top:0,left:0}),e(this).hover(function(e){e.stopPropagation(),t=0,i=setInterval(function(){if(t+=50,t>=a.delay&&0==n){n=!0,s.css({display:"block",left:"0px",top:"0px"});var e=o.outerWidth(),i=o.outerHeight(),c=o.attr("data-position"),u=s.outerHeight(),d=s.outerWidth(),f="0px",p="0px",h=8;"top"===c?(s.css({top:o.offset().top-u-r,left:o.offset().left+e/2-d/2}),f="-10px",l.css({borderRadius:"14px 14px 0 0",transformOrigin:"50% 90%",marginTop:u,marginLeft:d/2-l.width()/2})):"left"===c?(s.css({top:o.offset().top+i/2-u/2,left:o.offset().left-d-r}),p="-10px",l.css({width:"14px",height:"14px",borderRadius:"14px 0 0 14px",transformOrigin:"95% 50%",marginTop:u/2,marginLeft:d})):"right"===c?(s.css({top:o.offset().top+i/2-u/2,left:o.offset().left+e+r}),p="+10px",l.css({width:"14px",height:"14px",borderRadius:"0 14px 14px 0",transformOrigin:"5% 50%",marginTop:u/2,marginLeft:"0px"})):(s.css({top:o.offset().top+o.outerHeight()+r,left:o.offset().left+e/2-d/2}),console.log(o.offset().left),console.log(e/2),console.log(d/2),f="+10px",l.css({marginLeft:d/2-l.width()/2})),h=d/8,h<8&&(h=8),"right"!==c&&"left"!==c||(h=d/10,h<6&&(h=6)),s.velocity({opacity:1,marginTop:f,marginLeft:p},{duration:350,queue:!1}),l.css({display:"block"}).velocity({opacity:1},{duration:55,delay:0,queue:!1}).velocity({scale:h},{duration:300,delay:0,queue:!1,easing:"easeInOutQuad"})}},50)},function(){clearInterval(i),t=0,s.velocity({opacity:0,marginTop:0,marginLeft:0},{duration:225,queue:!1,delay:275}),l.velocity({opacity:0,scale:1},{duration:225,delay:275,queue:!1,complete:function(){l.css("display","none"),s.css("display","none"),n=!1}})})})}}(jQuery),function(e){"use strict";function t(e){return null!==e&&e===e.window}function n(e){return t(e)?e:9===e.nodeType&&e.defaultView}function i(e){var t,i,o={top:0,left:0},r=e&&e.ownerDocument;return t=r.documentElement,"undefined"!=typeof e.getBoundingClientRect&&(o=e.getBoundingClientRect()),i=n(r),{top:o.top+i.pageYOffset-t.clientTop,left:o.left+i.pageXOffset-t.clientLeft}}function o(e){var t="";for(var n in e)e.hasOwnProperty(n)&&(t+=n+":"+e[n]+";");return t}var r=r||{},a=document.querySelectorAll.bind(document),s={duration:700,show:function(e){if(2===e.button)return!1;var t=this,n=document.createElement("div");n.className="waves-ripple",t.appendChild(n);var r=i(t),a=e.pageY-r.top,s=e.pageX-r.left,l="scale("+t.clientWidth/100*22+")";"touches"in e&&(a=e.touches[0].pageY-r.top,s=e.touches[0].pageX-r.left),n.setAttribute("data-hold",Date.now()),n.setAttribute("data-scale",l),n.setAttribute("data-x",s),n.setAttribute("data-y",a);var c={top:a+"px",left:s+"px"};n.className=n.className+" waves-notransition",n.setAttribute("style",o(c)),n.className=n.className.replace("waves-notransition",""),c["-webkit-transform"]=l,c["-moz-transform"]=l,c["-ms-transform"]=l,c["-o-transform"]=l,c.transform=l,c.opacity="1",c["-webkit-transition-duration"]="cubic-bezier(0.215, 0.610, 0.355, 1.000)",c["-moz-transition-duration"]="cubic-bezier(0.215, 0.610, 0.355, 1.000)",c["-o-transition-duration"]="cubic-bezier(0.215, 0.610, 0.355, 1.000)",c["transition-duration"]="cubic-bezier(0.215, 0.610, 0.355, 1.000)",c["-webkit-transition-timing-function"]="cubic-bezier(0.215, 0.610, 0.355, 1.000)",c["-moz-transition-timing-function"]="cubic-bezier(0.215, 0.610, 0.355, 1.000)",c["-o-transition-timing-function"]="cubic-bezier(0.215, 0.610, 0.355, 1.000)",c["transition-timing-function"]="cubic-bezier(0.215, 0.610, 0.355, 1.000)",n.setAttribute("style",o(c))},hide:function(){for(var e=this,t=(1.4*e.clientWidth,null),n=e.children.length,i=0;i<n;i++)e.children[i].className.indexOf("waves-ripple")===-1||(t=e.children[i]);if(!t)return!1;var r=t.getAttribute("data-x"),a=t.getAttribute("data-y"),l=t.getAttribute("data-scale"),c=Date.now()-Number(t.getAttribute("data-hold")),u=500-c;u<0&&(u=0),setTimeout(function(){var n={top:a+"px",left:r+"px",opacity:"0","-webkit-transition-duration":s.duration+"ms","-moz-transition-duration":s.duration+"ms","-o-transition-duration":s.duration+"ms","transition-duration":s.duration+"ms","-webkit-transform":l,"-moz-transform":l,"-ms-transform":l,"-o-transform":l,transform:l};t.setAttribute("style",o(n)),setTimeout(function(){try{e.removeChild(t)}catch(n){return!1}},s.duration)},u)},wrapInput:function(e){for(var t=0;t<e.length;t++){var n=e[t];if("input"===n.tagName.toLowerCase()){var i=n.parentNode;if("i"===i.tagName.toLowerCase()&&i.className.indexOf("waves-effect")!==-1)return!1;var o=document.createElement("i");o.className=n.className+" waves-input-wrapper";var r=n.getAttribute("style");r||(r=""),o.setAttribute("style",r),n.className="waves-button-input",n.removeAttribute("style"),i.replaceChild(o,n),o.appendChild(n)}}}};r.displayEffect=function(t){t=t||{},"duration"in t&&(s.duration=t.duration),s.wrapInput(a(".waves-effect")),Array.prototype.forEach.call(a(".waves-effect"),function(t){"ontouchstart"in e&&(t.addEventListener("mouseup",s.hide,!1),t.addEventListener("touchstart",s.show,!1),t.addEventListener("mouseleave",s.hide,!1),t.addEventListener("touchend",s.hide,!1),t.addEventListener("touchcancel",s.hide,!1)),t.addEventListener("mousedown",s.show,!1),t.addEventListener("mouseup",s.hide,!1),t.addEventListener("mouseleave",s.hide,!1)})},e.Waves=r,$(document).ready(function(){r.displayEffect()})}(window),function(e){function t(e){e=e||window.event,e.preventDefault&&e.preventDefault(),e.returnValue=!1}function n(e){for(var n=a.length;n--;)if(e.keyCode===a[n])return void t(e)}function i(e){t(e)}function o(){window.addEventListener&&window.addEventListener("DOMMouseScroll",i,!1),window.onmousewheel=document.onmousewheel=i,document.onkeydown=n}function r(){window.removeEventListener&&window.removeEventListener("DOMMouseScroll",i,!1),window.onmousewheel=document.onmousewheel=document.onkeydown=null}var a=[32,33,34,35,36,37,38,39,40];e.fn.sideNav=function(t){var n={activationWidth:70,edge:"left"};t=e.extend(n,t),e(this).each(function(){function n(){e("#sidenav-overlay").animate({opacity:0},{duration:300,queue:!1,easing:"easeOutQuad",complete:function(){e(this).remove()}}),"left"===t.edge?a.velocity({left:-1*(s+10)},{duration:300,queue:!1,easing:"easeOutQuad"}):a.velocity({right:-1*(s+10)},{duration:300,queue:!1,easing:"easeOutQuad"}),r()}var i=e(this),a=e("#"+i.attr("data-activates")),s=a.width();"left"!=t.edge&&a.addClass("right-aligned"),a.hasClass("fixed")&&e(window).resize(function(){e(window).width()>1200&&a.attr("style")&&a.removeAttr("style")});var l=!1,c=!1;e("nothing").hammer({prevent_default:!1}).bind("pan",function(i){if("touch"===i.gesture.pointerType){var o=i.gesture.direction,r=i.gesture.center.x;i.gesture.center.y;if(l){if(!e("#sidenav-overlay").length){var u=e('<div id="sidenav-overlay"></div>');u.css("opacity",0).click(function(){l=!1,c=!1,n(),"left"===t.edge?a.velocity({left:-1*s},{duration:300,queue:!1,easing:"easeOutQuad"}):a.velocity({right:-1*s},{duration:300,queue:!1,easing:"easeOutQuad"}),u.animate({opacity:0},{duration:300,queue:!1,easing:"easeOutQuad",complete:function(){e(this).remove()}})}),e("body").append(u)}r>s?r=s:r<0?r=0:r<s/2?c=!1:r>=s/2&&(c=!0),"left"===t.edge?a.velocity({left:-1*s+r},{duration:50,queue:!1,easing:"easeOutQuad"}):a.velocity({right:-1*s+r},{duration:50,queue:!1,easing:"easeOutQuad"});var d=r/s;e("#sidenav-overlay").velocity({opacity:d},{duration:50,queue:!1,easing:"easeOutQuad"})}else c?i.gesture.center.x>s-t.activationWidth&&2===o&&(l=!0):i.gesture.center.x<t.activationWidth&&4===o&&(l=!0)}}).bind("panend",function(t){"touch"===t.gesture.pointerType&&(l=!1,c?(a.velocity({left:0},{duration:300,queue:!1,easing:"easeOutQuad"}),e("#sidenav-overlay").velocity({opacity:1},{duration:50,queue:!1,easing:"easeOutQuad"})):(a.velocity({left:-240},{duration:300,queue:!1,easing:"easeOutQuad"}),e("#sidenav-overlay").velocity({opacity:0},{duration:50,queue:!1,easing:"easeOutQuad",complete:function(){e(this).remove()}})))}),i.click(function(){if(a.hasClass("active"))c=!1,l=!1,n();else{o(),"left"===t.edge?a.velocity({left:0},{duration:300,queue:!1,easing:"easeOutQuad"}):a.velocity({right:0},{duration:300,queue:!1,easing:"easeOutQuad"});var i=e('<div id="sidenav-overlay"></div>');i.css("opacity",0).click(function(){c=!1,l=!1,n(),i.animate({opacity:0},{duration:300,queue:!1,easing:"easeOutQuad",complete:function(){e(this).remove()}})}),e("body").append(i),i.animate({opacity:1},{duration:300,queue:!1,easing:"easeOutQuad",complete:function(){c=!0,l=!1}})}return!1})})}}(jQuery),function(e){function t(t,n,i,o){var r=e();return e.each(a,function(e,a){if(a.height()>0){var s=a.offset().top,l=a.offset().left,c=l+a.width(),u=s+a.height(),d=!(l>n||c<o||s>i||u<t);d&&r.push(a)}}),r}function n(){++c;var n=r.scrollTop(),i=r.scrollLeft(),o=i+r.width(),a=n+r.height(),l=t(n+u.top+200,o+u.right,a+u.bottom,i+u.left);e.each(l,function(e,t){var n=t.data("scrollSpy:ticks");"number"!=typeof n&&t.triggerHandler("scrollSpy:enter"),t.data("scrollSpy:ticks",c)}),e.each(s,function(e,t){var n=t.data("scrollSpy:ticks");"number"==typeof n&&n!==c&&(t.triggerHandler("scrollSpy:exit"),t.data("scrollSpy:ticks",null))}),s=l}function i(){r.trigger("scrollSpy:winSize")}function o(e,t,n){var i,o,r,a=null,s=0;n||(n={});var l=function(){s=n.leading===!1?0:d(),a=null,r=e.apply(i,o),i=o=null};return function(){var c=d();s||n.leading!==!1||(s=c);var u=t-(c-s);return i=this,o=arguments,u<=0?(clearTimeout(a),a=null,s=c,r=e.apply(i,o),i=o=null):a||n.trailing===!1||(a=setTimeout(l,u)),r}}var r=e(window),a=[],s=[],l=!1,c=0,u={top:0,right:0,bottom:0,left:0},d=Date.now||function(){return(new Date).getTime()};e.scrollSpy=function(t,i){var s=[];t=e(t),t.each(function(t,n){a.push(e(n)),e(n).data("scrollSpy:id",t),e("a[href=#"+e(n).attr("id")+"]").click(function(t){t.preventDefault();var n=e(this.hash).offset().top+1;e(".tabs-wrapper").length?e("html, body").animate({scrollTop:n-60},{duration:400,easing:"easeOutCubic"}):e("html, body").animate({scrollTop:n},{duration:400,easing:"easeOutCubic"})})}),i=i||{throttle:100},u.top=i.offsetTop||0,u.right=i.offsetRight||0,u.bottom=i.offsetBottom||0,u.left=i.offsetLeft||0;var c=o(n,i.throttle||100),d=function(){e(document).ready(c)};return l||(r.on("scroll",d),r.on("resize",d),l=!0),setTimeout(d,0),t.on("scrollSpy:enter",function(){s=e.grep(s,function(e){return 0!=e.height()});var t=e(this);s[0]?(e("a[href=#"+s[0].attr("id")+"]").removeClass("active"),t.data("scrollSpy:id")<s[0].data("scrollSpy:id")?s.unshift(e(this)):s.push(e(this))):s.push(e(this)),e("a[href=#"+s[0].attr("id")+"]").addClass("active")}),t.on("scrollSpy:exit",function(){if(s=e.grep(s,function(e){return 0!=e.height()}),s[0]){e("a[href=#"+s[0].attr("id")+"]").removeClass("active");var t=e(this);s=e.grep(s,function(e){return e.attr("id")!=t.attr("id")}),s[0]&&e("a[href=#"+s[0].attr("id")+"]").addClass("active")}}),t},e.winSizeSpy=function(t){return e.winSizeSpy=function(){return r},t=t||{throttle:100},r.on("resize",o(i,t.throttle||100))},e.fn.scrollSpy=function(t){return e.scrollSpy(e(this),t)}}(jQuery),function(e){e(document).ready(function(){var t="input[type=text], input[type=password], input[type=email], textarea";if(e(t).each(function(){0!==e(this).val().length&&e(this).siblings("label, i").addClass("active")}),e(document).on("focus",t,function(){e(this).siblings("label, i").addClass("active")}),e(document).on("blur",t,function(){console.log(e(this).is(":valid")),0===e(this).val().length?(e(this).siblings("label, i").removeClass("active"),e(this).hasClass("validate")&&(e(this).removeClass("valid"),e(this).removeClass("invalid"))):e(this).hasClass("validate")&&(e(this).is(":valid")?(e(this).removeClass("invalid"),e(this).addClass("valid")):(e(this).removeClass("valid"),e(this).addClass("invalid")))}),0===e(".hiddendiv").length){var n=e('<div class="hiddendiv common"></div>'),i=null;e("body").append(n)}var o=(e(".hiddendiv"),".materialize-textarea");e("body").on("keyup keydown",o,function(){i=e(this).val(),i=i.replace(/\n/g,"<br>"),n.html(i+"<br>"),e(this).css("height",n.height())});var r="input[type=range]",a=!1;e(r).each(function(){var t=e('<span class="thumb"><span class="value"></span></span>');e(this).after(t)});var s=".range-field";e(document).on("mousedown",s,function(t){var n=e(this).children(".thumb");n.length<=0&&(n=e('<span class="thumb"><span class="value"></span></span>'),e(this).append(n)),a=!0,e(this).addClass("active"),n.hasClass("active")||n.velocity({height:"30px",width:"30px",top:"-20px",marginLeft:"-15px"},{duration:300,easing:"easeOutExpo"});var i=t.pageX-e(this).offset().left,o=e(this).outerWidth();i<0?i=0:i>o&&(i=o),n.addClass("active").css("left",i),n.find(".value").html(e(this).children("input[type=range]").val())}),e(document).on("mouseup",s,function(){a=!1,e(this).removeClass("active")}),e(document).on("mousemove",s,function(t){var n=e(this).children(".thumb");if(a){n.hasClass("active")||n.velocity({height:"30px",width:"30px",top:"-20px",marginLeft:"-15px"},{duration:300,easing:"easeOutExpo"});var i=t.pageX-e(this).offset().left,o=e(this).outerWidth();i<0?i=0:i>o&&(i=o),n.addClass("active").css("left",i),n.find(".value").html(e(this).children("input[type=range]").val())}}),e(document).on("mouseout",s,function(){if(!a){var t=e(this).children(".thumb");t.hasClass("active")&&t.velocity({height:"0",width:"0",top:"10px",marginLeft:"-6px"},{duration:100}),t.removeClass("active")}}),e.fn.material_select=function(){e(this).each(function(){if($select=e(this),!$select.hasClass("browser-default")&&!$select.hasClass("initialized")){var t=l(),n=e('<div class="select-wrapper"></div>'),i=e('<ul id="select-options-'+t+'" class="dropdown-content select-dropdown"></ul>'),o=$select.children("option");if(void 0!==$select.find("option:selected"))var r=$select.find("option:selected");else var r=i.first();o.each(function(){i.append(e('<li class="'+(e(this).is(":disabled")?"disabled":"")+'"><span>'+e(this).html()+"</span></li>"))}),i.find("li").each(function(t){var n=$select;e(this).click(function(){e(this).hasClass("disabled")||(n.find("option").eq(t).prop("selected",!0),"function"==typeof n.context.onchange&&n[0].onchange(),n.prev("span.select-dropdown").html(e(this).text()))})}),$select.wrap(n);var a=e('<span class="select-dropdown '+($select.is(":disabled")?"disabled":"")+'" data-activates="select-options-'+t+'">'+r.html()+"</span>");$select.before(a),e("body").append(i),$select.is(":disabled")||a.dropdown({hover:!1}),$select.addClass("initialized")}})};var l=function(){function e(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return function(){return e()+e()+"-"+e()+"-"+e()+"-"+e()+"-"+e()+e()+e()}}()})}(jQuery),function(e){e.fn.slider=function(t){var n={indicators:!0,height:400,transition:500,interval:6e3};return t=e.extend(n,t),this.each(function(){function n(e,t){e.hasClass("center-align")?e.velocity({opacity:0,translateY:-100},{duration:t,queue:!1}):e.hasClass("right-align")?e.velocity({opacity:0,translateX:100},{duration:t,queue:!1}):e.hasClass("left-align")&&e.velocity({opacity:0,translateX:-100},{duration:t,queue:!1})}function i(e){e>=s.length?e=0:e<0&&(e=s.length-1),l=a.find(".active").index(),l!=e&&(o=s.eq(l),$caption=o.find(".caption"),o.removeClass("active"),o.velocity({opacity:0},{duration:t.transition,queue:!1,easing:"easeOutQuad",complete:function(){s.not(".active").velocity({opacity:0,translateX:0,translateY:0},{duration:0,queue:!1})}}),n($caption,t.transition),t.indicators&&c.eq(l).removeClass("active"),s.eq(e).velocity({opacity:1},{duration:t.transition,queue:!1,easing:"easeOutQuad"}),s.eq(e).find(".caption").velocity({opacity:1,translateX:0,translateY:0},{duration:t.transition,delay:t.transition,queue:!1,easing:"easeOutQuad"}),s.eq(e).addClass("active"),t.indicators&&c.eq(e).addClass("active"))}var o,r=e(this),a=r.find("ul.slides").first(),s=a.find("li"),l=a.find(".active").index();if(l!=-1&&(o=s.eq(l)),r.height(t.height+40),a.height(t.height),s.find(".caption").each(function(){n(e(this),0)}),t.indicators){var c=e('<ul class="indicators"></ul>');s.each(function(n){var o=e('<li class="indicator-item"></li>');o.click(function(){var n=a.parent(),o=n.find(e(this)).index();i(o),clearInterval($interval),$interval=setInterval(function(){l=a.find(".active").index(),s.length==l+1?l=0:l+=1,i(l)},t.transition+t.interval)}),c.append(o)}),r.append(c),c=r.find("ul.indicators").find("li.indicator-item")}o?o.show():(s.first().addClass("active").velocity({opacity:1},{duration:t.transition,queue:!1,easing:"easeOutQuad"}),l=0,o=s.eq(l),t.indicators&&c.eq(l).addClass("active")),o.find("img").load(function(){o.find(".caption").velocity({opacity:1,translateX:0,translateY:0},{duration:t.transition,queue:!1,easing:"easeOutQuad"})}),$interval=setInterval(function(){l=a.find(".active").index(),i(l+1)},t.transition+t.interval);var u=!1,d=!1,f=!1;r.hammer({prevent_default:!1}).bind("pan",function(e){if("touch"===e.gesture.pointerType){clearInterval($interval);var t=e.gesture.direction,n=e.gesture.deltaX,i=e.gesture.velocityX;$curr_slide=a.find(".active"),$curr_slide.velocity({translateX:n},{duration:50,queue:!1,easing:"easeOutQuad"}),4===t&&(n>r.innerWidth()/2||i<-.65)?f=!0:2===t&&(n<-1*r.innerWidth()/2||i>.65)&&(d=!0);var o;d&&(o=$curr_slide.next(),0===o.length&&(o=s.first()),o.velocity({opacity:1},{duration:300,queue:!1,easing:"easeOutQuad"})),f&&(o=$curr_slide.prev(),0===o.length&&(o=s.last()),o.velocity({opacity:1},{duration:300,queue:!1,easing:"easeOutQuad"}))}}).bind("panend",function(e){"touch"===e.gesture.pointerType&&($curr_slide=a.find(".active"),u=!1,curr_index=a.find(".active").index(),f||d?d?(i(curr_index+1),$curr_slide.velocity({translateX:-1*r.innerWidth()},{duration:300,queue:!1,easing:"easeOutQuad",complete:function(){$curr_slide.velocity({opacity:0,translateX:0},{duration:0,queue:!1})}})):f&&(i(curr_index-1),$curr_slide.velocity({translateX:r.innerWidth()},{duration:300,queue:!1,easing:"easeOutQuad",complete:function(){$curr_slide.velocity({opacity:0,translateX:0},{duration:0,queue:!1})}})):$curr_slide.velocity({translateX:0},{duration:300,queue:!1,easing:"easeOutQuad"}),d=!1,f=!1,clearInterval($interval),$interval=setInterval(function(){l=a.find(".active").index(),s.length==l+1?l=0:l+=1,i(l)},t.transition+t.interval))})})}}(jQuery),function(e){e(document).ready(function(){e(document).on("click.card",".card",function(t){e(this).find(".card-reveal").length&&(e(t.target).is(e(".card-reveal .card-title"))||e(t.target).is(e(".card-reveal .card-title i"))?e(this).find(".card-reveal").velocity({translateY:0},{duration:300,queue:!1,easing:"easeOutQuad"}):(e(t.target).is(e(".card .card-title"))||e(t.target).is(e(".card .card-title i"))||e(t.target).is(e(".card .card-image")))&&e(this).find(".card-reveal").velocity({translateY:"-100%"},{duration:300,queue:!1,easing:"easeOutQuad"}))})})}(jQuery),function(e){e(document).ready(function(){var t=function(){function e(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return function(){return e()+e()+"-"+e()+"-"+e()+"-"+e()+"-"+e()+e()+e()}}();e.fn.pushpin=function(n){var i={top:0,bottom:1/0,offset:0};return n=e.extend(i,n),$index=0,this.each(function(){function i(e){e.removeClass("pin-top"),e.removeClass("pinned"),e.removeClass("pin-bottom")}function o(t,o){t.each(function(){n.top<=o&&n.bottom>=o&&!e(this).hasClass("pinned")&&(i(e(this)),e(this).css("top",n.offset),e(this).addClass("pinned")),o<n.top&&!e(this).hasClass("pin-top")&&(i(e(this)),e(this).css("top",0),e(this).addClass("pin-top")),o>n.bottom&&!e(this).hasClass("pin-bottom")&&(i(e(this)),e(this).addClass("pin-bottom"),e(this).css("top",n.bottom-s))})}var r=t(),a=e(this),s=e(this).offset().top;o(a,e(window).scrollTop()),e(window).on("scroll."+r,function(){var t=e(window).scrollTop()+n.offset;o(a,t)})})}})}(jQuery),function(e){"function"==typeof define&&define.amd?define("picker",["jquery"],e):"object"==typeof exports?module.exports=e(require("jquery")):this.Picker=e(jQuery)}(function(e){function t(r,a,l,d){function f(){return t._.node("div",t._.node("div",t._.node("div",t._.node("div",T.component.nodes(b.open),x.box),x.wrap),x.frame),x.holder)}function p(){S.data(a,T).addClass(x.input).attr("tabindex",-1).val(S.data("value")?T.get("select",w.format):r.value),w.editable||S.on("focus."+b.id+" click."+b.id,function(e){e.preventDefault(),T.$root[0].focus()}).on("keydown."+b.id,v),o(r,{haspopup:!0,expanded:!1,readonly:!1,owns:r.id+"_root"})}function h(){T.$root.on({keydown:v,focusin:function(e){T.$root.removeClass(x.focused),e.stopPropagation()},"mousedown click":function(t){var n=t.target;n!=T.$root.children()[0]&&(t.stopPropagation(),"mousedown"!=t.type||e(n).is("input, select, textarea, button, option")||(t.preventDefault(),T.$root[0].focus()))}}).on({focus:function(){S.addClass(x.target)},blur:function(){S.removeClass(x.target)}}).on("focus.toOpen",g).on("click","[data-pick], [data-nav], [data-clear], [data-close]",function(){var t=e(this),n=t.data(),i=t.hasClass(x.navDisabled)||t.hasClass(x.disabled),o=s();o=o&&(o.type||o.href),(i||o&&!e.contains(T.$root[0],o))&&T.$root[0].focus(),!i&&n.nav?T.set("highlight",T.component.item.highlight,{nav:n.nav}):!i&&"pick"in n?T.set("select",n.pick):n.clear?T.clear().close(!0):n.close&&T.close(!0)}),o(T.$root[0],"hidden",!0)}function m(){var t;w.hiddenName===!0?(t=r.name,r.name=""):(t=["string"==typeof w.hiddenPrefix?w.hiddenPrefix:"","string"==typeof w.hiddenSuffix?w.hiddenSuffix:"_submit"],t=t[0]+r.name+t[1]),T._hidden=e('<input type=hidden name="'+t+'"'+(S.data("value")||r.value?' value="'+T.get("select",w.formatSubmit)+'"':"")+">")[0],S.on("change."+b.id,function(){T._hidden.value=r.value?T.get("select",w.formatSubmit):""}),w.container?e(w.container).append(T._hidden):S.after(T._hidden)}function v(e){var t=e.keyCode,n=/^(8|46)$/.test(t);return 27==t?(T.close(),!1):void((32==t||n||!b.open&&T.component.key[t])&&(e.preventDefault(),e.stopPropagation(),n?T.clear().close():T.open()))}function g(e){e.stopPropagation(),"focus"==e.type&&T.$root.addClass(x.focused),T.open()}if(!r)return t;var y=!1,b={id:r.id||"P"+Math.abs(~~(Math.random()*new Date))},w=l?e.extend(!0,{},l.defaults,d):d||{},x=e.extend({},t.klasses(),w.klass),S=e(r),C=function(){return this.start()},T=C.prototype={constructor:C,$node:S,start:function(){return b&&b.start?T:(b.methods={},b.start=!0,b.open=!1,b.type=r.type,r.autofocus=r==s(),r.readOnly=!w.editable,r.id=r.id||b.id,"text"!=r.type&&(r.type="text"),T.component=new l(T,w),T.$root=e(t._.node("div",f(),x.picker,'id="'+r.id+'_root" tabindex="0"')),h(),w.formatSubmit&&m(),p(),w.container?e(w.container).append(T.$root):S.after(T.$root),T.on({start:T.component.onStart,render:T.component.onRender,stop:T.component.onStop,open:T.component.onOpen,close:T.component.onClose,set:T.component.onSet}).on({start:w.onStart,render:w.onRender,stop:w.onStop,open:w.onOpen,close:w.onClose,set:w.onSet}),y=n(T.$root.children()[0]),r.autofocus&&T.open(),T.trigger("start").trigger("render"))},render:function(e){return e?T.$root.html(f()):T.$root.find("."+x.box).html(T.component.nodes(b.open)),T.trigger("render")},stop:function(){return b.start?(T.close(),T._hidden&&T._hidden.parentNode.removeChild(T._hidden),T.$root.remove(),S.removeClass(x.input).removeData(a),setTimeout(function(){S.off("."+b.id)},0),r.type=b.type,r.readOnly=!1,T.trigger("stop"),b.methods={},b.start=!1,T):T},open:function(n){return b.open?T:(S.addClass(x.active),o(r,"expanded",!0),setTimeout(function(){T.$root.addClass(x.opened),o(T.$root[0],"hidden",!1)},0),n!==!1&&(b.open=!0,y&&u.css("overflow","hidden").css("padding-right","+="+i()),T.$root[0].focus(),c.on("click."+b.id+" focusin."+b.id,function(e){var t=e.target;t!=r&&t!=document&&3!=e.which&&T.close(t===T.$root.children()[0])}).on("keydown."+b.id,function(n){var i=n.keyCode,o=T.component.key[i],r=n.target;27==i?T.close(!0):r!=T.$root[0]||!o&&13!=i?e.contains(T.$root[0],r)&&13==i&&(n.preventDefault(),r.click()):(n.preventDefault(),o?t._.trigger(T.component.key.go,T,[t._.trigger(o)]):T.$root.find("."+x.highlighted).hasClass(x.disabled)||T.set("select",T.component.item.highlight).close())})),T.trigger("open"))},close:function(e){return e&&(T.$root.off("focus.toOpen")[0].focus(),setTimeout(function(){T.$root.on("focus.toOpen",g)},0)),S.removeClass(x.active),o(r,"expanded",!1),setTimeout(function(){T.$root.removeClass(x.opened+" "+x.focused),o(T.$root[0],"hidden",!0)},0),b.open?(b.open=!1,y&&u.css("overflow","").css("padding-right","-="+i()),c.off("."+b.id),T.trigger("close")):T},clear:function(e){return T.set("clear",null,e)},set:function(t,n,i){var o,r,a=e.isPlainObject(t),s=a?t:{};if(i=a&&e.isPlainObject(n)?n:i||{},t){a||(s[t]=n);for(o in s)r=s[o],o in T.component.item&&(void 0===r&&(r=null),T.component.set(o,r,i)),"select"!=o&&"clear"!=o||S.val("clear"==o?"":T.get(o,w.format)).trigger("change");T.render()}return i.muted?T:T.trigger("set",s)},get:function(e,n){if(e=e||"value",null!=b[e])return b[e];if("valueSubmit"==e){if(T._hidden)return T._hidden.value;e="value"}if("value"==e)return r.value;if(e in T.component.item){if("string"==typeof n){var i=T.component.get(e);return i?t._.trigger(T.component.formats.toString,T.component,[n,i]):""}return T.component.get(e)}},on:function(t,n,i){var o,r,a=e.isPlainObject(t),s=a?t:{};if(t){a||(s[t]=n);for(o in s)r=s[o],i&&(o="_"+o),b.methods[o]=b.methods[o]||[],b.methods[o].push(r)}return T},off:function(){var e,t,n=arguments;for(e=0,namesCount=n.length;e<namesCount;e+=1)t=n[e],t in b.methods&&delete b.methods[t];return T},trigger:function(e,n){var i=function(e){var i=b.methods[e];i&&i.map(function(e){t._.trigger(e,T,[n])})};return i("_"+e),i(e),T}};return new C}function n(e){var t,n="position";return e.currentStyle?t=e.currentStyle[n]:window.getComputedStyle&&(t=getComputedStyle(e)[n]),"fixed"==t}function i(){if(u.height()<=l.height())return 0;var t=e('<div style="visibility:hidden;width:100px" />').appendTo("body"),n=t[0].offsetWidth;t.css("overflow","scroll");var i=e('<div style="width:100%" />').appendTo(t),o=i[0].offsetWidth;return t.remove(),n-o}function o(t,n,i){if(e.isPlainObject(n))for(var o in n)r(t,o,n[o]);else r(t,n,i)}function r(e,t,n){e.setAttribute(("role"==t?"":"aria-")+t,n)}function a(t,n){e.isPlainObject(t)||(t={attribute:n}),n="";for(var i in t){var o=("role"==i?"":"aria-")+i,r=t[i];n+=null==r?"":o+'="'+t[i]+'"'}return n}function s(){try{return document.activeElement}catch(e){}}var l=e(window),c=e(document),u=e(document.documentElement);return t.klasses=function(e){return e=e||"picker",{picker:e,opened:e+"--opened",focused:e+"--focused",input:e+"__input",active:e+"__input--active",target:e+"__input--target",holder:e+"__holder",frame:e+"__frame",wrap:e+"__wrap",box:e+"__box"}},t._={group:function(e){for(var n,i="",o=t._.trigger(e.min,e);o<=t._.trigger(e.max,e,[o]);o+=e.i)n=t._.trigger(e.item,e,[o]),i+=t._.node(e.node,n[0],n[1],n[2]);return i},node:function(t,n,i,o){return n?(n=e.isArray(n)?n.join(""):n,i=i?' class="'+i+'"':"",o=o?" "+o:"","<"+t+i+o+">"+n+"</"+t+">"):""},lead:function(e){return(e<10?"0":"")+e},trigger:function(e,t,n){return"function"==typeof e?e.apply(t,n||[]):e},digits:function(e){return/\d/.test(e[1])?2:1},isDate:function(e){return{}.toString.call(e).indexOf("Date")>-1&&this.isInteger(e.getDate())},isInteger:function(e){return{}.toString.call(e).indexOf("Number")>-1&&e%1===0},ariaAttr:a},t.extend=function(n,i){e.fn[n]=function(o,r){var a=this.data(n);return"picker"==o?a:a&&"string"==typeof o?t._.trigger(a[o],a,[r]):this.each(function(){var r=e(this);r.data(n)||new t(this,n,i,o)})},e.fn[n].defaults=i.defaults},t}),function(e){"function"==typeof define&&define.amd?define(["picker","jquery"],e):"object"==typeof exports?module.exports=e(require("./picker.js"),require("jquery")):e(Picker,jQuery)}(function(e,t){function n(e,t){var n=this,i=e.$node[0],o=i.value,r=e.$node.data("value"),a=r||o,s=r?t.formatSubmit:t.format,l=function(){return i.currentStyle?"rtl"==i.currentStyle.direction:"rtl"==getComputedStyle(e.$root[0]).direction};n.settings=t,n.$node=e.$node,n.queue={min:"measure create",max:"measure create",now:"now create",select:"parse create validate",highlight:"parse navigate create validate",view:"parse create validate viewset",disable:"deactivate",enable:"activate"},n.item={},n.item.clear=null,n.item.disable=(t.disable||[]).slice(0),n.item.enable=-function(e){return e[0]===!0?e.shift():-1}(n.item.disable),n.set("min",t.min).set("max",t.max).set("now"),a?n.set("select",a,{format:s}):n.set("select",null).set("highlight",n.item.now),n.key={40:7,38:-7,39:function(){return l()?-1:1},37:function(){return l()?1:-1},go:function(e){var t=n.item.highlight,i=new Date(t.year,t.month,t.date+e);n.set("highlight",i,{interval:e}),this.render()}},e.on("render",function(){e.$root.find("."+t.klass.selectMonth).on("change",function(){var n=this.value;n&&(e.set("highlight",[e.get("view").year,n,e.get("highlight").date]),e.$root.find("."+t.klass.selectMonth).trigger("focus"))}),e.$root.find("."+t.klass.selectYear).on("change",function(){var n=this.value;n&&(e.set("highlight",[n,e.get("view").month,e.get("highlight").date]),e.$root.find("."+t.klass.selectYear).trigger("focus"))})},1).on("open",function(){var i="";n.disabled(n.get("now"))&&(i=":not(."+t.klass.buttonToday+")"),e.$root.find("button"+i+", select").attr("disabled",!1)},1).on("close",function(){e.$root.find("button, select").attr("disabled",!0)},1)}var i=7,o=6,r=e._;n.prototype.set=function(e,t,n){var i=this,o=i.item;return null===t?("clear"==e&&(e="select"),o[e]=t,i):(o["enable"==e?"disable":"flip"==e?"enable":e]=i.queue[e].split(" ").map(function(o){return t=i[o](e,t,n)}).pop(),"select"==e?i.set("highlight",o.select,n):"highlight"==e?i.set("view",o.highlight,n):e.match(/^(flip|min|max|disable|enable)$/)&&(o.select&&i.disabled(o.select)&&i.set("select",o.select,n),
o.highlight&&i.disabled(o.highlight)&&i.set("highlight",o.highlight,n)),i)},n.prototype.get=function(e){return this.item[e]},n.prototype.create=function(e,n,i){var o,a=this;return n=void 0===n?e:n,n==-(1/0)||n==1/0?o=n:t.isPlainObject(n)&&r.isInteger(n.pick)?n=n.obj:t.isArray(n)?(n=new Date(n[0],n[1],n[2]),n=r.isDate(n)?n:a.create().obj):n=r.isInteger(n)||r.isDate(n)?a.normalize(new Date(n),i):a.now(e,n,i),{year:o||n.getFullYear(),month:o||n.getMonth(),date:o||n.getDate(),day:o||n.getDay(),obj:o||n,pick:o||n.getTime()}},n.prototype.createRange=function(e,n){var i=this,o=function(e){return e===!0||t.isArray(e)||r.isDate(e)?i.create(e):e};return r.isInteger(e)||(e=o(e)),r.isInteger(n)||(n=o(n)),r.isInteger(e)&&t.isPlainObject(n)?e=[n.year,n.month,n.date+e]:r.isInteger(n)&&t.isPlainObject(e)&&(n=[e.year,e.month,e.date+n]),{from:o(e),to:o(n)}},n.prototype.withinRange=function(e,t){return e=this.createRange(e.from,e.to),t.pick>=e.from.pick&&t.pick<=e.to.pick},n.prototype.overlapRanges=function(e,t){var n=this;return e=n.createRange(e.from,e.to),t=n.createRange(t.from,t.to),n.withinRange(e,t.from)||n.withinRange(e,t.to)||n.withinRange(t,e.from)||n.withinRange(t,e.to)},n.prototype.now=function(e,t,n){return t=new Date,n&&n.rel&&t.setDate(t.getDate()+n.rel),this.normalize(t,n)},n.prototype.navigate=function(e,n,i){var o,r,a,s,l=t.isArray(n),c=t.isPlainObject(n),u=this.item.view;if(l||c){for(c?(r=n.year,a=n.month,s=n.date):(r=+n[0],a=+n[1],s=+n[2]),i&&i.nav&&u&&u.month!==a&&(r=u.year,a=u.month),o=new Date(r,a+(i&&i.nav?i.nav:0),1),r=o.getFullYear(),a=o.getMonth();new Date(r,a,s).getMonth()!==a;)s-=1;n=[r,a,s]}return n},n.prototype.normalize=function(e){return e.setHours(0,0,0,0),e},n.prototype.measure=function(e,t){var n=this;return t?"string"==typeof t?t=n.parse(e,t):r.isInteger(t)&&(t=n.now(e,t,{rel:t})):t="min"==e?-(1/0):1/0,t},n.prototype.viewset=function(e,t){return this.create([t.year,t.month,1])},n.prototype.validate=function(e,n,i){var o,a,s,l,c=this,u=n,d=i&&i.interval?i.interval:1,f=c.item.enable===-1,p=c.item.min,h=c.item.max,m=f&&c.item.disable.filter(function(e){if(t.isArray(e)){var i=c.create(e).pick;i<n.pick?o=!0:i>n.pick&&(a=!0)}return r.isInteger(e)}).length;if((!i||!i.nav)&&(!f&&c.disabled(n)||f&&c.disabled(n)&&(m||o||a)||!f&&(n.pick<=p.pick||n.pick>=h.pick)))for(f&&!m&&(!a&&d>0||!o&&d<0)&&(d*=-1);c.disabled(n)&&(Math.abs(d)>1&&(n.month<u.month||n.month>u.month)&&(n=u,d=d>0?1:-1),n.pick<=p.pick?(s=!0,d=1,n=c.create([p.year,p.month,p.date+(n.pick===p.pick?0:-1)])):n.pick>=h.pick&&(l=!0,d=-1,n=c.create([h.year,h.month,h.date+(n.pick===h.pick?0:1)])),!s||!l);)n=c.create([n.year,n.month,n.date+d]);return n},n.prototype.disabled=function(e){var n=this,i=n.item.disable.filter(function(i){return r.isInteger(i)?e.day===(n.settings.firstDay?i:i-1)%7:t.isArray(i)||r.isDate(i)?e.pick===n.create(i).pick:t.isPlainObject(i)?n.withinRange(i,e):void 0});return i=i.length&&!i.filter(function(e){return t.isArray(e)&&"inverted"==e[3]||t.isPlainObject(e)&&e.inverted}).length,n.item.enable===-1?!i:i||e.pick<n.item.min.pick||e.pick>n.item.max.pick},n.prototype.parse=function(e,t,n){var i=this,o={};return t&&"string"==typeof t?(n&&n.format||(n=n||{},n.format=i.settings.format),i.formats.toArray(n.format).map(function(e){var n=i.formats[e],a=n?r.trigger(n,i,[t,o]):e.replace(/^!/,"").length;n&&(o[e]=t.substr(0,a)),t=t.substr(a)}),[o.yyyy||o.yy,+(o.mm||o.m)-1,o.dd||o.d]):t},n.prototype.formats=function(){function e(e,t,n){var i=e.match(/\w+/)[0];return n.mm||n.m||(n.m=t.indexOf(i)+1),i.length}function t(e){return e.match(/\w+/)[0].length}return{d:function(e,t){return e?r.digits(e):t.date},dd:function(e,t){return e?2:r.lead(t.date)},ddd:function(e,n){return e?t(e):this.settings.weekdaysShort[n.day]},dddd:function(e,n){return e?t(e):this.settings.weekdaysFull[n.day]},m:function(e,t){return e?r.digits(e):t.month+1},mm:function(e,t){return e?2:r.lead(t.month+1)},mmm:function(t,n){var i=this.settings.monthsShort;return t?e(t,i,n):i[n.month]},mmmm:function(t,n){var i=this.settings.monthsFull;return t?e(t,i,n):i[n.month]},yy:function(e,t){return e?2:(""+t.year).slice(2)},yyyy:function(e,t){return e?4:t.year},toArray:function(e){return e.split(/(d{1,4}|m{1,4}|y{4}|yy|!.)/g)},toString:function(e,t){var n=this;return n.formats.toArray(e).map(function(e){return r.trigger(n.formats[e],n,[0,t])||e.replace(/^!/,"")}).join("")}}}(),n.prototype.isDateExact=function(e,n){var i=this;return r.isInteger(e)&&r.isInteger(n)||"boolean"==typeof e&&"boolean"==typeof n?e===n:(r.isDate(e)||t.isArray(e))&&(r.isDate(n)||t.isArray(n))?i.create(e).pick===i.create(n).pick:!(!t.isPlainObject(e)||!t.isPlainObject(n))&&(i.isDateExact(e.from,n.from)&&i.isDateExact(e.to,n.to))},n.prototype.isDateOverlap=function(e,n){var i=this,o=i.settings.firstDay?1:0;return r.isInteger(e)&&(r.isDate(n)||t.isArray(n))?(e=e%7+o,e===i.create(n).day+1):r.isInteger(n)&&(r.isDate(e)||t.isArray(e))?(n=n%7+o,n===i.create(e).day+1):!(!t.isPlainObject(e)||!t.isPlainObject(n))&&i.overlapRanges(e,n)},n.prototype.flipEnable=function(e){var t=this.item;t.enable=e||(t.enable==-1?1:-1)},n.prototype.deactivate=function(e,n){var i=this,o=i.item.disable.slice(0);return"flip"==n?i.flipEnable():n===!1?(i.flipEnable(1),o=[]):n===!0?(i.flipEnable(-1),o=[]):n.map(function(e){for(var n,a=0;a<o.length;a+=1)if(i.isDateExact(e,o[a])){n=!0;break}n||(r.isInteger(e)||r.isDate(e)||t.isArray(e)||t.isPlainObject(e)&&e.from&&e.to)&&o.push(e)}),o},n.prototype.activate=function(e,n){var i=this,o=i.item.disable,a=o.length;return"flip"==n?i.flipEnable():n===!0?(i.flipEnable(1),o=[]):n===!1?(i.flipEnable(-1),o=[]):n.map(function(e){var n,s,l,c;for(l=0;l<a;l+=1){if(s=o[l],i.isDateExact(s,e)){n=o[l]=null,c=!0;break}if(i.isDateOverlap(s,e)){t.isPlainObject(e)?(e.inverted=!0,n=e):t.isArray(e)?(n=e,n[3]||n.push("inverted")):r.isDate(e)&&(n=[e.getFullYear(),e.getMonth(),e.getDate(),"inverted"]);break}}if(n)for(l=0;l<a;l+=1)if(i.isDateExact(o[l],e)){o[l]=null;break}if(c)for(l=0;l<a;l+=1)if(i.isDateOverlap(o[l],e)){o[l]=null;break}n&&o.push(n)}),o.filter(function(e){return null!=e})},n.prototype.nodes=function(e){var t=this,n=t.settings,a=t.item,s=a.now,l=a.select,c=a.highlight,u=a.view,d=a.disable,f=a.min,p=a.max,h=function(e,t){return n.firstDay&&(e.push(e.shift()),t.push(t.shift())),r.node("thead",r.node("tr",r.group({min:0,max:i-1,i:1,node:"th",item:function(i){return[e[i],n.klass.weekdays,'scope=col title="'+t[i]+'"']}})))}((n.showWeekdaysFull?n.weekdaysFull:n.weekdaysLetter).slice(0),n.weekdaysFull.slice(0)),m=function(e){return r.node("div"," ",n.klass["nav"+(e?"Next":"Prev")]+(e&&u.year>=p.year&&u.month>=p.month||!e&&u.year<=f.year&&u.month<=f.month?" "+n.klass.navDisabled:""),"data-nav="+(e||-1)+" "+r.ariaAttr({role:"button",controls:t.$node[0].id+"_table"})+' title="'+(e?n.labelMonthNext:n.labelMonthPrev)+'"')},v=function(i){var o=n.showMonthsShort?n.monthsShort:n.monthsFull;return"short_months"==i&&(o=n.monthsShort),n.selectMonths?r.node("select",r.group({min:0,max:11,i:1,node:"option",item:function(e){return[o[e],0,"value="+e+(u.month==e?" selected":"")+(u.year==f.year&&e<f.month||u.year==p.year&&e>p.month?" disabled":"")]}}),n.klass.selectMonth,(e?"":"disabled")+" "+r.ariaAttr({controls:t.$node[0].id+"_table"})+' title="'+n.labelMonthSelect+'"'):"short_months"==i?r.node("div",o[u.month]):r.node("div",o[u.month],n.klass.month)},g=function(i){var o=u.year,a=n.selectYears===!0?5:~~(n.selectYears/2);if(a){var s=f.year,l=p.year,c=o-a,d=o+a;if(s>c&&(d+=s-c,c=s),l<d){var h=c-s,m=d-l;c-=h>m?m:h,d=l}return r.node("select",r.group({min:c,max:d,i:1,node:"option",item:function(e){return[e,0,"value="+e+(o==e?" selected":"")]}}),n.klass.selectYear,(e?"":"disabled")+" "+r.ariaAttr({controls:t.$node[0].id+"_table"})+' title="'+n.labelYearSelect+'"')}return"raw"==i?r.node("div",o):r.node("div",o,n.klass.year)};return createDayLabel=function(){return null!=l?r.node("div",l.date):r.node("div",s.date)},createWeekdayLabel=function(){var e;e=null!=l?l.day:s.day;var t=n.weekdaysFull[e];return t},r.node("div",r.node("div",createWeekdayLabel(),"picker__weekday-display")+r.node("div",v("short_months"),n.klass.month_display)+r.node("div",createDayLabel(),n.klass.day_display)+r.node("div",g("raw"),n.klass.year_display),n.klass.date_display)+r.node("div",r.node("div",(n.selectYears?g()+v():v()+g())+m()+m(1),n.klass.header)+r.node("table",h+r.node("tbody",r.group({min:0,max:o-1,i:1,node:"tr",item:function(e){var o=n.firstDay&&0===t.create([u.year,u.month,1]).day?-7:0;return[r.group({min:i*e-u.day+o+1,max:function(){return this.min+i-1},i:1,node:"td",item:function(e){e=t.create([u.year,u.month,e+(n.firstDay?1:0)]);var i=l&&l.pick==e.pick,o=c&&c.pick==e.pick,a=d&&t.disabled(e)||e.pick<f.pick||e.pick>p.pick,h=r.trigger(t.formats.toString,t,[n.format,e]);return[r.node("div",e.date,function(t){return t.push(u.month==e.month?n.klass.infocus:n.klass.outfocus),s.pick==e.pick&&t.push(n.klass.now),i&&t.push(n.klass.selected),o&&t.push(n.klass.highlighted),a&&t.push(n.klass.disabled),t.join(" ")}([n.klass.day]),"data-pick="+e.pick+" "+r.ariaAttr({role:"gridcell",label:h,selected:!(!i||t.$node.val()!==h)||null,activedescendant:!!o||null,disabled:!!a||null})),"",r.ariaAttr({role:"presentation"})]}})]}})),n.klass.table,'id="'+t.$node[0].id+'_table" '+r.ariaAttr({role:"grid",controls:t.$node[0].id,readonly:!0})),n.klass.calendar_container)+r.node("div",r.node("button",n.today,"btn-flat picker__today","type=button data-pick="+s.pick+(e&&!t.disabled(s)?"":" disabled")+" "+r.ariaAttr({controls:t.$node[0].id}))+r.node("button",n.clear,"btn-flat picker__clear","type=button data-clear=1"+(e?"":" disabled")+" "+r.ariaAttr({controls:t.$node[0].id}))+r.node("button",n.close,"btn-flat picker__close","type=button data-close=true "+(e?"":" disabled")+" "+r.ariaAttr({controls:t.$node[0].id})),n.klass.footer)},n.defaults=function(e){return{labelMonthNext:"Next month",labelMonthPrev:"Previous month",labelMonthSelect:"Select a month",labelYearSelect:"Select a year",monthsFull:["January","February","March","April","May","June","July","August","September","October","November","December"],monthsShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],weekdaysFull:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],weekdaysShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],weekdaysLetter:["S","M","T","W","T","F","S"],today:"Today",clear:"Clear",close:"Close",format:"d mmmm, yyyy",klass:{table:e+"table",header:e+"header",date_display:e+"date-display",day_display:e+"day-display",month_display:e+"month-display",year_display:e+"year-display",calendar_container:e+"calendar-container",navPrev:e+"nav--prev",navNext:e+"nav--next",navDisabled:e+"nav--disabled",month:e+"month",year:e+"year",selectMonth:e+"select--month",selectYear:e+"select--year",weekdays:e+"weekday",day:e+"day",disabled:e+"day--disabled",selected:e+"day--selected",highlighted:e+"day--highlighted",now:e+"day--today",infocus:e+"day--infocus",outfocus:e+"day--outfocus",footer:e+"footer",buttonClear:e+"button--clear",buttonToday:e+"button--today",buttonClose:e+"button--close"}}}(e.klasses().picker+"__"),e.extend("pickadate",n)}),function(e){"use strict";function t(e){return new RegExp("(^|\\s+)"+e+"(\\s+|$)")}function n(e,t){var n=i(e,t)?r:o;n(e,t)}var i,o,r;"classList"in document.documentElement?(i=function(e,t){return e.classList.contains(t)},o=function(e,t){e.classList.add(t)},r=function(e,t){e.classList.remove(t)}):(i=function(e,n){return t(n).test(e.className)},o=function(e,t){i(e,t)||(e.className=e.className+" "+t)},r=function(e,n){e.className=e.className.replace(t(n)," ")});var a={hasClass:i,addClass:o,removeClass:r,toggleClass:n,has:i,add:o,remove:r,toggle:n};"function"==typeof define&&define.amd?define(a):e.classie=a}(window),function(e){"use strict";function t(e){this.el=e,this.el.style.strokeDasharray=this.el.style.strokeDashoffset=this.el.getTotalLength()}t.prototype._draw=function(e){this.el.style.strokeDashoffset=this.el.getTotalLength()*(1-e)},t.prototype.setProgress=function(e,t){this._draw(e),t&&"function"==typeof t&&setTimeout(t,200)},t.prototype.setProgressFn=function(e){"function"==typeof e&&e(this)},e.PathLoader=t}(window),function(){function e(){var e=function(){i.animations&&this.removeEventListener(l,e),t()};window.addEventListener("scroll",n),classie.add(o,"loading"),i.animations?o.addEventListener(l,e):e()}function t(){var e=function(e){var t=0,a=setInterval(function(){if(t=Math.min(t+.1*Math.random(),1),e.setProgress(t),1===t){classie.remove(o,"loading"),classie.add(o,"loaded"),clearInterval(a);var s=function(e){if(i.animations){if(e.target!==r)return;this.removeEventListener(l,s)}classie.add(document.body,"layout-switch"),window.removeEventListener("scroll",n),setTimeout(function(){classie.add(r,"header-none")},2e3)};i.animations?r.addEventListener(l,s):s()}},80)};a.setProgressFn(e)}function n(){window.scrollTo(0,0)}var i={animations:Modernizr.cssanimations},o=document.getElementById("preloader_container"),r=o.querySelector("header.preloader_header"),a=new PathLoader(document.getElementById("preloader_loader_circle")),s={WebkitAnimation:"webkitAnimationEnd",OAnimation:"oAnimationEnd",msAnimation:"MSAnimationEnd",animation:"animationend"},l=s[Modernizr.prefixed("animation")];e()}(),"function"!=typeof Object.create&&(Object.create=function(e){function t(){}return t.prototype=e,new t}),function(e,t,n){var i={init:function(t,n){var i=this;i.$elem=e(n),i.options=e.extend({},e.fn.owlCarousel.options,i.$elem.data(),t),i.userOptions=t,i.loadContent()},loadContent:function(){function t(e){var t,n="";if("function"==typeof i.options.jsonSuccess)i.options.jsonSuccess.apply(this,[e]);else{for(t in e.owl)e.owl.hasOwnProperty(t)&&(n+=e.owl[t].item);i.$elem.html(n)}i.logIn()}var n,i=this;"function"==typeof i.options.beforeInit&&i.options.beforeInit.apply(this,[i.$elem]),"string"==typeof i.options.jsonPath?(n=i.options.jsonPath,e.getJSON(n,t)):i.logIn()},logIn:function(){var e=this;e.$elem.data("owl-originalStyles",e.$elem.attr("style")),e.$elem.data("owl-originalClasses",e.$elem.attr("class")),e.$elem.css({opacity:0}),e.orignalItems=e.options.items,e.checkBrowser(),e.wrapperWidth=0,e.checkVisible=null,e.setVars()},setVars:function(){var e=this;return 0!==e.$elem.children().length&&(e.baseClass(),e.eventTypes(),e.$userItems=e.$elem.children(),e.itemsAmount=e.$userItems.length,e.wrapItems(),e.$owlItems=e.$elem.find(".owl-item"),e.$owlWrapper=e.$elem.find(".owl-wrapper"),e.playDirection="next",e.prevItem=0,e.prevArr=[0],e.currentItem=0,e.customEvents(),void e.onStartup())},onStartup:function(){var e=this;e.updateItems(),e.calculateAll(),e.buildControls(),e.updateControls(),e.response(),e.moveEvents(),e.stopOnHover(),e.owlStatus(),e.options.transitionStyle!==!1&&e.transitionTypes(e.options.transitionStyle),e.options.autoPlay===!0&&(e.options.autoPlay=5e3),e.play(),e.$elem.find(".owl-wrapper").css("display","block"),e.$elem.is(":visible")?e.$elem.css("opacity",1):e.watchVisibility(),e.onstartup=!1,e.eachMoveUpdate(),"function"==typeof e.options.afterInit&&e.options.afterInit.apply(this,[e.$elem])},eachMoveUpdate:function(){var e=this;e.options.lazyLoad===!0&&e.lazyLoad(),e.options.autoHeight===!0&&e.autoHeight(),e.onVisibleItems(),"function"==typeof e.options.afterAction&&e.options.afterAction.apply(this,[e.$elem])},updateVars:function(){var e=this;"function"==typeof e.options.beforeUpdate&&e.options.beforeUpdate.apply(this,[e.$elem]),e.watchVisibility(),e.updateItems(),e.calculateAll(),e.updatePosition(),e.updateControls(),e.eachMoveUpdate(),"function"==typeof e.options.afterUpdate&&e.options.afterUpdate.apply(this,[e.$elem])},reload:function(){var e=this;t.setTimeout(function(){e.updateVars()},0)},watchVisibility:function(){var e=this;return e.$elem.is(":visible")===!1&&(e.$elem.css({opacity:0}),t.clearInterval(e.autoPlayInterval),t.clearInterval(e.checkVisible),void(e.checkVisible=t.setInterval(function(){e.$elem.is(":visible")&&(e.reload(),e.$elem.animate({opacity:1},200),t.clearInterval(e.checkVisible))},500)))},wrapItems:function(){var e=this;e.$userItems.wrapAll('<div class="owl-wrapper">').wrap('<div class="owl-item"></div>'),e.$elem.find(".owl-wrapper").wrap('<div class="owl-wrapper-outer">'),e.wrapperOuter=e.$elem.find(".owl-wrapper-outer"),e.$elem.css("display","block")},baseClass:function(){var e=this,t=e.$elem.hasClass(e.options.baseClass),n=e.$elem.hasClass(e.options.theme);t||e.$elem.addClass(e.options.baseClass),n||e.$elem.addClass(e.options.theme)},updateItems:function(){var t,n,i=this;if(i.options.responsive===!1)return!1;if(i.options.singleItem===!0)return i.options.items=i.orignalItems=1,i.options.itemsCustom=!1,i.options.itemsDesktop=!1,i.options.itemsDesktopSmall=!1,i.options.itemsTablet=!1,i.options.itemsTabletSmall=!1,i.options.itemsMobile=!1,!1;if(t=e(i.options.responsiveBaseWidth).width(),t>(i.options.itemsDesktop[0]||i.orignalItems)&&(i.options.items=i.orignalItems),i.options.itemsCustom!==!1)for(i.options.itemsCustom.sort(function(e,t){return e[0]-t[0]}),n=0;n<i.options.itemsCustom.length;n+=1)i.options.itemsCustom[n][0]<=t&&(i.options.items=i.options.itemsCustom[n][1]);else t<=i.options.itemsDesktop[0]&&i.options.itemsDesktop!==!1&&(i.options.items=i.options.itemsDesktop[1]),t<=i.options.itemsDesktopSmall[0]&&i.options.itemsDesktopSmall!==!1&&(i.options.items=i.options.itemsDesktopSmall[1]),t<=i.options.itemsTablet[0]&&i.options.itemsTablet!==!1&&(i.options.items=i.options.itemsTablet[1]),t<=i.options.itemsTabletSmall[0]&&i.options.itemsTabletSmall!==!1&&(i.options.items=i.options.itemsTabletSmall[1]),t<=i.options.itemsMobile[0]&&i.options.itemsMobile!==!1&&(i.options.items=i.options.itemsMobile[1]);i.options.items>i.itemsAmount&&i.options.itemsScaleUp===!0&&(i.options.items=i.itemsAmount)},response:function(){var n,i,o=this;return o.options.responsive===!0&&(i=e(t).width(),o.resizer=function(){e(t).width()!==i&&(o.options.autoPlay!==!1&&t.clearInterval(o.autoPlayInterval),t.clearTimeout(n),n=t.setTimeout(function(){i=e(t).width(),o.updateVars()},o.options.responsiveRefreshRate))},void e(t).resize(o.resizer))},updatePosition:function(){var e=this;e.jumpTo(e.currentItem),e.options.autoPlay!==!1&&e.checkAp()},appendItemsSizes:function(){var t=this,n=0,i=t.itemsAmount-t.options.items;t.$owlItems.each(function(o){var r=e(this);r.css({width:t.itemWidth}).data("owl-item",Number(o)),o%t.options.items!==0&&o!==i||o>i||(n+=1),r.data("owl-roundPages",n)})},appendWrapperSizes:function(){var e=this,t=e.$owlItems.length*e.itemWidth;e.$owlWrapper.css({width:2*t,left:0}),e.appendItemsSizes()},calculateAll:function(){var e=this;e.calculateWidth(),e.appendWrapperSizes(),e.loops(),e.max()},calculateWidth:function(){var e=this;e.itemWidth=Math.round(e.$elem.width()/e.options.items)},max:function(){var e=this,t=(e.itemsAmount*e.itemWidth-e.options.items*e.itemWidth)*-1;return e.options.items>e.itemsAmount?(e.maximumItem=0,t=0,e.maximumPixels=0):(e.maximumItem=e.itemsAmount-e.options.items,e.maximumPixels=t),t},min:function(){return 0},loops:function(){var t,n,i,o=this,r=0,a=0;for(o.positionsInArray=[0],o.pagesInArray=[],t=0;t<o.itemsAmount;t+=1)a+=o.itemWidth,o.positionsInArray.push(-a),o.options.scrollPerPage===!0&&(n=e(o.$owlItems[t]),i=n.data("owl-roundPages"),i!==r&&(o.pagesInArray[r]=o.positionsInArray[t],r=i))},buildControls:function(){var t=this;t.options.navigation!==!0&&t.options.pagination!==!0||(t.owlControls=e('<div class="owl-controls"/>').toggleClass("clickable",!t.browser.isTouch).appendTo(t.$elem)),t.options.pagination===!0&&t.buildPagination(),t.options.navigation===!0&&t.buildButtons()},buildButtons:function(){var t=this,n=e('<div class="owl-buttons"/>');t.owlControls.append(n),t.buttonPrev=e("<div/>",{"class":"owl-prev",html:t.options.navigationText[0]||""}),t.buttonNext=e("<div/>",{"class":"owl-next",html:t.options.navigationText[1]||""}),n.append(t.buttonPrev).append(t.buttonNext),n.on("touchstart.owlControls mousedown.owlControls",'div[class^="owl"]',function(e){e.preventDefault()}),n.on("touchend.owlControls mouseup.owlControls",'div[class^="owl"]',function(n){n.preventDefault(),e(this).hasClass("owl-next")?t.next():t.prev()})},buildPagination:function(){var t=this;t.paginationWrapper=e('<div class="owl-pagination"/>'),t.owlControls.append(t.paginationWrapper),t.paginationWrapper.on("touchend.owlControls mouseup.owlControls",".owl-page",function(n){n.preventDefault(),Number(e(this).data("owl-page"))!==t.currentItem&&t.goTo(Number(e(this).data("owl-page")),!0)})},updatePagination:function(){var t,n,i,o,r,a,s=this;if(s.options.pagination===!1)return!1;for(s.paginationWrapper.html(""),t=0,n=s.itemsAmount-s.itemsAmount%s.options.items,o=0;o<s.itemsAmount;o+=1)o%s.options.items===0&&(t+=1,n===o&&(i=s.itemsAmount-s.options.items),r=e("<div/>",{"class":"owl-page"}),a=e("<span></span>",{text:s.options.paginationNumbers===!0?t:"","class":s.options.paginationNumbers===!0?"owl-numbers":""}),r.append(a),r.data("owl-page",n===o?i:o),r.data("owl-roundPages",t),s.paginationWrapper.append(r));s.checkPagination()},checkPagination:function(){var t=this;return t.options.pagination!==!1&&void t.paginationWrapper.find(".owl-page").each(function(){e(this).data("owl-roundPages")===e(t.$owlItems[t.currentItem]).data("owl-roundPages")&&(t.paginationWrapper.find(".owl-page").removeClass("active"),e(this).addClass("active"))})},checkNavigation:function(){var e=this;return e.options.navigation!==!1&&void(e.options.rewindNav===!1&&(0===e.currentItem&&0===e.maximumItem?(e.buttonPrev.addClass("disabled"),e.buttonNext.addClass("disabled")):0===e.currentItem&&0!==e.maximumItem?(e.buttonPrev.addClass("disabled"),e.buttonNext.removeClass("disabled")):e.currentItem===e.maximumItem?(e.buttonPrev.removeClass("disabled"),e.buttonNext.addClass("disabled")):0!==e.currentItem&&e.currentItem!==e.maximumItem&&(e.buttonPrev.removeClass("disabled"),e.buttonNext.removeClass("disabled"))))},updateControls:function(){var e=this;e.updatePagination(),e.checkNavigation(),e.owlControls&&(e.options.items>=e.itemsAmount?e.owlControls.hide():e.owlControls.show())},destroyControls:function(){var e=this;e.owlControls&&e.owlControls.remove()},next:function(e){var t=this;if(t.isTransition)return!1;if(t.currentItem+=t.options.scrollPerPage===!0?t.options.items:1,t.currentItem>t.maximumItem+(t.options.scrollPerPage===!0?t.options.items-1:0)){if(t.options.rewindNav!==!0)return t.currentItem=t.maximumItem,!1;t.currentItem=0,e="rewind"}t.goTo(t.currentItem,e)},prev:function(e){var t=this;if(t.isTransition)return!1;if(t.options.scrollPerPage===!0&&t.currentItem>0&&t.currentItem<t.options.items?t.currentItem=0:t.currentItem-=t.options.scrollPerPage===!0?t.options.items:1,t.currentItem<0){if(t.options.rewindNav!==!0)return t.currentItem=0,!1;t.currentItem=t.maximumItem,e="rewind"}t.goTo(t.currentItem,e)},goTo:function(e,n,i){var o,r=this;return!r.isTransition&&("function"==typeof r.options.beforeMove&&r.options.beforeMove.apply(this,[r.$elem]),e>=r.maximumItem?e=r.maximumItem:e<=0&&(e=0),r.currentItem=r.owl.currentItem=e,r.options.transitionStyle!==!1&&"drag"!==i&&1===r.options.items&&r.browser.support3d===!0?(r.swapSpeed(0),r.browser.support3d===!0?r.transition3d(r.positionsInArray[e]):r.css2slide(r.positionsInArray[e],1),r.afterGo(),r.singleItemTransition(),!1):(o=r.positionsInArray[e],r.browser.support3d===!0?(r.isCss3Finish=!1,n===!0?(r.swapSpeed("paginationSpeed"),t.setTimeout(function(){r.isCss3Finish=!0},r.options.paginationSpeed)):"rewind"===n?(r.swapSpeed(r.options.rewindSpeed),t.setTimeout(function(){r.isCss3Finish=!0},r.options.rewindSpeed)):(r.swapSpeed("slideSpeed"),t.setTimeout(function(){r.isCss3Finish=!0},r.options.slideSpeed)),r.transition3d(o)):n===!0?r.css2slide(o,r.options.paginationSpeed):"rewind"===n?r.css2slide(o,r.options.rewindSpeed):r.css2slide(o,r.options.slideSpeed),void r.afterGo()))},jumpTo:function(e){var t=this;"function"==typeof t.options.beforeMove&&t.options.beforeMove.apply(this,[t.$elem]),e>=t.maximumItem||e===-1?e=t.maximumItem:e<=0&&(e=0),t.swapSpeed(0),t.browser.support3d===!0?t.transition3d(t.positionsInArray[e]):t.css2slide(t.positionsInArray[e],1),t.currentItem=t.owl.currentItem=e,t.afterGo()},afterGo:function(){var e=this;e.prevArr.push(e.currentItem),e.prevItem=e.owl.prevItem=e.prevArr[e.prevArr.length-2],e.prevArr.shift(0),e.prevItem!==e.currentItem&&(e.checkPagination(),e.checkNavigation(),e.eachMoveUpdate(),e.options.autoPlay!==!1&&e.checkAp()),"function"==typeof e.options.afterMove&&e.prevItem!==e.currentItem&&e.options.afterMove.apply(this,[e.$elem])},stop:function(){var e=this;e.apStatus="stop",t.clearInterval(e.autoPlayInterval)},checkAp:function(){var e=this;"stop"!==e.apStatus&&e.play()},play:function(){var e=this;return e.apStatus="play",e.options.autoPlay!==!1&&(t.clearInterval(e.autoPlayInterval),void(e.autoPlayInterval=t.setInterval(function(){e.next(!0)},e.options.autoPlay)))},swapSpeed:function(e){var t=this;"slideSpeed"===e?t.$owlWrapper.css(t.addCssSpeed(t.options.slideSpeed)):"paginationSpeed"===e?t.$owlWrapper.css(t.addCssSpeed(t.options.paginationSpeed)):"string"!=typeof e&&t.$owlWrapper.css(t.addCssSpeed(e))},addCssSpeed:function(e){return{"-webkit-transition":"all "+e+"ms ease","-moz-transition":"all "+e+"ms ease","-o-transition":"all "+e+"ms ease",transition:"all "+e+"ms ease"}},removeTransition:function(){return{"-webkit-transition":"","-moz-transition":"","-o-transition":"",transition:""}},doTranslate:function(e){return{"-webkit-transform":"translate3d("+e+"px, 0px, 0px)","-moz-transform":"translate3d("+e+"px, 0px, 0px)","-o-transform":"translate3d("+e+"px, 0px, 0px)","-ms-transform":"translate3d("+e+"px, 0px, 0px)",transform:"translate3d("+e+"px, 0px,0px)"}},transition3d:function(e){var t=this;t.$owlWrapper.css(t.doTranslate(e))},css2move:function(e){var t=this;t.$owlWrapper.css({left:e})},css2slide:function(e,t){var n=this;n.isCssFinish=!1,n.$owlWrapper.stop(!0,!0).animate({left:e},{duration:t||n.options.slideSpeed,complete:function(){n.isCssFinish=!0}})},checkBrowser:function(){var e,i,o,r,a=this,s="translate3d(0px, 0px, 0px)",l=n.createElement("div");l.style.cssText="  -moz-transform:"+s+"; -ms-transform:"+s+"; -o-transform:"+s+"; -webkit-transform:"+s+"; transform:"+s,e=/translate3d\(0px, 0px, 0px\)/g,i=l.style.cssText.match(e),o=null!==i&&1===i.length,r="ontouchstart"in t||t.navigator.msMaxTouchPoints,a.browser={support3d:o,isTouch:r}},moveEvents:function(){var e=this;e.options.mouseDrag===!1&&e.options.touchDrag===!1||(e.gestures(),e.disabledEvents())},eventTypes:function(){var e=this,t=["s","e","x"];e.ev_types={},e.options.mouseDrag===!0&&e.options.touchDrag===!0?t=["touchstart.owl mousedown.owl","touchmove.owl mousemove.owl","touchend.owl touchcancel.owl mouseup.owl"]:e.options.mouseDrag===!1&&e.options.touchDrag===!0?t=["touchstart.owl","touchmove.owl","touchend.owl touchcancel.owl"]:e.options.mouseDrag===!0&&e.options.touchDrag===!1&&(t=["mousedown.owl","mousemove.owl","mouseup.owl"]),e.ev_types.start=t[0],e.ev_types.move=t[1],e.ev_types.end=t[2]},disabledEvents:function(){var t=this;t.$elem.on("dragstart.owl",function(e){e.preventDefault()}),t.$elem.on("mousedown.disableTextSelect",function(t){return e(t.target).is("input, textarea, select, option")})},gestures:function(){function i(e){if(void 0!==e.touches)return{x:e.touches[0].pageX,y:e.touches[0].pageY};if(void 0===e.touches){if(void 0!==e.pageX)return{x:e.pageX,y:e.pageY};if(void 0===e.pageX)return{x:e.clientX,y:e.clientY}}}function o(t){"on"===t?(e(n).on(l.ev_types.move,a),e(n).on(l.ev_types.end,s)):"off"===t&&(e(n).off(l.ev_types.move),e(n).off(l.ev_types.end))}function r(n){var r,a=n.originalEvent||n||t.event;if(3===a.which)return!1;if(!(l.itemsAmount<=l.options.items)){if(l.isCssFinish===!1&&!l.options.dragBeforeAnimFinish)return!1;if(l.isCss3Finish===!1&&!l.options.dragBeforeAnimFinish)return!1;l.options.autoPlay!==!1&&t.clearInterval(l.autoPlayInterval),l.browser.isTouch===!0||l.$owlWrapper.hasClass("grabbing")||l.$owlWrapper.addClass("grabbing"),l.newPosX=0,l.newRelativeX=0,e(this).css(l.removeTransition()),r=e(this).position(),c.relativePos=r.left,c.offsetX=i(a).x-r.left,c.offsetY=i(a).y-r.top,o("on"),c.sliding=!1,c.targetElement=a.target||a.srcElement}}function a(o){var r,a,s=o.originalEvent||o||t.event;l.newPosX=i(s).x-c.offsetX,l.newPosY=i(s).y-c.offsetY,l.newRelativeX=l.newPosX-c.relativePos,"function"==typeof l.options.startDragging&&c.dragging!==!0&&0!==l.newRelativeX&&(c.dragging=!0,l.options.startDragging.apply(l,[l.$elem])),(l.newRelativeX>8||l.newRelativeX<-8)&&l.browser.isTouch===!0&&(void 0!==s.preventDefault?s.preventDefault():s.returnValue=!1,c.sliding=!0),(l.newPosY>10||l.newPosY<-10)&&c.sliding===!1&&e(n).off("touchmove.owl"),r=function(){return l.newRelativeX/5},a=function(){return l.maximumPixels+l.newRelativeX/5},l.newPosX=Math.max(Math.min(l.newPosX,r()),a()),l.browser.support3d===!0?l.transition3d(l.newPosX):l.css2move(l.newPosX)}function s(n){var i,r,a,s=n.originalEvent||n||t.event;s.target=s.target||s.srcElement,c.dragging=!1,l.browser.isTouch!==!0&&l.$owlWrapper.removeClass("grabbing"),l.newRelativeX<0?l.dragDirection=l.owl.dragDirection="left":l.dragDirection=l.owl.dragDirection="right",0!==l.newRelativeX&&(i=l.getNewPosition(),l.goTo(i,!1,"drag"),c.targetElement===s.target&&l.browser.isTouch!==!0&&(e(s.target).on("click.disable",function(t){t.stopImmediatePropagation(),t.stopPropagation(),t.preventDefault(),e(t.target).off("click.disable")}),r=e._data(s.target,"events").click,a=r.pop(),r.splice(0,0,a))),o("off")}var l=this,c={offsetX:0,offsetY:0,baseElWidth:0,relativePos:0,position:null,minSwipe:null,maxSwipe:null,sliding:null,dargging:null,targetElement:null};l.isCssFinish=!0,l.$elem.on(l.ev_types.start,".owl-wrapper",r)},getNewPosition:function(){var e=this,t=e.closestItem();return t>e.maximumItem?(e.currentItem=e.maximumItem,t=e.maximumItem):e.newPosX>=0&&(t=0,e.currentItem=0),t},closestItem:function(){var t=this,n=t.options.scrollPerPage===!0?t.pagesInArray:t.positionsInArray,i=t.newPosX,o=null;return e.each(n,function(r,a){i-t.itemWidth/20>n[r+1]&&i-t.itemWidth/20<a&&"left"===t.moveDirection()?(o=a,t.options.scrollPerPage===!0?t.currentItem=e.inArray(o,t.positionsInArray):t.currentItem=r):i+t.itemWidth/20<a&&i+t.itemWidth/20>(n[r+1]||n[r]-t.itemWidth)&&"right"===t.moveDirection()&&(t.options.scrollPerPage===!0?(o=n[r+1]||n[n.length-1],t.currentItem=e.inArray(o,t.positionsInArray)):(o=n[r+1],t.currentItem=r+1))}),t.currentItem},moveDirection:function(){var e,t=this;return t.newRelativeX<0?(e="right",t.playDirection="next"):(e="left",t.playDirection="prev"),e},customEvents:function(){var e=this;e.$elem.on("owl.next",function(){e.next()}),e.$elem.on("owl.prev",function(){e.prev()}),e.$elem.on("owl.play",function(t,n){e.options.autoPlay=n,e.play(),e.hoverStatus="play"}),e.$elem.on("owl.stop",function(){e.stop(),e.hoverStatus="stop"}),e.$elem.on("owl.goTo",function(t,n){e.goTo(n)}),e.$elem.on("owl.jumpTo",function(t,n){e.jumpTo(n)})},stopOnHover:function(){var e=this;e.options.stopOnHover===!0&&e.browser.isTouch!==!0&&e.options.autoPlay!==!1&&(e.$elem.on("mouseover",function(){e.stop()}),e.$elem.on("mouseout",function(){"stop"!==e.hoverStatus&&e.play()}))},lazyLoad:function(){var t,n,i,o,r,a=this;if(a.options.lazyLoad===!1)return!1;for(t=0;t<a.itemsAmount;t+=1)n=e(a.$owlItems[t]),"loaded"!==n.data("owl-loaded")&&(i=n.data("owl-item"),o=n.find(".lazyOwl"),"string"==typeof o.data("src")?(void 0===n.data("owl-loaded")&&(o.hide(),n.addClass("loading").data("owl-loaded","checked")),r=a.options.lazyFollow!==!0||i>=a.currentItem,r&&i<a.currentItem+a.options.items&&o.length&&a.lazyPreload(n,o)):n.data("owl-loaded","loaded"))},lazyPreload:function(e,n){function i(){e.data("owl-loaded","loaded").removeClass("loading"),n.removeAttr("data-src"),"fade"===a.options.lazyEffect?n.fadeIn(400):n.show(),"function"==typeof a.options.afterLazyLoad&&a.options.afterLazyLoad.apply(this,[a.$elem])}function o(){s+=1,a.completeImg(n.get(0))||r===!0?i():s<=100?t.setTimeout(o,100):i();
}var r,a=this,s=0;"DIV"===n.prop("tagName")?(n.css("background-image","url("+n.data("src")+")"),r=!0):n[0].src=n.data("src"),o()},autoHeight:function(){function n(){var n=e(r.$owlItems[r.currentItem]).height();r.wrapperOuter.css("height",n+"px"),r.wrapperOuter.hasClass("autoHeight")||t.setTimeout(function(){r.wrapperOuter.addClass("autoHeight")},0)}function i(){o+=1,r.completeImg(a.get(0))?n():o<=100?t.setTimeout(i,100):r.wrapperOuter.css("height","")}var o,r=this,a=e(r.$owlItems[r.currentItem]).find("img");void 0!==a.get(0)?(o=0,i()):n()},completeImg:function(e){var t;return!!e.complete&&(t=typeof e.naturalWidth,"undefined"===t||0!==e.naturalWidth)},onVisibleItems:function(){var t,n=this;for(n.options.addClassActive===!0&&n.$owlItems.removeClass("active"),n.visibleItems=[],t=n.currentItem;t<n.currentItem+n.options.items;t+=1)n.visibleItems.push(t),n.options.addClassActive===!0&&e(n.$owlItems[t]).addClass("active");n.owl.visibleItems=n.visibleItems},transitionTypes:function(e){var t=this;t.outClass="owl-"+e+"-out",t.inClass="owl-"+e+"-in"},singleItemTransition:function(){function e(e){return{position:"relative",left:e+"px"}}var t=this,n=t.outClass,i=t.inClass,o=t.$owlItems.eq(t.currentItem),r=t.$owlItems.eq(t.prevItem),a=Math.abs(t.positionsInArray[t.currentItem])+t.positionsInArray[t.prevItem],s=Math.abs(t.positionsInArray[t.currentItem])+t.itemWidth/2,l="webkitAnimationEnd oAnimationEnd MSAnimationEnd animationend";t.isTransition=!0,t.$owlWrapper.addClass("owl-origin").css({"-webkit-transform-origin":s+"px","-moz-perspective-origin":s+"px","perspective-origin":s+"px"}),r.css(e(a,10)).addClass(n).on(l,function(){t.endPrev=!0,r.off(l),t.clearTransStyle(r,n)}),o.addClass(i).on(l,function(){t.endCurrent=!0,o.off(l),t.clearTransStyle(o,i)})},clearTransStyle:function(e,t){var n=this;e.css({position:"",left:""}).removeClass(t),n.endPrev&&n.endCurrent&&(n.$owlWrapper.removeClass("owl-origin"),n.endPrev=!1,n.endCurrent=!1,n.isTransition=!1)},owlStatus:function(){var e=this;e.owl={userOptions:e.userOptions,baseElement:e.$elem,userItems:e.$userItems,owlItems:e.$owlItems,currentItem:e.currentItem,prevItem:e.prevItem,visibleItems:e.visibleItems,isTouch:e.browser.isTouch,browser:e.browser,dragDirection:e.dragDirection}},clearEvents:function(){var i=this;i.$elem.off(".owl owl mousedown.disableTextSelect"),e(n).off(".owl owl"),e(t).off("resize",i.resizer)},unWrap:function(){var e=this;0!==e.$elem.children().length&&(e.$owlWrapper.unwrap(),e.$userItems.unwrap().unwrap(),e.owlControls&&e.owlControls.remove()),e.clearEvents(),e.$elem.attr("style",e.$elem.data("owl-originalStyles")||"").attr("class",e.$elem.data("owl-originalClasses"))},destroy:function(){var e=this;e.stop(),t.clearInterval(e.checkVisible),e.unWrap(),e.$elem.removeData()},reinit:function(t){var n=this,i=e.extend({},n.userOptions,t);n.unWrap(),n.init(i,n.$elem)},addItem:function(e,t){var n,i=this;return!!e&&(0===i.$elem.children().length?(i.$elem.append(e),i.setVars(),!1):(i.unWrap(),n=void 0===t||t===-1?-1:t,n>=i.$userItems.length||n===-1?i.$userItems.eq(-1).after(e):i.$userItems.eq(n).before(e),void i.setVars()))},removeItem:function(e){var t,n=this;return 0!==n.$elem.children().length&&(t=void 0===e||e===-1?-1:e,n.unWrap(),n.$userItems.eq(t).remove(),void n.setVars())}};e.fn.owlCarousel=function(t){return this.each(function(){if(e(this).data("owl-init")===!0)return!1;e(this).data("owl-init",!0);var n=Object.create(i);n.init(t,this),e.data(this,"owlCarousel",n)})},e.fn.owlCarousel.options={items:5,itemsCustom:!1,itemsDesktop:[1199,4],itemsDesktopSmall:[979,3],itemsTablet:[768,2],itemsTabletSmall:!1,itemsMobile:[479,1],singleItem:!1,itemsScaleUp:!1,slideSpeed:200,paginationSpeed:800,rewindSpeed:1e3,autoPlay:!1,stopOnHover:!1,navigation:!1,navigationText:["prev","next"],rewindNav:!0,scrollPerPage:!1,pagination:!0,paginationNumbers:!1,responsive:!0,responsiveRefreshRate:200,responsiveBaseWidth:t,baseClass:"owl-carousel",theme:"owl-theme",lazyLoad:!1,lazyFollow:!0,lazyEffect:"fade",autoHeight:!1,jsonPath:!1,jsonSuccess:!1,dragBeforeAnimFinish:!0,mouseDrag:!0,touchDrag:!0,addClassActive:!1,transitionStyle:!1,beforeUpdate:!1,afterUpdate:!1,beforeInit:!1,afterInit:!1,beforeMove:!1,afterMove:!1,afterAction:!1,startDragging:!1,afterLazyLoad:!1}}(jQuery,window,document),!function(e,t){"function"==typeof define&&define.amd?define([],t(e)):"object"==typeof exports?module.exports=t(e):e.smoothScroll=t(e)}("undefined"!=typeof global?global:this.window||this.global,function(e){"use strict";var t,n,i,o,r,a={},s="querySelector"in document&&"addEventListener"in e,l={selector:"[data-scroll]",selectorHeader:"[data-scroll-header]",speed:500,easing:"easeInOutCubic",offset:0,updateURL:!0,callback:function(){}},c=function(){var e={},t=!1,n=0,i=arguments.length;"[object Boolean]"===Object.prototype.toString.call(arguments[0])&&(t=arguments[0],n++);for(var o=function(n){for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t&&"[object Object]"===Object.prototype.toString.call(n[i])?e[i]=c(!0,e[i],n[i]):e[i]=n[i])};i>n;n++){var r=arguments[n];o(r)}return e},u=function(e){return Math.max(e.scrollHeight,e.offsetHeight,e.clientHeight)},d=function(e,t){var n,i,o=t.charAt(0),r="classList"in document.documentElement;for("["===o&&(t=t.substr(1,t.length-2),n=t.split("="),n.length>1&&(i=!0,n[1]=n[1].replace(/"/g,"").replace(/'/g,"")));e&&e!==document&&1===e.nodeType;e=e.parentNode){if("."===o)if(r){if(e.classList.contains(t.substr(1)))return e}else if(new RegExp("(^|\\s)"+t.substr(1)+"(\\s|$)").test(e.className))return e;if("#"===o&&e.id===t.substr(1))return e;if("["===o&&e.hasAttribute(n[0])){if(!i)return e;if(e.getAttribute(n[0])===n[1])return e}if(e.tagName.toLowerCase()===t)return e}return null};a.escapeCharacters=function(e){"#"===e.charAt(0)&&(e=e.substr(1));for(var t,n=String(e),i=n.length,o=-1,r="",a=n.charCodeAt(0);++o<i;){if(t=n.charCodeAt(o),0===t)throw new InvalidCharacterError("Invalid character: the input contains U+0000.");r+=t>=1&&31>=t||127==t||0===o&&t>=48&&57>=t||1===o&&t>=48&&57>=t&&45===a?"\\"+t.toString(16)+" ":t>=128||45===t||95===t||t>=48&&57>=t||t>=65&&90>=t||t>=97&&122>=t?n.charAt(o):"\\"+n.charAt(o)}return"#"+r};var f=function(e,t){var n;return"easeInQuad"===e&&(n=t*t),"easeOutQuad"===e&&(n=t*(2-t)),"easeInOutQuad"===e&&(n=.5>t?2*t*t:-1+(4-2*t)*t),"easeInCubic"===e&&(n=t*t*t),"easeOutCubic"===e&&(n=--t*t*t+1),"easeInOutCubic"===e&&(n=.5>t?4*t*t*t:(t-1)*(2*t-2)*(2*t-2)+1),"easeInQuart"===e&&(n=t*t*t*t),"easeOutQuart"===e&&(n=1- --t*t*t*t),"easeInOutQuart"===e&&(n=.5>t?8*t*t*t*t:1-8*--t*t*t*t),"easeInQuint"===e&&(n=t*t*t*t*t),"easeOutQuint"===e&&(n=1+--t*t*t*t*t),"easeInOutQuint"===e&&(n=.5>t?16*t*t*t*t*t:1+16*--t*t*t*t*t),n||t},p=function(e,t,n){var i=0;if(e.offsetParent)do i+=e.offsetTop,e=e.offsetParent;while(e);return i=Math.max(i-t-n,0),Math.min(i,m()-h())},h=function(){return Math.max(document.documentElement.clientHeight,window.innerHeight||0)},m=function(){return Math.max(e.document.body.scrollHeight,e.document.documentElement.scrollHeight,e.document.body.offsetHeight,e.document.documentElement.offsetHeight,e.document.body.clientHeight,e.document.documentElement.clientHeight)},v=function(e){return e&&"object"==typeof JSON&&"function"==typeof JSON.parse?JSON.parse(e):{}},g=function(t,n){e.history.pushState&&(n||"true"===n)&&"file:"!==e.location.protocol&&e.history.pushState(null,null,[e.location.protocol,"//",e.location.host,e.location.pathname,e.location.search,t].join(""))},y=function(e){return null===e?0:u(e)+e.offsetTop};a.animateScroll=function(n,a,s){var u=v(a?a.getAttribute("data-options"):null),d=c(t||l,s||{},u),h="[object Number]"===Object.prototype.toString.call(n),b=h?null:"#"===n?e.document.documentElement:e.document.querySelector(n);if(h||b){var w=e.pageYOffset;i||(i=e.document.querySelector(d.selectorHeader)),o||(o=y(i));var x,S,C=h?n:p(b,o,parseInt(d.offset,10)),T=C-w,k=m(),I=0;h||g(n,d.updateURL);var E=function(t,i,o){var r=e.pageYOffset;(t==i||r==i||e.innerHeight+r>=k)&&(clearInterval(o),h||b.focus(),d.callback(n,a))},O=function(){I+=16,x=I/parseInt(d.speed,10),x=x>1?1:x,S=w+T*f(d.easing,x),e.scrollTo(0,Math.floor(S)),E(S,C,r)},P=function(){clearInterval(r),r=setInterval(O,16)};0===e.pageYOffset&&e.scrollTo(0,0),P()}};var b=function(e){if(0===e.button&&!e.metaKey&&!e.ctrlKey){var n=d(e.target,t.selector);if(n&&"a"===n.tagName.toLowerCase()){if(n.origin!==location.origin||n.pathname!==location.pathname)return;e.preventDefault();var i=a.escapeCharacters(n.hash);a.animateScroll(i,n,t)}}},w=function(e){n||(n=setTimeout(function(){n=null,o=y(i)},66))};return a.destroy=function(){t&&(e.document.removeEventListener("click",b,!1),e.removeEventListener("resize",w,!1),t=null,n=null,i=null,o=null,r=null)},a.init=function(n){s&&(a.destroy(),t=c(l,n||{}),i=e.document.querySelector(t.selectorHeader),o=y(i),e.document.addEventListener("click",b,!1),i&&e.addEventListener("resize",w,!1))},a}),function(e){var t={init:function(){t.Reviews(),t.Elements_animation()},Elements_animation:function(){e("#more_info").waypoint(function(){setTimeout(function(){e(".content_anim1").addClass("animated fadeInUp")},0),setTimeout(function(){e(".content_anim2").addClass("animated fadeInUp")},200),setTimeout(function(){e(".content_anim3").addClass("animated fadeInUp")},400)},{offset:"50%"}),e("#speakers").waypoint(function(){setTimeout(function(){e(".animate-title").addClass("animated fadeInUp")},0),setTimeout(function(){e(".animate-first-row").addClass("animated fadeInUp")},200),setTimeout(function(){e(".animate-last-row").addClass("animated fadeInUp")},400)},{offset:"50%"}),e("#features").waypoint(function(){setTimeout(function(){e(".content_anim4").addClass("animated fadeInUp")},0),setTimeout(function(){e(".content_anim5").addClass("animated fadeInUp")},200),setTimeout(function(){e(".content_anim6").addClass("animated fadeInUp")},400),setTimeout(function(){e(".content_anim7").addClass("animated fadeInUp")},600)},{offset:"50%"}),e("#bytes").waypoint(function(){setTimeout(function(){e(".content_animation_medium").addClass("animated fadeInUp")},0)},{offset:"50%"}),e("#sponsorship").waypoint(function(){setTimeout(function(){e(".content_anim8").addClass("animated fadeInUp")},0),setTimeout(function(){e(".content_anim9").addClass("animated fadeInUp")},200),setTimeout(function(){e(".content_anim10").addClass("animated fadeInUp")},400),setTimeout(function(){e(".content_anim11").addClass("animated fadeInUp")},600),setTimeout(function(){e(".content_anim12").addClass("animated fadeInUp")},800),setTimeout(function(){e(".content_anim13").addClass("animated fadeInUp")},1e3),setTimeout(function(){e(".content_anim14").addClass("animated fadeInUp")},1200)},{offset:"50%"}),e("#testimonials").waypoint(function(){setTimeout(function(){e(".content_anim26").addClass("animated fadeInUp")},0)},{offset:"50%"}),e("#faq").waypoint(function(){setTimeout(function(){e(".content_anim27").addClass("animated fadeInUp")},0),setTimeout(function(){e(".content_anim28").addClass("animated fadeInUp")},200),setTimeout(function(){e(".content_anim29").addClass("animated fadeInUp")},400)},{offset:"50%"})},Reviews:function(){e(".owl-carousel").owlCarousel({loop:!0,singleItem:!0})}};e(function(){t.init(),e(window).resize()})}(jQuery);
//# sourceMappingURL=data:application/json;base64,
